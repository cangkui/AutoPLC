{"variables": [], "instructions": [], "planning": "- 概述\n  该功能块 `NET_VAR_CONTROL` 用于通过网络控制变量传输。它支持主从模式（MASTER/SLAVE）和UDP协议，并通过状态机管理数据传输过程。功能块还包含错误处理和看门狗机制，确保系统的稳定性和可靠性。\n\n- 变量定义\n  代码中定义了以下几类变量：\n  - 输入变量：ACTIVATE（激活控制）、MASTER（主从模式）、UDP（UDP协议）、REMOTE_IP4（远程IP地址）、REMOTE_PORT（远程端口）、SCAN_TIME（扫描时间）、WATCHDOG（看门狗超时时间）。\n  - 输出变量：RUN（运行状态）、ERROR（错误代码）。\n  - 输入输出变量：X（网络变量数据结构，包含缓冲区、状态、错误ID等信息）。\n  - 内部变量：IPC（IP控制实例）、IP_C（IP控制管理结构）、step（状态机步骤）、activate_last（上一次激活状态）、tscan（定时器实例）、reset（重置标志）。\n\n- - 主逻辑部分\n  -- REGION 错误处理\n     如果 `X.ERROR_ID` 大于0，表示发生了错误。此时，将 `X.STATE` 设置为0，将错误代码转换为DWORD并输出到 `ERROR`，然后清除 `X.ERROR_ID`，并将状态机步骤 `step` 设置为999（错误处理状态）。这一步骤确保在发生错误时，功能块能够及时响应并停止运行。\n\n  -- REGION 状态机\n     状态机通过 `step` 变量控制功能块的执行流程，具体步骤如下：\n\n     - **步骤00（初始化）**：\n       如果 `ACTIVATE` 为真且 `activate_last` 为假，或者 `reset` 为真，表示需要初始化。根据 `MASTER` 和 `UDP` 的设置，初始化 `IP_C` 结构：\n       - 如果 `MASTER` 为真，设置 `IP_C.C_MODE` 为0（主模式），并跳转到步骤100。\n       - 如果 `MASTER` 为假，设置 `IP_C.C_MODE` 为2（从模式），并跳转到步骤200。\n       - 如果 `UDP` 为真，将 `IP_C.C_MODE` 的最低位设置为1（启用UDP协议）。\n       此外，设置远程端口 `IP_C.C_PORT`、远程IP地址 `IP_C.C_IP`，启用 `IP_C.C_ENABLE` 和 `IP_C.R_OBSERVE`，并设置 `IP_C.TIME_RESET` 为真。同时，清空发送和接收缓冲区的大小，重置循环计数器 `X.CYCLE` 和错误ID `X.ERROR_ID`，并将 `reset` 设置为假。\n\n     - **步骤100（主模式准备）**：\n       如果 `IP_C.C_STATE` 大于127，表示主模式已准备好。此时，设置 `X.STATE` 为1（准备发送），初始化发送缓冲区，并将 `X.BUF_SIZE` 设置为发送缓冲区的大小。同时，将循环计数器 `X.CYCLE` 的第一个字节存入发送缓冲区，并将 `X.INDEX` 设置为1，跳转到步骤110。\n\n     - **步骤110（主模式发送）**：\n       设置 `X.STATE` 为0（空闲），更新发送缓冲区的大小为 `X.INDEX`，并跳转到步骤120。\n\n     - **步骤120（主模式接收）**：\n       如果发送缓冲区大小为0且接收缓冲区大小大于等于1，表示数据传输完成。此时，设置 `X.STATE` 为2（准备接收），更新 `X.BUF_SIZE` 为接收缓冲区的大小，将 `X.INDEX` 设置为1，清除错误代码 `X.ERROR_ID`，增加循环计数器 `X.CYCLE`，设置 `ERROR` 为0，并将 `RUN` 设置为真，跳转到步骤130。\n\n     - **步骤130（主模式循环）**：\n       设置 `X.STATE` 为0（空闲），清空接收缓冲区。如果 `ACTIVATE` 为假，跳转到步骤999（结束状态）；如果 `tscan` 定时器超时，跳转到步骤100，重新开始主模式的循环。\n\n     - **步骤200（从模式接收）**：\n       如果接收缓冲区大小大于等于1，表示从模式已接收到数据。此时，设置 `X.STATE` 为2（准备接收），更新 `X.BUF_SIZE` 为接收缓冲区的大小，将 `X.INDEX` 设置为1，跳转到步骤210。\n\n     - **步骤210（从模式发送）**：\n       设置 `X.STATE` 为1（准备发送），初始化发送缓冲区，将接收缓冲区的第一个字节存入发送缓冲区，清空接收缓冲区，并将 `X.INDEX` 设置为1，跳转到步骤220。\n\n     - **步骤220（从模式发送完成）**：\n       设置 `X.STATE` 为0（空闲），更新发送缓冲区的大小为 `X.INDEX`，跳转到步骤230。\n\n     - **步骤230（从模式循环）**：\n       如果发送缓冲区大小为0，表示数据传输完成。此时，清除错误代码 `ERROR`，设置 `RUN` 为真。如果 `ACTIVATE` 为假，跳转到步骤999；否则，跳转到步骤200，重新开始从模式的循环。\n\n     - **步骤999（结束状态）**：\n       禁用 `IP_C.C_ENABLE`，设置 `RUN` 为假，并将 `step` 重置为0，表示功能块停止运行。\n\n  -- REGION IP控制与错误处理\n     调用 `IPC` 实例，传入IP地址、端口、看门狗超时时间、IP控制结构、发送缓冲区和接收缓冲区。如果 `IP_C.ERROR` 大于0，表示IP控制发生错误，将错误代码输出到 `ERROR`，设置 `RUN` 为假，设置 `reset` 为真，并将 `step` 重置为0。这一步骤确保在IP控制发生错误时，功能块能够及时停止并重置状态。\n\n  -- REGION 激活状态跟踪与定时器\n     更新 `activate_last` 为当前 `ACTIVATE` 状态，用于边缘检测。启动 `tscan` 定时器，当 `step` 不等于110时，定时器开始计时，超时时间为 `SCAN_TIME`。这一步骤用于控制主模式的循环频率，确保数据传输的周期性。", "name": "NET_VAR_CONTROL"}