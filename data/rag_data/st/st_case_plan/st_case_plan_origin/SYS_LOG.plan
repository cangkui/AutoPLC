{"variables": [], "instructions": [], "planning": "- 概述\n这个功能块名为 `SYS_LOG`，用于处理系统日志的发送。它通过输入参数配置日志消息的格式和内容，并通过网络发送到指定的服务器。功能块使用状态机来控制日志发送的流程，并通过输出参数指示操作是否完成或是否发生错误。\n\n- 变量定义\n代码中定义了以下几类变量：\n - `VAR_IN_OUT`：用于输入输出的变量，包括 `IP_C`（IP控制结构）、`S_BUF`（发送缓冲区）和 `R_BUF`（接收缓冲区）。\n - `VAR_INPUT`：输入变量，包括 `ACTIVATE`（激活信号）、`LOC_DT`（本地日期时间）、`SERVER_IP4`（服务器IP地址）、`PORT`（端口号）、`FACILITY`（日志设施）、`SEVERITY`（日志严重性）、`TAG`（日志标签）、`HOSTNAME`（主机名）、`MESSAGE`（日志消息）、`OPTION`（选项标志）。\n - `VAR_OUTPUT`：输出变量，包括 `DONE_P`（操作完成标志）和 `ERROR`（错误代码）。\n - `VAR`：内部变量，包括 `ip_state`（IP状态）、`ip_id`（IP标识符）、`IP_FIFO`（IP FIFO结构）、`activate_last`（上一个激活信号）、`state`（状态机状态）、`s1`（临时字符串）、`i`（临时整数）。\n\n- - 主逻辑部分\n-- REGION 状态机\n   功能块的核心逻辑通过状态机实现，状态机由 `state` 变量控制，分为多个状态：\n   - **状态 00**：等待激活信号。\n     - 如果检测到激活信号的上升沿（即 `ACTIVATE` 为真且 `ACTIVATE_LAST` 为假），则进入状态 10。\n     - 在进入状态 10 之前，初始化 `ERROR` 为 0，表示没有错误，并将 `IP_STATE` 设置为 1，表示开始 IP 通信的准备阶段。\n     - 将 `DONE_P` 设置为假，表示操作尚未完成。\n   \n   - **状态 10**：准备日志消息。\n     - 当 `IP_STATE` 为 3 时，表示 IP 通信已准备好，可以开始构造日志消息。\n     - 首先，初始化临时变量 `i` 为 0，用于记录日志消息在缓冲区中的位置。\n     - 根据 `OPTION` 标志的配置，构造日志消息的头部：\n       - 如果 `OPTION` 的最低位为 0，表示需要包含日志的优先级信息。使用 `REPLACE` 函数将 `<P>` 替换为 `FACILITY` 和 `SEVERITY` 的组合值，并存储在临时字符串 `s1` 中。\n       - 否则，`s1` 为空字符串。\n     - 如果 `OPTION` 的次低位为 0，表示需要包含时间戳、主机名和标签信息：\n       - 使用 `OSCAT_BASIC.DT_TO_STRF` 函数将 `LOC_DT` 转换为字符串格式，并拼接到 `s1` 中。\n       - 使用 `OSCAT_BASIC._STRING_TO_BUFFER` 函数将 `s1` 写入发送缓冲区 `S_BUF`，并更新 `i` 的值。\n       - 将 `HOSTNAME` 和 `TAG` 依次写入 `S_BUF`，并在每个字段后添加一个空格字符（ASCII 码 32）。\n     - 将日志消息 `MESSAGE` 写入 `S_BUF`，并更新 `i` 的值。\n     - 如果 `OPTION` 的第三位为 1，表示需要在日志消息末尾添加换行符（ASCII 码 13 和 10）。\n     - 进入状态 30，表示准备发送日志消息。\n     - 根据 `OPTION` 的第四位配置 `IP_C.C_MODE`（通信模式）：\n       - 如果第四位为 1，设置为模式 0（默认模式）。\n       - 否则，设置为模式 1（其他模式）。\n     - 如果 `PORT` 为 0，则根据 `IP_C.C_MODE` 设置默认端口号：\n       - 模式 0 使用端口 1468。\n       - 模式 1 使用端口 514。\n     - 否则，使用用户指定的 `PORT`。\n     - 将 `SERVER_IP4` 赋值给 `IP_C.C_IP`，表示目标服务器 IP 地址。\n     - 启用 IP 通信（`IP_C.C_ENABLE := TRUE`），并重置计时器（`IP_C.TIME_RESET := TRUE`）。\n     - 设置发送缓冲区的大小 `S_BUF.SIZE` 为 `i` 的值，表示日志消息的长度。\n     - 清空接收缓冲区的大小 `R_BUF.SIZE` 为 0。\n\n   - **状态 30**：发送日志消息。\n     - 如果 `IP_C.ERROR` 不为 0，表示在发送过程中发生错误，将错误代码赋值给 `ERROR`，并返回状态 00。\n     - 如果 `S_BUF.SIZE` 为 0，表示日志消息已成功发送，将 `DONE_P` 设置为真，并返回状态 00。\n     - 如果状态机返回状态 00，将 `IP_STATE` 设置为 4，表示 IP 通信已完成。\n\n   在状态机结束后，更新 `ACTIVATE_LAST` 以记录当前的激活信号状态，并调用 `IP_FIFO` 功能块处理 IP 通信的 FIFO 逻辑。`IP_FIFO` 功能块用于管理 IP 通信的状态和标识符，确保通信的可靠性和顺序性。", "name": "SYS_LOG"}