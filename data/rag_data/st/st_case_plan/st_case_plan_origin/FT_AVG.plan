{"variables": [], "instructions": [], "planning": "- 概述\n  该功能块 `FT_AVG` 用于计算输入信号 `IN` 的平均值。它通过使用一个缓冲区来存储最近 `N` 个输入值，并动态计算这些值的平均值。功能块支持使能信号 `E`、复位信号 `RST` 以及缓冲区大小 `N` 的配置。\n\n- 变量定义\n  代码中定义了以下几类变量：\n  - 输入变量：`IN`（输入信号，类型为 `REAL`）、`E`（使能信号，类型为 `BOOL`，默认值为 `TRUE`）、`N`（缓冲区大小，类型为 `INT`，默认值为 `32`）、`RST`（复位信号，类型为 `BOOL`）。\n  - 输出变量：`AVG`（输出平均值，类型为 `REAL`）。\n  - 内部变量：`buff`（缓冲区，假设为 `DELAY` 结构类型，用于存储输入值）、`i`（循环计数器，类型为 `INT`）、`init`（初始化标志，类型为 `BOOL`）。\n\n- 主逻辑部分\n  -- REGION 初始化与复位处理\n     首先，将缓冲区大小 `N` 限制在 0 到 32 之间，确保其值在合理范围内。如果功能块未初始化 (`init` 为 `FALSE`) 或接收到复位信号 (`RST` 为 `TRUE`)，则执行初始化逻辑。初始化逻辑包括：\n     - 使用 `FOR` 循环将当前输入值 `IN` 填充到缓冲区 `buff` 中。\n     - 将输出平均值 `AVG` 设置为当前输入值 `IN`。\n     - 将初始化标志 `init` 设置为 `TRUE`，表示功能块已初始化。\n\n  -- REGION 平均值计算\n     如果功能块已初始化且使能信号 `E` 为 `TRUE`，则执行平均值计算逻辑。具体步骤如下：\n     - 将当前输入值 `IN` 写入缓冲区 `buff`。\n     - 更新输出平均值 `AVG`，公式为：  \n       `AVG = AVG + (IN - buff.out) / INT_TO_REAL(N)`  \n       其中，`buff.out` 是缓冲区中最旧的值，`INT_TO_REAL(N)` 将缓冲区大小转换为 `REAL` 类型以进行浮点运算。\n     通过这种方式，功能块动态计算最近 `N` 个输入值的平均值，并输出到 `AVG`。\n\n  -- REGION 输出结果\n     功能块的输出 `AVG` 始终为计算的平均值。如果功能块未初始化或复位，则 `AVG` 被设置为当前输入值 `IN`。在正常运行时，`AVG` 动态更新为最近 `N` 个输入值的平均值。", "name": "FT_AVG"}