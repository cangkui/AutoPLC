{"variables": [], "instructions": [], "planning": "- 概述\n该功能块 `FT_PIDWL` 实现了一个带有比例-积分-微分（PID）控制逻辑的控制器。它使用比例、积分和微分部分来计算输出值，并根据设定的上下限对输出进行限制。功能块还支持复位功能，用于重置内部状态。\n\n- 变量定义\n代码中定义了以下几类变量：\n - 输入变量：输入值（`IN`）、比例增益（`KP`）、积分时间常数（`TN`）、微分时间常数（`TV`）、下限（`LIM_L`）、上限（`LIM_H`）、复位信号（`RST`）。\n - 输出变量：输出值（`Y`）、限幅标志（`LIM`）。\n - 内部变量：比例-积分控制器实例（`piwl`）、微分控制器实例（`diff`）。\n\n- 主逻辑部分\n-- REGION 复位处理\n   如果复位信号（`RST`）为真，则调用比例-积分控制器（`piwl`）的复位逻辑，并清除复位信号。这用于重置控制器的内部状态。\n   \n-- REGION 比例-积分控制逻辑\n   如果积分时间常数（`TN`）为0，则仅使用比例控制部分，积分部分被禁用。否则，同时使用比例和积分部分。比例-积分控制器的输入为输入值（`IN`）乘以比例增益（`KP`），并根据积分时间常数（`TN`）计算积分增益（`KI`）。上下限（`LIM_L` 和 `LIM_H`）被传递给比例-积分控制器，用于限制其输出。\n\n-- REGION 微分控制逻辑\n   微分控制器的输入为输入值（`IN`），增益为比例增益（`KP`）乘以微分时间常数（`TV`）。微分控制器的输出被添加到比例-积分控制器的输出中，形成最终的输出值（`Y`）。\n\n-- REGION 输出限幅处理\n   如果最终输出值（`Y`）小于下限（`LIM_L`），则将输出值限制为下限，并设置限幅标志（`LIM`）为真。如果最终输出值（`Y`）大于上限（`LIM_H`），则将输出值限制为上限，并设置限幅标志（`LIM`）为真。否则，限幅标志（`LIM`）保持为假。\n\n-- REGION 输出结果\n   最终输出值（`Y`）和限幅标志（`LIM`）被传递到功能块的输出端，供外部使用。\n\n- 总结\n该功能块实现了一个完整的PID控制器，支持比例、积分和微分控制部分，并对输出值进行限幅处理。复位功能允许用户重置控制器的内部状态。通过调整比例增益（`KP`）、积分时间常数（`TN`）和微分时间常数（`TV`），可以灵活地配置控制器的行为。", "name": "FT_PIDWL"}