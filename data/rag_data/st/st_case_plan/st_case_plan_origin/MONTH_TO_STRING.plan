{"variables": [], "instructions": [], "planning": "- 概述\n这段代码定义了一个名为 `MONTH_TO_STRING` 的函数，用于将月份数字转换为对应的月份名称字符串。函数支持多种语言和不同长度的月份名称（完整名称或缩写）。\n\n- 变量定义\n代码中定义了以下几类变量：\n  - 输入变量：`MTH`（月份，整数类型）、`LANG`（语言代码，整数类型）、`LX`（月份名称长度，整数类型）。\n  - 内部变量：`ly`（用于存储有效语言代码的整数类型）。\n\n- 主逻辑部分\n  -- REGION 语言代码验证\n    首先，函数检查输入的语言代码 `LANG` 是否有效。如果 `LANG` 小于或等于 0，则使用默认语言代码 `LANGUAGE.DEFAULT`。否则，使用 `MIN` 函数确保 `LANG` 不超过语言的最大值 `language.LMAX`，并将结果存储在 `ly` 中。\n  \n  -- REGION 月份验证\n    接下来，函数检查输入的月份 `MTH` 是否在有效范围内（1 到 12）。如果 `MTH` 小于 1 或大于 12，函数直接返回，不执行后续逻辑。\n\n  -- REGION 月份名称转换\n    如果月份有效，函数根据 `LX` 的值决定如何转换月份名称：\n    - 如果 `LX` 等于 0，则从 `language.MONTHS` 数组中获取完整的月份名称。\n    - 如果 `LX` 等于 3，则从 `language.MONTHS3` 数组中获取缩写的月份名称（通常为 3 个字符的缩写）。\n    转换后的月份名称存储在函数返回值 `MONTH_TO_STRING` 中。\n\n  -- REGION 函数返回\n    函数最终返回转换后的月份名称字符串。如果月份无效或未找到对应的名称，函数可能返回空字符串或未定义的值。\n\n- 总结\n该函数通过简单的逻辑实现了将月份数字转换为名称的功能，并支持多语言和不同长度的名称。核心逻辑包括语言代码验证、月份有效性检查以及根据需求选择不同长度的月份名称。", "name": "MONTH_TO_STRING"}