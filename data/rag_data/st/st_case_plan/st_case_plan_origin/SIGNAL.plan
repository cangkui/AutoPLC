{"variables": [], "instructions": [], "planning": "- 概述\n该功能块名为 `SIGNAL`，用于根据输入信号 `IN`、信号模式 `SIG` 和时间间隔 `TS` 生成输出信号 `Q`。它的核心逻辑是通过时间计算步进值，并根据步进值和信号模式决定输出信号的状态。\n\n- 变量定义\n代码中定义了以下几类变量：\n - 输入变量：`IN`（布尔值，触发信号）、`SIG`（字节值，信号模式）、`TS`（时间值，时间间隔）。\n - 输出变量：`Q`（布尔值，输出信号）。\n - 内部变量：`tx`（双字值，当前时间戳）、`step`（字节值，步进值）。\n - 常量：`one`（字节值，固定为 1）。\n\n- 主逻辑部分\n-- REGION 主逻辑\n   1. **触发信号检测**：\n      - 如果 `IN` 为真，则开始执行逻辑；否则，将输出 `Q` 设置为假。\n   2. **获取当前时间戳**：\n      - 使用 `T_PLC_MS()` 获取当前时间戳，并存储在 `tx` 中。\n   3. **计算步进值**：\n      - 如果 `TS` 大于 0 秒，则将 `tx` 除以 `TS` 并取低 3 位（`AND 16#0000_0007`），得到步进值。\n      - 如果 `TS` 为 0 秒，则将 `tx` 右移 7 位并取低 3 位（`AND 16#0000_0007`），得到步进值。\n   4. **生成步进掩码**：\n      - 将常量 `one` 左移 `step` 位，生成步进掩码。\n   5. **决定输出信号**：\n      - 将步进掩码与信号模式 `SIG` 进行按位与运算，如果结果大于 0，则将输出 `Q` 设置为真；否则，设置为假。\n-- REGION 结束", "name": "SIGNAL"}