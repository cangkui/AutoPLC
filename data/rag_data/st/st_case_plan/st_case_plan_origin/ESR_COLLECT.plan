{"variables": [], "instructions": [], "planning": "- 概述\n  该功能块名为“ESR_COLLECT”，用于收集多个输入数组中的数据，并将其存储到一个输出数组中。功能块支持通过复位信号（rst）来重置输出数组的索引位置，并根据输入数据的有效性（typ > 0）将数据填充到输出数组中。\n\n- 变量定义\n  代码中定义了以下几类变量：\n  - 输入变量：ESR_0到ESR_7，每个都是包含4个esr_data类型元素的数组；rst，用于复位功能。\n  - 输入输出变量：pos，表示输出数组的当前索引位置。\n  - 输出变量：ESR_OUT，包含32个esr_data类型元素的数组，用于存储收集到的数据。\n  - 常量：max_in，表示输入数组的最大索引（值为3）；max_out，表示输出数组的最大索引（值为32）。\n  - 内部变量：cnt，用于循环计数，初始值为-1。\n\n- 主逻辑部分\n  -- REGION 复位逻辑\n     如果复位信号（rst）为真，或者计数器（cnt）小于0，则将输出数组的索引位置（pos）重置为-1。这表示输出数组的初始状态为空，等待填充数据。\n  -- REGION 数据收集逻辑\n     如果复位信号为假且计数器有效（cnt >= 0），则进入数据收集逻辑。通过一个循环（从0到max_in），遍历每个输入数组（ESR_0到ESR_7）的每个元素。如果当前元素的typ值大于0，表示该数据有效，则执行以下操作：\n     1. 使用INC1函数将输出数组的索引位置（pos）加1，同时确保索引不超过max_out的限制。\n     2. 将有效数据存储到输出数组的当前索引位置（ESR_OUT[pos]）。\n     循环结束后，输出数组中存储了所有有效的输入数据。", "name": "ESR_COLLECT"}