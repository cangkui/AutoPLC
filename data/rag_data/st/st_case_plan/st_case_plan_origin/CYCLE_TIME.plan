{"variables": [], "instructions": [], "planning": "- 概述\n该功能块 `CYCLE_TIME` 用于计算和监控程序的循环时间，并记录系统运行时间、天数以及循环次数。它通过比较当前时间与上一次循环的时间来计算循环时间，并更新最小、最大和最后一次循环时间。同时，它还计算系统运行的总时间和天数。\n\n- 变量定义\n代码中定义了以下几类变量：\n - 输入变量：`RST`，用于重置功能块的状态。\n - 输出变量：`ct_min`（最小循环时间）、`ct_max`（最大循环时间）、`ct_last`（最后一次循环时间）、`systime`（系统运行时间）、`sysdays`（系统运行天数）、`cycles`（循环次数）。\n - 内部变量：`last_cycle`（上一次循环的时间戳）、`tx`（当前循环时间）、`init`（初始化标志）。\n\n- 主逻辑部分\n-- REGION 循环时间计算与更新\n   1. 计算当前循环时间 `tx`：\n      - 使用 `T_PLC_MS()` 获取当前时间（以毫秒为单位），并将其转换为 `TIME` 类型。\n      - 减去 `last_cycle`（上一次循环的时间戳）得到当前循环时间 `tx`。\n\n   2. 处理重置逻辑：\n      - 如果 `RST` 为真，则重置所有输出变量：\n        - `ct_min` 设置为 `t#10h`（10小时）。\n        - `ct_max` 设置为 `t#0ms`（0毫秒）。\n        - `cycles` 设置为 `0`（循环次数归零）。\n\n   3. 更新最小、最大和最后一次循环时间：\n      - 如果 `last_cycle` 大于 `t#0s`（即不是第一次循环），则：\n        - 如果 `tx` 小于 `ct_min`，则更新 `ct_min` 为 `tx`。\n        - 如果 `tx` 大于 `ct_max`，则更新 `ct_max` 为 `tx`。\n        - 将 `ct_last` 设置为 `tx`。\n      - 如果 `ct_min` 为 `t#0s`，则将其设置为 `t#0s - t#1ms`（即负1毫秒，表示未初始化）。\n\n   4. 更新系统运行时间和天数：\n      - 如果 `init` 为真（即功能块已初始化），则：\n        - 将 `systime` 增加 `tx`。\n        - 如果 `systime` 大于或等于 `t#1d`（1天），则：\n          - 将 `systime` 减去 `t#1d`。\n          - 将 `sysdays` 增加 `1`。\n\n   5. 更新内部状态：\n      - 将 `init` 设置为 `TRUE`，表示功能块已初始化。\n      - 将 `last_cycle` 更新为当前时间戳。\n      - 将 `cycles` 增加 `1`，表示完成一次循环。\n\n-- REGION 功能块结束\n   功能块逻辑执行完毕，等待下一次调用。", "name": "CYCLE_TIME"}