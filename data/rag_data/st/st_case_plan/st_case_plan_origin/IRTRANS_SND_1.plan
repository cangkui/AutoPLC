{"variables": [], "instructions": [], "planning": "- 概述\n这段代码是一个使用SCL编写的功能块，名为“IRTRANS_SND_1”，用于通过红外设备发送信号。它处理设备代码和按键代码的输入，并通过网络缓冲区发送数据。\n\n- 变量定义\n代码中定义了以下几类变量：\n - 输入变量：设备代码（DEV_CODE）、按键代码（KEY_CODE）、输入信号（IN）、重复时间（T_REPEAT）\n - 输入输出变量：IP控制结构（IP_C）、网络缓冲区（S_BUF）\n - 输出变量：按键值（KEY）\n - 内部变量：按键字符串（skey）、字符串长度（size）、拼接字符串（str）、定时器（t）、当前按键值（k）、上一个按键值（lk）、条件标志（d）\n\n- 主逻辑部分\n-- REGION 条件检查\n   首先，检查IP控制结构的当前状态是否大于127，并且邮箱中有数据或控制模式不等于5。如果条件不满足，则直接返回，不执行后续逻辑。\n-- REGION 定时器处理\n   如果上一个按键值与当前按键值相同，则启动定时器（TON），定时器的预设时间为输入的重复时间（T_REPEAT）。\n-- REGION 网络缓冲区处理\n   如果网络缓冲区的大小为0，则检查输入信号（IN）是否为真。如果为真，则将按键代码赋值给skey，并将当前按键值（k）设置为1。如果输入信号为假，则将上一个按键值（lk）和输出按键值（KEY）重置为0，并返回。\n   如果上一个按键值与当前按键值不同，或者定时器（TON）的输出为真，则拼接设备代码和按键代码，生成发送字符串。使用OSCAT_BASIC._STRING_TO_BUFFER函数将字符串写入网络缓冲区，并设置缓冲区的大小。最后，将当前按键值（k）赋值给上一个按键值（lk），并停止定时器。", "name": "IRTRANS_SND_1"}