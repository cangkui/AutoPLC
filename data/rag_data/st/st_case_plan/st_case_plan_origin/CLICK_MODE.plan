{"variables": [], "instructions": [], "planning": "- 概述\n  该功能块 `CLICK_MODE` 用于检测输入信号的点击模式，包括单击、双击和长按。它通过一个定时器来区分不同的点击行为，并输出相应的信号。\n\n- 变量定义\n  代码中定义了以下几类变量：\n  - 输入变量：`IN`（输入信号），`T_LONG`（长按时间阈值，默认 500ms）。\n  - 输出变量：`SINGLE`（单击信号），`DOUBLE`（双击信号），`LONG`（长按信号），`TP_LONG`（长按的上升沿信号）。\n  - 内部变量：`Timer`（定时器，用于检测长按），`cnt`（计数器，用于记录点击次数），`last`（存储上一个周期的输入信号状态）。\n\n- 主逻辑部分\n  -- REGION 定时器逻辑\n     - 使用 `OSCAT_BASIC.TP` 定时器来检测输入信号的长按行为。定时器的输入为 `IN`，预设时间为 `T_LONG`。\n     - 如果定时器未超时（`timer.Q` 为 `FALSE`），表示输入信号未达到长按时间阈值。\n     - 如果定时器超时（`timer.Q` 为 `TRUE`），表示输入信号达到了长按时间阈值。\n\n  -- REGION 点击计数逻辑\n     - 在定时器未超时的情况下，如果当前输入信号为低电平（`IN` 为 `FALSE`）且上一个周期的输入信号为高电平（`last` 为 `TRUE`），则增加计数器 `cnt` 的值。\n     - 如果定时器超时，则根据 `cnt` 的值判断是单击还是双击：\n       - 如果 `cnt` 为 1，输出单击信号 `SINGLE`。\n       - 如果 `cnt` 为 2，输出双击信号 `DOUBLE`。\n     - 在定时器超时后，重置计数器 `cnt` 为 0。\n\n  -- REGION 长按检测逻辑\n     - 如果定时器未超时且输入信号为高电平（`IN` 为 `TRUE`），则输出长按信号 `LONG`。\n     - 如果定时器未超时且输入信号从低电平变为高电平（`IN` 为 `TRUE` 且 `LONG` 为 `FALSE`），则输出长按的上升沿信号 `TP_LONG`。\n\n  -- REGION 存储输入信号状态\n     - 在每次循环结束时，将当前输入信号的状态存储到 `last` 变量中，以便在下一个周期进行比较。\n\n- 输出结果\n  - `SINGLE`：表示检测到单击。\n  - `DOUBLE`：表示检测到双击。\n  - `LONG`：表示检测到长按。\n  - `TP_LONG`：表示检测到长按的上升沿。", "name": "CLICK_MODE"}