{"variables": [], "instructions": [], "planning": "- 概述\n  这是一个简单的功能块 `BYTE_TO_BITS`，用于将一个字节（BYTE）的每一位拆分为独立的布尔值（BOOL）。每个布尔值对应字节中的一个位，从最低位（B0）到最高位（B7）。\n\n- 变量定义\n  - 输入变量：`IN`，类型为 `BYTE`，表示需要拆分的字节。\n  - 输出变量：`B0` 到 `B7`，类型为 `BOOL`，分别表示字节的每一位（从最低位到最高位）。\n\n- 主逻辑部分\n  -- REGION 位拆分逻辑\n      此区域将输入字节 `IN` 的每一位分别赋值给对应的布尔输出变量。具体逻辑如下：\n      - `B0 := IN.0;`：将字节的最低位（第0位）赋值给 `B0`。\n      - `B1 := IN.1;`：将字节的第1位赋值给 `B1`。\n      - `B2 := IN.2;`：将字节的第2位赋值给 `B2`。\n      - `B3 := IN.3;`：将字节的第3位赋值给 `B3`。\n      - `B4 := IN.4;`：将字节的第4位赋值给 `B4`。\n      - `B5 := IN.5;`：将字节的第5位赋值给 `B5`。\n      - `B6 := IN.6;`：将字节的第6位赋值给 `B6`。\n      - `B7 := IN.7;`：将字节的最高位（第7位）赋值给 `B7`。\n      通过这种方式，字节的每一位都被提取并存储到独立的布尔变量中，方便后续逻辑处理。", "name": "BYTE_TO_BITS"}