{"variables": [], "instructions": [], "planning": "- 概述\n  此功能块名为`NET_VAR_X8`，用于处理网络变量的读写操作。它通过输入和输出变量与外部系统进行数据交换，并根据状态机的逻辑将数据存储到缓冲区或从缓冲区读取数据。\n\n- 变量定义\n  代码中定义了以下几类变量：\n  - 输入输出变量：`X`，类型为`NET_VAR_DATA`，用于与外部系统交换数据。\n  - 输入变量：`IN_REAL1`, `IN_REAL2`, `IN_DINT1`, `IN_DINT2`, `IN_UDINT1`, `IN_UDINT2`, `IN_DWORD1`, `IN_DWORD2`，用于接收外部系统的输入数据。\n  - 输出变量：`OUT_REAL1`, `OUT_REAL2`, `OUT_DINT1`, `OUT_DINT2`, `OUT_UDINT1`, `OUT_UDINT2`, `OUT_DWORD1`, `OUT_DWORD2`, `ID`，用于向外部系统输出数据。\n  - 内部变量：`init`, `i`, `i2`, `index`, `index2`, `ra`，用于存储临时数据和状态信息。\n\n- 主逻辑部分\n  -- 初始化部分：\n     - 如果`init`为假，表示功能块尚未初始化，此时将`init`设置为真，并递增`X.ID_MAX`的值，将`ID`设置为`X.ID_MAX`的字节形式。\n  \n  -- 数据处理部分：\n     - 如果`X.STATE`大于0且`X.ERROR_ID`为0，表示功能块处于有效状态且没有错误，开始处理数据。\n     - 检查`index`的值是否超出缓冲区大小。如果超出，则设置错误标识`X.ERROR_ID`为当前`ID`，表示缓冲区溢出。\n     - 如果`X.STATE`为1，表示功能块处于写数据状态：\n       - 将输入数据`IN_REAL1`, `IN_REAL2`, `IN_DINT1`, `IN_DINT2`, `IN_UDINT1`, `IN_UDINT2`, `IN_DWORD1`, `IN_DWORD2`转换为`DWORD`类型，并存储到数组`ra`中。\n       - 将`ID`和标志字节`BYTE#21`写入缓冲区`X.S_BUF.BUFFER`。\n       - 将数组`ra`中的数据按字节拆分并写入缓冲区`X.S_BUF.BUFFER`。\n     - 如果`X.STATE`为2，表示功能块处于读数据状态：\n       - 检查缓冲区`X.R_BUF.BUFFER`中的`ID`和标志字节`BYTE#21`是否匹配。如果不匹配，则设置错误标识`X.ERROR_ID`为当前`ID`。\n       - 如果匹配，则从缓冲区`X.R_BUF.BUFFER`中读取数据，并将其转换为`REAL`, `DINT`, `UDINT`, `DWORD`类型，存储到输出变量`OUT_REAL1`, `OUT_REAL2`, `OUT_DINT1`, `OUT_DINT2`, `OUT_UDINT1`, `OUT_UDINT2`, `OUT_DWORD1`, `OUT_DWORD2`中。\n     - 更新`X.index`的值，表示当前缓冲区的索引位置。", "name": "NET_VAR_X8"}