{"variables": [], "instructions": [], "planning": "- 概述\n  该函数名为 `SUN_MIDDAY`，用于计算给定经度和 UTC 日期的太阳正午时间。太阳正午时间是指太阳在天空中达到最高点的时间，通常接近当地时间的 12:00。该函数通过考虑地球的自转和公转，计算出太阳正午的准确时间。\n\n- 变量定义\n  - 输入变量：\n    - `LON`：经度（以度为单位），表示观测点的地理位置。\n    - `UTC`：UTC 日期，表示当前日期。\n  - 内部变量：\n    - `T`：表示一年中的第几天，通过 `DAY_OF_YEAR` 函数将 UTC 日期转换为一年中的天数。\n    - `OFFSET`：用于调整太阳正午时间的偏移量，基于地球公转的周期性变化。\n\n- 主逻辑部分\n  -- REGION 计算一年中的第几天：\n    首先，使用 `DAY_OF_YEAR` 函数将输入的 UTC 日期转换为一年中的第几天，并将其转换为实数类型，存储在变量 `T` 中。\n\n  -- REGION 计算太阳正午时间偏移量：\n    通过以下公式计算偏移量：\n    ```plaintext\n    OFFSET := -0.1752 * SIN(0.033430 * T + 0.5474) - 0.1340 * SIN(0.018234 * T - 0.1939)\n    ```\n    该公式基于地球公转的周期性变化，考虑了太阳在一年中的位置变化。`SIN` 函数用于模拟地球公转的周期性影响。\n\n  -- REGION 计算太阳正午时间：\n    最后，通过以下公式计算太阳正午时间：\n    ```plaintext\n    SUN_MIDDAY := HOUR_TO_TOD(12.0 - OFFSET - lon * 0.0666666666666)\n    ```\n    其中：\n    - `12.0` 表示标准的正午时间（12:00）。\n    - `OFFSET` 是根据地球公转计算的调整值。\n    - `lon * 0.0666666666666` 是根据经度调整的时间，因为每 15 度经度对应 1 小时的时间差（360 度 / 24 小时 = 15 度/小时）。\n    - `HOUR_TO_TOD` 函数将计算的小时数转换为时间类型（TOD）。\n\n- 输出结果\n  函数返回 `SUN_MIDDAY`，即计算出的太阳正午时间，以 `TOD` 类型表示。", "name": "SUN_MIDDAY"}