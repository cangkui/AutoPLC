{"variables": [], "instructions": [], "planning": "- 概述\n此函数 `FSTRING_TO_DT` 用于将格式化的字符串转换为日期时间（DT）类型。它通过解析输入字符串和格式字符串来提取年、月、日、时、分、秒等信息，并将其组合成一个日期时间值。\n\n- 变量定义\n代码中定义了以下几类变量：\n - 输入变量：`SDT`（源数据文本）和 `FMT`（格式字符串）。\n - 常量：`ignore`（忽略字符，默认为 `*`）和 `fchar`（格式字符，默认为 `#`）。\n - 局部变量：`c`（当前字符）、`tmp`（临时存储）、`end`（结束指示器）、`dy`（年）、`dm`（月）、`dd`（日）、`th`（时）、`tm`（分）、`ts`（秒）。\n\n- 主逻辑部分\n-- REGION 字符串解析与转换：\n   - 使用 `WHILE` 循环遍历格式字符串 `FMT`，逐字符解析。\n   - 如果当前字符是忽略字符 `*`，则跳过该字符，并删除 `SDT` 和 `FMT` 中的对应字符。\n   - 如果当前字符是格式字符 `#`，则提取下一个字符作为格式指示符（如 `Y` 表示年，`M` 表示月等），并根据指示符从 `SDT` 中提取相应的值。\n     - 对于年份 `Y`，如果值小于 100，则自动加上 2000（例如 `23` 转换为 `2023`）。\n     - 对于月份 `M` 或 `N`，分别使用 `STRING_TO_INT` 或 `FSTRING_TO_MONTH` 函数将字符串转换为整数。\n     - 对于日、时、分、秒，直接使用 `STRING_TO_INT` 函数将字符串转换为整数。\n   - 如果当前字符与 `SDT` 中的字符匹配，则删除 `SDT` 和 `FMT` 中的对应字符。\n   - 如果字符不匹配，则函数直接返回，表示解析失败。\n\n-- REGION 日期时间组合：\n   - 在解析完所有字符后，使用 `SET_DT` 函数将提取的年、月、日、时、分、秒组合成一个日期时间值，并作为函数的返回值。\n\n- 输出结果\n函数的返回值是一个日期时间（DT）类型的值，表示从输入字符串中解析出的日期和时间。如果解析过程中出现错误（例如字符不匹配），函数会直接返回，不生成有效的日期时间值。", "name": "FSTRING_TO_DT"}