{"variables": [], "instructions": [], "planning": "- 概述\n  该功能块名为 `RTC_MS`，用于实现一个带有毫秒精度的实时时钟（RTC）。它允许用户设置初始时间，并基于 PLC 的系统时间自动更新当前时间，同时提供毫秒级别的精度。\n\n- 变量定义\n  代码中定义了以下几类变量：\n  - 输入变量：`SET`（设置信号）、`SDT`（设置日期时间）、`SMS`（设置毫秒值）。\n  - 输出变量：`XDT`（当前日期时间）、`XMS`（当前毫秒值）。\n  - 内部变量：`init`（初始化标志）、`last`（上一次记录的系统时间）、`Tx`（当前系统时间）。\n\n- 主逻辑部分\n  -- REGION 初始化与设置\n     - 功能块首先通过 `T_PLC_MS()` 函数获取当前 PLC 的系统时间（以毫秒为单位），并将其存储在变量 `Tx` 中。\n     - 如果输入 `SET` 为真，或者功能块尚未初始化（`init` 为假），则执行初始化逻辑：\n       - 将 `init` 标志设置为 `TRUE`，表示功能块已初始化。\n       - 将输出变量 `XDT` 和 `XMS` 分别设置为输入值 `SDT` 和 `SMS`。\n     - 如果功能块已经初始化且 `SET` 为假，则进入时间更新逻辑：\n       - 计算当前系统时间与上一次记录的时间 (`last`) 之间的差值，并将其加到 `XMS` 中。\n       - 如果 `XMS` 超过 1000 毫秒（即 1 秒），则将 `XDT` 增加 1 秒，并将 `XMS` 减去 1000 毫秒。\n  -- REGION 记录上一次时间\n     - 在每次逻辑执行结束后，将当前系统时间 `Tx` 存储在变量 `last` 中，以便在下一次循环中计算时间差。\n\n- 详细逻辑说明\n  - **初始化与设置**：\n    - 功能块的初始化逻辑仅在第一次调用或 `SET` 信号为真时执行。这确保了用户可以随时通过 `SET` 信号重新设置时间。\n    - 初始化时，输出时间 `XDT` 和 `XMS` 被直接设置为输入值 `SDT` 和 `SMS`。\n  - **时间更新**：\n    - 在功能块初始化后，时间更新逻辑基于 PLC 的系统时间进行。\n    - 通过计算当前系统时间与上一次记录时间的差值，功能块能够精确地更新毫秒值 `XMS`。\n    - 如果 `XMS` 超过 1000 毫秒，则将其转换为秒，并更新日期时间 `XDT`。\n  - **记录上一次时间**：\n    - 在每次循环结束时，当前系统时间 `Tx` 被记录到 `last` 变量中，以便在下一次循环中计算时间差。\n\n- 输出结果\n  - `XDT`：当前日期时间，基于初始化设置和系统时间自动更新。\n  - `XMS`：当前毫秒值，基于系统时间自动更新，并在超过 1000 毫秒时自动重置。\n\n- 总结\n  该功能块实现了一个简单的实时时钟，支持毫秒级别的精度。用户可以通过 `SET` 信号设置初始时间，功能块会自动基于 PLC 的系统时间更新当前时间，并处理毫秒到秒的转换。", "name": "RTC_MS"}