{"variables": [], "instructions": [], "planning": "- 概述\n  这段代码是一个使用SCL编写的功能块，名为“BOILER”，用于控制锅炉的加热逻辑。它根据输入的温度、压力、请求和使能信号来决定是否加热，并处理各种错误状态。代码通过一系列条件判断来实现复杂的控制逻辑。\n\n- 变量定义\n  代码中定义了以下几类变量：\n  - 输入变量：包括上限温度（T_upper）、下限温度（T_lower）、压力（Pressure）、使能信号（enable）、请求信号（Req_1和Req_2）、增压信号（Boost）、温度保护值（t_upper_min、t_upper_max、T_lower_max、T_protect_high、T_protect_low）等。\n  - 输出变量：包括加热信号（Heat）、错误信号（error）和状态信号（status）。\n  - 内部变量：包括边缘检测（edge）、增压模式（boost_mode）以及一些标志位（flag_0、flag_1、flag_2）。\n\n- 主逻辑部分\n  -- 错误检测与处理\n    首先，代码检查温度是否超出保护范围。如果上限温度（T_upper）超过最高保护温度（T_protect_high），则停止加热并设置错误状态（status := 1, error := TRUE）。如果上限温度低于最低保护温度（T_protect_low），则开始加热并设置错误状态（status := 2, error := TRUE）。类似地，如果下限温度（T_lower）超出保护范围且下限温度使能（T_lower_enable），则停止加热并设置相应的错误状态（status := 3或4, error := TRUE）。如果压力信号（Pressure）为假，则停止加热并设置错误状态（status := 5, error := TRUE）。\n\n  -- 正常加热逻辑\n    如果没有检测到错误，代码继续检查是否满足加热条件。如果有请求信号（Req_1或Req_2）、使能信号（enable）或增压信号（Boost），则清除错误信号（error := FALSE）。然后，根据不同的条件设置加热信号和状态：\n    - 如果增压信号（Boost）为真且边缘检测（edge）为假，并且上限温度（T_upper）低于最大上限温度（t_upper_max），则开始加热并进入增压模式（status := 101, heat := TRUE, boost_mode := TRUE）。\n    - 如果使能信号（enable）为真且上限温度（T_upper）低于最小上限温度（t_upper_min），则开始加热（status := 102, heat := TRUE）。\n    - 如果请求信号（Req_1）为真且上限温度（T_upper）低于请求温度（T_request_1），则开始加热（status := 103, heat := TRUE）。\n    - 如果请求信号（Req_2）为真且上限温度（T_upper）低于请求温度（T_request_2），则开始加热（status := 104, heat := TRUE）。\n\n  -- 加热控制逻辑\n    在加热信号为真的情况下，代码进一步检查是否继续加热：\n    - 如果使能信号（enable）或增压模式（boost_mode）为真，则设置标志位（flag_0 := TRUE）。如果下限温度使能（T_lower_enable）且下限温度（T_lower）超过最大下限温度（T_lower_max），则关闭增压模式和标志位（flag_0 := FALSE, boost_mode := FALSE）。如果下限温度未使能且上限温度（T_upper）超过最大上限温度（t_upper_max），则关闭增压模式和标志位（flag_0 := FALSE, boost_mode := FALSE）。\n    - 如果请求信号（Req_1）为真且上限温度（T_upper）超过请求温度加上滞后值（T_request_1 + T_request_hys），则设置标志位（flag_1 := TRUE）。\n    - 如果请求信号（Req_2）为真且上限温度（T_upper）超过请求温度加上滞后值（T_request_2 + T_request_hys），则设置标志位（flag_2 := TRUE）。\n    - 最终，加热信号（heat）由标志位（flag_0、flag_1、flag_2）决定。如果加热信号为假，则设置状态为100（status := 100）。\n\n  -- 默认状态\n    如果没有满足任何加热条件，则设置状态为100（status := 100），停止加热（heat := FALSE），并清除错误信号（error := FALSE）。\n\n  -- 边缘检测\n    最后，代码更新边缘检测变量（edge := boost），以便在下个周期检测增压信号的变化。", "name": "BOILER"}