{"variables": [], "instructions": [], "planning": "- 概述\n此函数名为“RANGE_TO_BYTE”，用于将一个实数范围内的值映射到一个字节（0到255）的范围内。它接受三个输入参数：X（要映射的值）、low（范围的下限）和high（范围的上限），并返回一个字节类型的结果。\n\n- 变量定义\n代码中定义了三类变量：\n - 输入变量：X（要映射的值）、low（范围的下限）、high（范围的上限）。\n - 无内部变量或临时变量。\n - 无输出变量，但函数返回一个字节类型的结果。\n\n- 主逻辑部分\n函数的逻辑分为以下步骤：\n 1. **限制输入值**：使用`LIMIT`函数将输入值`X`限制在`low`和`high`之间，确保`X`不会超出指定的范围。\n 2. **归一化到0-1范围**：将限制后的值减去`low`，然后除以范围（`high - low`），将值归一化到0到1的范围。\n 3. **映射到0-255范围**：将归一化后的值乘以255，将其映射到0到255的范围。\n 4. **截断为整数**：使用`TRUNC`函数将浮点数结果截断为整数。\n 5. **转换为字节**：将整数结果转换为字节类型并返回。\n\n- 详细步骤\n 1. `LIMIT(low, X, high)`：确保`X`在`low`和`high`之间。\n 2. `(LIMIT(low, X, high) - low)`：将值减去下限，得到相对于下限的偏移量。\n 3. `* 255.0 / (high - low)`：将偏移量归一化到0到255的范围。\n 4. `TRUNC(...)`：将浮点数结果截断为整数。\n 5. `DINT_TO_INT(...)`：将双整数转换为整数。\n 6. `INT_TO_BYTE(...)`：将整数转换为字节并返回。\n\n- 示例\n假设`low = 0.0`，`high = 10.0`，`X = 5.0`：\n 1. `LIMIT(0.0, 5.0, 10.0)` = 5.0\n 2. `(5.0 - 0.0)` = 5.0\n 3. `5.0 * 255.0 / 10.0` = 127.5\n 4. `TRUNC(127.5)` = 127\n 5. `DINT_TO_INT(127)` = 127\n 6. `INT_TO_BYTE(127)` = 127\n\n最终返回值为127。", "name": "RANGE_TO_BYTE"}