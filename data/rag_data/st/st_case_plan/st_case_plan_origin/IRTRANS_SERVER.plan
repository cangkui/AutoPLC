{"variables": [], "instructions": [], "planning": "- 概述\n该功能块名为 `IRTRANS_SERVER`，用于管理与网络通信相关的控制逻辑。它通过 `IP_C` 结构体控制网络连接的启用和状态，并通过 `S_BUF` 和 `R_BUF` 处理发送和接收缓冲区。功能块还支持 UDP 和 TCP 模式的切换，并提供了错误处理和定时重置功能。\n\n- 变量定义\n代码中定义了以下几类变量：\n- `VAR_IN_OUT` 变量：用于输入输出控制的结构体和缓冲区，包括 `IP_C`（网络控制结构）、`S_BUF`（发送缓冲区）和 `R_BUF`（接收缓冲区）。\n- `VAR_INPUT` 变量：输入变量 `UDP_TCP`，用于选择 UDP 或 TCP 模式。\n- `VAR_OUTPUT` 变量：输出变量，包括 `S_ENABLE`（发送使能）、`R_ENABLE`（接收使能）和 `ERROR`（错误代码）。\n- `VAR` 变量：内部变量 `t`，用于定时器功能，类型为 `TON`（通电延时定时器）。\n\n- 主逻辑部分\n-- REGION 初始化与模式设置\n如果 `IP_C.C_ENABLE` 为 `FALSE`，则进行初始化操作：\n1. 将 `IP_C.C_PORT` 设置为 `0`，表示未指定端口。\n2. 将 `IP_C.C_IP` 设置为 `0`，表示未指定 IP 地址。\n3. 根据 `UDP_TCP` 的值设置 `IP_C.C_MODE`：如果 `UDP_TCP` 为 `TRUE`，则选择模式 `5`（UDP），否则选择模式 `4`（TCP）。\n4. 将 `IP_C.C_ENABLE` 设置为 `TRUE`，启用网络控制。\n5. 将 `IP_C.R_OBSERVE` 设置为 `FALSE`，表示不观察接收状态。\n6. 将 `IP_C.TIME_RESET` 设置为 `TRUE`，表示需要重置时间。\n7. 将发送和接收缓冲区的大小 `S_BUF.SIZE` 和 `R_BUF.SIZE` 设置为 `0`。\n\n-- REGION 接收和发送使能逻辑\n1. `R_ENABLE` 的值取决于 `IP_C.C_STATE` 是否大于 `127`。如果大于 `127`，则接收使能。\n2. `S_ENABLE` 的值取决于 `R_ENABLE` 是否为 `TRUE`，并且满足以下条件之一：\n   - `IP_C.MAILBOX[1]` 中有数据（大于 `0`）。\n   - `IP_C.C_MODE` 不是 `5`（即不是 UDP 模式）。\n\n-- REGION 错误处理与定时重置\n1. 将 `IP_C.ERROR` 的值赋给 `ERROR` 输出。\n2. 使用 `TON` 定时器 `t` 检测 `IP_C.ERROR` 是否大于 `0`。如果大于 `0`，则启动定时器。\n3. 如果定时器 `t` 的输出 `Q` 为 `TRUE`，则将 `IP_C.TIME_RESET` 设置为 `TRUE`，表示需要重置时间。\n\n- 总结\n该功能块通过 `IP_C` 结构体管理网络连接的启用、模式和状态，并通过发送和接收缓冲区处理数据。它支持 UDP 和 TCP 模式的切换，并提供了错误处理和定时重置功能。接收和发送使能逻辑基于网络状态和缓冲区数据动态调整，确保通信的可靠性和灵活性。", "name": "IRTRANS_SERVER"}