{"variables": [], "instructions": [], "planning": "- 概述\n此功能块 `DLOG_FILE_TO_FTP` 用于将日志文件通过 FTP 协议上传到远程服务器。它处理文件的读取、FTP 传输、错误处理以及重试机制。\n\n- 变量定义\n代码中定义了以下几类变量：\n - 输入输出变量：`X`，用于传递日志文件数据。\n - 输入变量：FTP 服务器的 URL、激活信号、文件删除标志、超时时间、重试次数、重试间隔时间、DNS 和 PLC 的 IP 地址。\n - 输出变量：传输完成标志、忙标志、错误代码和错误类型。\n - 内部变量：包括环形缓冲区数据、环形缓冲区、FTP 客户端实例、定时器、触发标志、文件名、步骤计数器、FTP 忙标志、FTP 完成标志和重试计数器。\n\n- - 主逻辑部分\n-- REGION 文件触发处理\n   此区域处理新文件的触发信号。当检测到 `X.NEW_FILE_RTRIG` 为真且 `ftrig_old` 为假时，表示有新文件需要处理。此时，初始化环形缓冲区数据 `UCBD`，设置 `D_HEAD` 和 `D_MODE`，并将新文件名 `X.NEW_FILE` 存储到 `UCBD.D_STRING` 中。然后调用 `UCB` 功能块，将数据写入环形缓冲区。最后，更新 `ftrig_old` 为当前 `X.NEW_FILE_RTRIG` 的值，以便进行边缘检测。\n\n-- REGION 步骤控制\n   功能块通过 `step` 变量控制不同的处理步骤，实现状态机的逻辑：\n   - 步骤 00：检查环形缓冲区中是否有待处理的文件。如果 `UCBD.BUF_COUNT` 大于 0 且 `ftp_busy` 为假，表示有文件需要传输。此时，设置 `UCBD.D_MODE` 为 12，调用 `UCB` 功能块从缓冲区中读取文件名，并将其存储到 `filename` 变量中。同时，初始化重试计数器 `cnt` 为 `RETRY` 的值，并进入步骤 10。\n   - 步骤 10：检查 FTP 客户端是否空闲。如果 `ftp_busy` 为假，表示 FTP 客户端可以开始传输。如果 `ftp_done` 为真，表示传输已完成，返回步骤 00 以处理下一个文件。否则，进入步骤 20 开始传输。\n   - 步骤 20：等待重试间隔时间。定时器 `WT_1` 在此步骤启动，当定时器到达指定时间 `RETRY_TIME` 时，执行以下逻辑：\n     - 减少重试计数器 `cnt` 的值。\n     - 如果 `RETRY` 为 0，表示不进行重试，直接返回步骤 10。\n     - 如果 `cnt` 大于或等于 0，表示仍有重试机会，返回步骤 10 重新尝试传输。\n     - 如果 `cnt` 小于 0，表示重试次数用尽，返回步骤 00 以处理下一个文件。\n\n-- REGION FTP 传输\n   在步骤 10 和 20 中，FTP 客户端被激活，开始文件传输。`FTP_CLIENT` 功能块被调用，传递以下参数：\n   - `ACTIVATE`：设置为 `BUSY`，表示传输正在进行。\n   - `FILENAME`：设置为从环形缓冲区读取的文件名 `filename`。\n   - `FTP_URL`：设置为输入的 FTP 服务器 URL。\n   - `FTP_DOWNLOAD`：设置为 `FALSE`，表示进行文件上传。\n   - `FTP_ACTIV`：设置为输入的 `FTP_ACTIV`，表示 FTP 客户端是否激活。\n   - `FILE_DELETE`：设置为输入的 `FILE_DELETE`，表示是否在传输后删除文件。\n   - `TIMEOUT`：设置为输入的 `TIMEOUT`，表示传输超时时间。\n   - `DNS_IP4` 和 `PLC_IP4`：设置为输入的 DNS 和 PLC 的 IP 地址。\n   - `DONE` 和 `BUSY`：分别输出到 `ftp_done` 和 `ftp_busy`，表示传输完成和传输进行中。\n\n-- REGION 错误处理\n   功能块检查以下错误情况，并更新输出变量 `ERROR_C` 和 `ERROR_T`：\n   - 如果 `FTP_CLIENT.ERROR_T` 不为 0，表示 FTP 客户端发生错误，将 `FTP_CLIENT.ERROR_C` 和 `FTP_CLIENT.ERROR_T` 分别输出到 `ERROR_C` 和 `ERROR_T`。\n   - 如果 `UCBD.BUF_DATA_LOST` 大于 0，表示环形缓冲区数据丢失，将 `ERROR_C` 设置为 `DWORD#2`，`ERROR_T` 设置为 `BYTE#6`。\n   - 如果 `UCBD.BUF_USED_MAX` 大于 `USINT#90`，表示环形缓冲区使用率过高，将 `ERROR_C` 设置为 `DWORD#1`，`ERROR_T` 设置为 `BYTE#6`。\n   - 如果没有错误发生，将 `ERROR_C` 和 `ERROR_T` 分别设置为 `DWORD#0` 和 `BYTE#0`。\n\n-- REGION 定时器控制\n   定时器 `WT_1` 用于控制重试间隔时间。当步骤为 20 时，定时器启动，等待指定的重试间隔时间 `RETRY_TIME`。定时器的 `IN` 参数设置为 `step = 20`，表示在步骤 20 时启动定时器。当定时器到达指定时间时，`WT_1.Q` 为真，触发重试逻辑。\n\n-- REGION 输出更新\n   根据当前步骤和错误状态，更新输出变量：\n   - `BUSY`：设置为 `step = 10`，表示功能块正在处理文件传输。\n   - `DONE`：设置为 `step = 0`，表示功能块已完成文件传输。\n   - `ERROR_C` 和 `ERROR_T`：根据错误处理逻辑更新，表示发生的错误代码和类型。\n\n- 总结\n此功能块通过状态机控制文件传输的流程，支持重试机制和错误处理，确保文件能够成功上传到 FTP 服务器。每个步骤都有明确的逻辑和处理流程，确保功能块的稳定性和可靠性。", "name": "DLOG_FILE_TO_FTP"}