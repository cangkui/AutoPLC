{"variables": [], "instructions": [], "planning": "- 概述\n这个功能块名为“EVENTS”，用于检查给定日期是否与存储在数组中的假期日期匹配。如果匹配，则输出假期名称和布尔值表示是否在假期期间。功能块还支持使能输入，用于控制输出是否有效。\n\n- 变量定义\n代码中定义了以下几类变量：\n - 输入变量：`DATE_IN`（输入日期），`ENA`（使能信号）。\n - 输出变量：`Y`（是否在假期期间），`NAME`（假期名称）。\n - 内部变量：`i`（循环计数器），`last_active`（上一次处理的日期），`size`（假期数组大小），`day_in`（输入日期的天数），`cyr`（输入日期的年份），`lday`（假期日期的天数），`check`（当前检查的假期数据），`y_int`（内部布尔值表示是否在假期期间），`name_int`（内部存储的假期名称）。\n - 输入输出变量：`ELIST`（假期数据数组，存储假期信息）。\n\n- 主逻辑部分\n-- REGION 日期处理与假期检查\n   功能块首先检查当前输入的日期是否与上一次处理的日期不同。如果不同，则更新`last_active`为当前日期，并初始化`y_int`和`name_int`为默认值。然后，提取输入日期的天数和年份，并遍历`ELIST`数组中的每个假期数据。\n   对于每个假期，计算假期的实际日期（考虑年份），并检查输入日期是否在假期的有效范围内（从假期开始日期到假期结束日期）。如果匹配，则设置`y_int`为`TRUE`，并将`name_int`设置为假期名称，然后退出循环。\n-- REGION 使能控制与输出\n   如果使能信号`ENA`为真，则将`y_int`和`name_int`的值分别赋给输出变量`Y`和`NAME`。如果使能信号为假，则将`Y`设置为`FALSE`，并将`NAME`设置为空字符串。\n\n- 总结\n功能块的核心逻辑是通过遍历假期数组，检查输入日期是否在任意一个假期的有效范围内。如果找到匹配的假期，则输出假期名称和布尔值表示是否在假期期间。使能信号用于控制输出是否有效。", "name": "EVENTS"}