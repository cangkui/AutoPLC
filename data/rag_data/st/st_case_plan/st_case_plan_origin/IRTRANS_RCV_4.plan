{"variables": [], "instructions": [], "planning": "- 概述\n  这段代码定义了一个名为 `IRTRANS_RCV_4` 的功能块，用于处理红外接收器的信号解码逻辑。它根据输入的设备代码和键码，输出对应的信号状态。\n\n- 变量定义\n  代码中定义了以下几类变量：\n  - 输入变量：`DEV_CODE`（设备代码）、`KEY_CODE_0` 到 `KEY_CODE_3`（键码）、`CMD`（命令信号）。\n  - 输入输出变量：`DEV`（设备代码）、`KEY`（键码）。\n  - 输出变量：`Q0` 到 `Q3`，分别对应键码的解码结果。\n  - 临时变量：`decode`，用于存储解码条件的中间结果。\n\n- 主逻辑部分\n  -- REGION 解码逻辑\n      首先，通过 `decode := cmd AND dev_code = dev;` 计算解码条件。只有当 `CMD` 为真且 `DEV_CODE` 与 `DEV` 匹配时，`decode` 才为真。\n      然后，根据 `KEY` 的值与 `KEY_CODE_0` 到 `KEY_CODE_3` 的匹配情况，结合 `decode` 的结果，分别设置 `Q0` 到 `Q3` 的输出值。具体逻辑如下：\n      - `Q0 := key = key_code_0 AND decode;`：如果 `KEY` 与 `KEY_CODE_0` 匹配且 `decode` 为真，则 `Q0` 为真。\n      - `Q1 := key = key_code_1 AND decode;`：如果 `KEY` 与 `KEY_CODE_1` 匹配且 `decode` 为真，则 `Q1` 为真。\n      - `Q2 := key = key_code_2 AND decode;`：如果 `KEY` 与 `KEY_CODE_2` 匹配且 `decode` 为真，则 `Q2` 为真。\n      - `Q3 := key = key_code_3 AND decode;`：如果 `KEY` 与 `KEY_CODE_3` 匹配且 `decode` 为真，则 `Q3` 为真。\n\n  这段代码的核心逻辑是通过匹配设备代码和键码，结合命令信号，输出对应的解码结果。它适用于红外接收器信号处理等场景。", "name": "IRTRANS_RCV_4"}