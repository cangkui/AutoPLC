{"variables": [], "instructions": [], "planning": "- 概述\n该功能块名为 `GEN_RDM`，用于生成一个基于随机数的输出值。它通过定时器控制输出的更新频率，并在每次定时器达到设定时间时生成一个新的随机数，经过缩放和偏移后输出。\n\n- 变量定义\n代码中定义了以下几类变量：\n  - 输入变量：`PT`（定时器周期，类型为 `TIME`），`AM`（振幅，类型为 `REAL`，默认值为1），`OS`（偏移量，类型为 `REAL`）。\n  - 输出变量：`Q`（布尔值，表示是否生成新输出），`Out`（生成的随机数输出，类型为 `REAL`）。\n  - 内部变量：`tx`（当前时间间隔，类型为 `TIME`），`last`（上一次更新时间，类型为 `TIME`），`init`（初始化标志，类型为 `BOOL`）。\n\n- 主逻辑部分\n  -- REGION 初始化\n    在功能块首次运行时，`init` 为 `FALSE`，进入初始化逻辑。将 `init` 设置为 `TRUE`，记录当前时间到 `last`，并将 `tx` 重置为 `t#0s`，表示时间间隔从零开始。\n  \n  -- REGION 定时器逻辑\n    计算当前时间间隔 `tx`，即从 `last` 到当前时间的差值。如果 `tx` 大于或等于设定的周期 `PT`，则执行以下操作：\n    1. 更新 `last` 为 `last + PT`，表示下一次更新的时间点。\n    2. 将 `tx` 减去 `PT`，保留剩余的时间间隔。\n    3. 生成一个随机数 `RDM(0)`（范围在0到1之间），通过公式 `Out = AM * (RDM(0) - 0.5) + OS` 计算输出值。其中，`AM` 控制随机数的振幅，`OS` 控制偏移量。\n    4. 将 `Q` 设置为 `TRUE`，表示输出了新的随机数。\n    如果 `tx` 小于 `PT`，则将 `Q` 设置为 `FALSE`，表示未生成新输出。\n  \n  -- REGION 输出结果\n    每次定时器达到设定时间时，输出 `Out` 为经过缩放和偏移的随机数，同时 `Q` 为 `TRUE`；否则 `Q` 为 `FALSE`。", "name": "GEN_RDM"}