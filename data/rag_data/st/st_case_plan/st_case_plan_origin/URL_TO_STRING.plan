{"variables": [], "instructions": [], "planning": "- 概述\n  该函数名为 `URL_TO_STRING`，其作用是将一个 URL 结构体转换为字符串格式。URL 结构体包含多个字段，如协议、用户、密码、域名、端口、路径、查询参数和锚点。函数通过逐步拼接这些字段的值，最终生成一个完整的 URL 字符串。\n\n- 变量定义\n  代码中定义了一个输入变量 `IN`，其类型为 `URL`。`URL` 结构体包含以下字段：\n  - `PROTOCOL`：协议（如 \"http\" 或 \"https\"）\n  - `USER`：用户名\n  - `PASSWORD`：密码\n  - `DOMAIN`：域名\n  - `PORT`：端口号\n  - `PATH`：路径\n  - `QUERY`：查询参数\n  - `ANCHOR`：锚点\n\n- 主逻辑部分\n  -- REGION 协议部分\n      如果 `IN.PROTOCOL` 不为空，则将协议与 `://` 拼接，作为 URL 字符串的起始部分。\n      ```plaintext\n      IF IN.PROTOCOL <> '' THEN URL_TO_STRING := CONCAT(IN.PROTOCOL,'://'); END_IF;\n      ```\n\n  -- REGION 用户和密码部分\n      如果 `IN.USER` 不为空，则将用户名拼接到 URL 字符串中。如果 `IN.PASSWORD` 也不为空，则将 `:` 和密码拼接到用户名后面。最后，添加 `@` 符号。\n      ```plaintext\n      IF IN.USER <> '' THEN\n          URL_TO_STRING := CONCAT(URL_TO_STRING, IN.USER);\n          IF IN.PASSWORD <> '' THEN\n              URL_TO_STRING := CONCAT(URL_TO_STRING, ':');\n              URL_TO_STRING := CONCAT(URL_TO_STRING, IN.PASSWORD);\n          END_IF;\n          URL_TO_STRING := CONCAT(URL_TO_STRING, '@');\n      END_IF;\n      ```\n\n  -- REGION 域名部分\n      将 `IN.DOMAIN` 直接拼接到 URL 字符串中。\n      ```plaintext\n      URL_TO_STRING := CONCAT(URL_TO_STRING, IN.DOMAIN);\n      ```\n\n  -- REGION 端口部分\n      如果 `IN.PORT` 大于 0，则将 `:` 和端口号拼接到 URL 字符串中。端口号需要从 `WORD` 类型转换为字符串。\n      ```plaintext\n      IF IN.PORT > 0 THEN\n          URL_TO_STRING := CONCAT(URL_TO_STRING, ':');\n          URL_TO_STRING := CONCAT(URL_TO_STRING, WORD_TO_STRING(IN.PORT));\n      END_IF;\n      ```\n\n  -- REGION 路径部分\n      将 `IN.PATH` 直接拼接到 URL 字符串中。\n      ```plaintext\n      URL_TO_STRING := CONCAT(URL_TO_STRING, IN.PATH);\n      ```\n\n  -- REGION 查询参数部分\n      如果 `IN.QUERY` 不为空，则将 `?` 和查询参数拼接到 URL 字符串中。\n      ```plaintext\n      IF IN.QUERY <> '' THEN\n          URL_TO_STRING := CONCAT(URL_TO_STRING, '?');\n          URL_TO_STRING := CONCAT(URL_TO_STRING, IN.QUERY);\n      END_IF;\n      ```\n\n  -- REGION 锚点部分\n      如果 `IN.ANCHOR` 不为空，则将 `#` 和锚点拼接到 URL 字符串中。\n      ```plaintext\n      IF IN.ANCHOR <> '' THEN\n          URL_TO_STRING := CONCAT(URL_TO_STRING, '#');\n          URL_TO_STRING := CONCAT(URL_TO_STRING, IN.ANCHOR);\n      END_IF;\n      ```\n\n- 输出结果\n  最终，函数返回一个完整的 URL 字符串，包含协议、用户、密码、域名、端口、路径、查询参数和锚点（如果这些字段存在）。", "name": "URL_TO_STRING"}