{"variables": [], "instructions": [], "planning": "- 概述\n  这个函数名为 `ELEMENT_GET`，其作用是从一个字符串中提取指定分隔符分隔的特定位置的子字符串。输入参数包括分隔符 `SEP` 和位置 `POS`，输出结果存储在 `ELEMENT_GET` 中。\n\n- 变量定义\n  代码中定义了以下几类变量：\n  - 输入变量：`SEP`（分隔符），`POS`（位置）。\n  - 输入输出变量：`ELEMENT`（原始字符串）。\n  - 内部变量：\n    - `i` 和 `o`：用于遍历字符串的索引。\n    - `pt` 和 `po`：指向原始字符串和输出字符串的指针。\n    - `cnt`：用于计数分隔符的数量。\n    - `c`：当前字符的临时存储变量。\n\n- 主逻辑部分\n  -- REGION 初始化\n    首先，`pt` 和 `po` 分别被初始化为指向输入字符串 `ELEMENT` 和输出字符串 `ELEMENT_GET` 的指针。`i` 和 `o` 被初始化为 1，`cnt` 被初始化为 0。\n\n  -- REGION 查找指定位置的子字符串\n    使用一个 `WHILE` 循环遍历输入字符串，直到找到指定位置的分隔符或达到字符串的最大长度。循环中，如果当前字符等于分隔符 `SEP`，则增加计数器 `cnt`。每次循环结束后，`i` 递增以继续遍历。\n\n  -- REGION 提取子字符串\n    在找到指定位置的分隔符后，使用另一个 `WHILE` 循环从当前位置开始提取子字符串，直到遇到下一个分隔符或字符串结束。提取的字符被复制到输出字符串 `ELEMENT_GET` 中，`o` 递增以继续填充输出字符串。\n\n  -- REGION 结束处理\n    在提取完成后，输出字符串的最后一个字符被设置为 0，表示字符串的结束。\n\n- 总结\n  该函数通过遍历输入字符串并计数分隔符，找到指定位置的子字符串，并将其提取到输出字符串中。整个过程使用了指针和索引来高效地操作字符串。", "name": "ELEMENT_GET"}