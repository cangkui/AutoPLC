{"variables": [], "instructions": [], "planning": "- 概述\n这段代码实现了一个名为“TUNE2”的功能块，用于控制一个输出值（Y）的调整过程。功能块支持手动和快速调整模式，并且可以设置上下限值。它通过状态机来处理不同的调整请求，并使用定时器来控制调整的速度和步长。\n\n- 变量定义\n代码中定义了以下几类变量：\n - 输入变量：SET（设置）、SU（慢速增加）、SD（慢速减少）、FU（快速增加）、FD（快速减少）、RST（复位）、SS（慢速步长）、FS（快速步长）、Limit_L（下限）、LIMIT_H（上限）、RST_val（复位值）、SET_val（设置值）、TR（时间限制）、S1（慢速速度）、S2（快速速度）\n - 输出变量：Y（输出值）\n - 内部变量：tx（当前时间）、start（开始时间）、state（状态）、in（输入状态）、step（步长）、SPEED（速度）、Y_start（起始值）\n\n- 主逻辑部分\n-- REGION 初始化与复位\n   首先，获取当前时间并存储在变量`tx`中。如果复位信号（RST）为真，则将输出值（Y）设置为复位值（RST_val），并将状态（state）重置为0。如果设置信号（SET）为真，则将输出值（Y）设置为设置值（SET_val），并将状态（state）重置为0。\n\n-- REGION 状态机处理\n   如果状态（state）大于0，则进入状态机处理逻辑。根据当前状态（state）的值，设置输入状态（in）为相应的输入信号（SU、SD、FU、FD）。然后，检查输入状态和时间限制：\n   - 如果输入状态为假且当前时间减去开始时间小于等于时间限制（TR），则将输出值（Y）增加步长（step），并将状态（state）重置为0。\n   - 如果输入状态为真且当前时间减去开始时间大于等于时间限制（TR），则将输出值（Y）增加速度（speed）乘以时间差。\n   - 如果输入状态为假，则将状态（state）重置为0。\n\n-- REGION 慢速增加/减少\n   如果慢速增加信号（SU）为真，则将状态（state）设置为1，记录开始时间（start），设置步长（step）为慢速步长（SS），设置速度（speed）为慢速速度（S1）的千分之一，并记录当前输出值（Y）为起始值（Y_start）。\n   如果慢速减少信号（SD）为真，则将状态（state）设置为2，记录开始时间（start），设置步长（step）为负的慢速步长（SS），设置速度（speed）为负的慢速速度（S1）的千分之一，并记录当前输出值（Y）为起始值（Y_start）。\n\n-- REGION 快速增加/减少\n   如果快速增加信号（FU）为真，则将状态（state）设置为3，记录开始时间（start），设置步长（step）为快速步长（FS），设置速度（speed）为快速速度（S2）的千分之一，并记录当前输出值（Y）为起始值（Y_start）。\n   如果快速减少信号（FD）为真，则将状态（state）设置为4，记录开始时间（start），设置步长（step）为负的快速步长（FS），设置速度（speed）为负的快速速度（S2）的千分之一，并记录当前输出值（Y）为起始值（Y_start）。\n\n-- REGION 输出限制\n   最后，使用`LIMIT`函数将输出值（Y）限制在指定的下限（Limit_L）和上限（LIMIT_H）之间。", "name": "TUNE2"}