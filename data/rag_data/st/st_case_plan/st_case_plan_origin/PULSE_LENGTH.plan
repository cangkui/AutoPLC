{"variables": [], "instructions": [], "planning": "- 概述\n  这是一个名为 `PULSE_LENGTH` 的功能块，用于检测输入信号的脉冲长度，并根据脉冲长度将输出分为短脉冲、中等脉冲和长脉冲。脉冲长度通过用户定义的 `T_short` 和 `T_long` 时间阈值来判断。\n\n- 变量定义\n  代码中定义了以下几类变量：\n  - 输入变量：`in`（输入信号）、`T_short`（短脉冲时间阈值，默认 100ms）、`T_long`（长脉冲时间阈值，默认 1s）。\n  - 输出变量：`short`（短脉冲标志）、`middle`（中等脉冲标志）、`long`（长脉冲标志）。\n  - 内部变量：`tx`（当前时间）、`tn`（脉冲开始时间）、`edge`（上升沿检测标志）。\n\n- 主逻辑部分\n  -- REGION 初始化\n    在每次循环开始时，首先将输出变量 `short`、`middle` 和 `long` 初始化为 `FALSE`，表示默认没有检测到脉冲。然后，通过 `OSCAT_BASIC.T_PLC_MS()` 函数获取当前时间，并将其转换为 `TIME` 类型，存储在 `tx` 中。\n\n  -- REGION 上升沿检测\n    如果输入信号 `in` 为 `TRUE`，并且 `edge` 为 `FALSE`，则检测到上升沿。此时，将 `edge` 设置为 `TRUE`，并记录当前时间 `tx` 到 `tn` 中，表示脉冲的开始时间。\n\n  -- REGION 下降沿检测与脉冲长度判断\n    如果输入信号 `in` 为 `FALSE`，并且 `edge` 为 `TRUE`，则检测到下降沿。此时，将 `edge` 设置为 `FALSE`，并计算脉冲的持续时间 `tn = tx - tn`。根据脉冲长度 `tn` 与 `T_short` 和 `T_long` 的比较结果，设置相应的输出标志：\n    - 如果 `tn < T_short`，则设置 `short` 为 `TRUE`，表示检测到短脉冲。\n    - 如果 `tn > T_long`，则设置 `long` 为 `TRUE`，表示检测到长脉冲。\n    - 否则，设置 `middle` 为 `TRUE`，表示检测到中等脉冲。\n\n  -- REGION 长脉冲持续检测\n    如果输入信号 `in` 为 `TRUE`，并且当前时间 `tx` 与脉冲开始时间 `tn` 的差值大于 `T_long`，则直接设置 `long` 为 `TRUE`，表示检测到长脉冲。这一逻辑用于处理输入信号持续为高电平且超过长脉冲阈值的情况。\n\n- 总结\n  该功能块通过检测输入信号的上升沿和下降沿，计算脉冲的持续时间，并根据用户定义的时间阈值将脉冲分为短、中、长三种类型。输出变量 `short`、`middle` 和 `long` 分别表示检测到的脉冲类型。逻辑简单清晰，适用于需要根据脉冲长度进行分类的应用场景。", "name": "PULSE_LENGTH"}