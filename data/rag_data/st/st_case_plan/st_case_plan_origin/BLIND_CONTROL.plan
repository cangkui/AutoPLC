{"variables": [], "instructions": [], "planning": "- 概述\n  这段代码实现了一个名为“BLIND_CONTROL”的功能块，用于控制窗帘的位置和角度。它通过输入信号（如上升、下降、目标位置和角度）来控制窗帘的移动，并输出当前的位置、角度、状态等信息。\n\n- 变量定义\n  代码中定义了以下几类变量：\n  - 输入变量：UP（上升信号）、DN（下降信号）、S_IN（状态输入）、PI（目标位置）、AI（目标角度）、T_UD（上下移动时间）、T_ANGLE（角度调整时间）、SENS（灵敏度）、T_LOCKOUT（锁定时间）。\n  - 输出变量：POS（当前位置）、ANG（当前角度）、MU（电机上升信号）、MD（电机下降信号）、STATUS（状态输出）。\n  - 内部变量：act（窗帘执行器实例）、delta（位置或角度的偏差）、bTimeTest（时间测试标志）、iPos（内部位置）、iAngel（内部角度）。\n\n- 主逻辑部分\n  -- REGION 时间测试逻辑\n     如果`bTimeTest`为真，则模拟输入信号，将`PI`和`AI`分别设置为`iPos`和`iAngel`，并将`UP`和`DN`设置为真，用于测试目的。\n  \n  -- REGION 执行器初始化\n     调用`act`功能块，传入`T_UD`、`T_ANGLE`和`T_LOCKOUT`参数，初始化窗帘执行器。\n\n  -- REGION 窗帘控制逻辑\n     如果`UP`和`DN`同时为真，表示需要根据目标位置和角度调整窗帘状态。逻辑如下：\n     - 如果当前位置小于目标位置减去偏差`delta`，则启动上升信号，关闭下降信号，重置`delta`，并设置状态为121。\n     - 如果当前位置大于目标位置加上偏差`delta`，则启动下降信号，关闭上升信号，重置`delta`，并设置状态为122。\n     - 如果当前角度小于目标角度减去偏差`delta`且角度调整时间大于100ms，则启动上升信号，关闭下降信号，设置`delta`为灵敏度的一半，并设置状态为123。\n     - 如果当前角度大于目标角度加上偏差`delta`且角度调整时间大于100ms，则启动下降信号，关闭上升信号，设置`delta`为灵敏度的一半，并设置状态为124。\n     - 如果以上条件均不满足，则关闭上升和下降信号，设置`delta`为灵敏度值，并将状态设置为输入状态`S_IN`。\n     如果`UP`和`DN`不同时为真，则直接将`UP`和`DN`信号传递给执行器，并将状态设置为输入状态`S_IN`。\n\n  -- REGION 执行器更新\n     再次调用`act`功能块，传入更新后的参数，以确保执行器状态同步。\n\n  -- REGION 输出更新\n     将执行器的当前位置、角度、电机上升信号、电机下降信号和状态输出到功能块的输出变量中。\n\n- 总结\n  该功能块通过比较当前状态与目标状态，控制窗帘的上升和下降信号，并调整位置和角度。它还支持时间测试模式，并输出当前的状态信息。逻辑中使用了偏差`delta`和灵敏度`SENS`来优化控制精度。", "name": "BLIND_CONTROL"}