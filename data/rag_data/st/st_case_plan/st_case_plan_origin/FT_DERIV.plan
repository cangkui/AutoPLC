{"variables": [], "instructions": [], "planning": "- 概述\n这段代码是一个使用SCL编写的功能块，名为“FT_DERIV”，用于计算输入信号的微分（导数）。它通过测量输入信号的变化率来计算微分值，并根据一个比例系数 `K` 进行缩放。\n\n- 变量定义\n代码中定义了以下几类变量：\n  - 输入变量：`in`（输入信号）、`K`（比例系数，默认值为1.0）、`run`（运行标志，默认值为TRUE）。\n  - 输出变量：`out`（微分计算结果）。\n  - 内部变量：`old`（存储上一次的输入值）、`tx`（当前时间戳）、`last`（上一次的时间戳）、`init`（初始化标志）、`tc`（时间差）。\n\n- 主逻辑部分\n  -- REGION 时间差计算\n    首先，通过 `T_PLC_US()` 函数获取当前的时间戳（以微秒为单位），并将其存储在 `tx` 变量中。然后，计算当前时间戳与上一次时间戳 `last` 之间的差值，并将其转换为实数类型存储在 `tc` 变量中。最后，更新 `last` 为当前时间戳，以便在下一次计算时使用。\n  \n  -- REGION 初始化\n    如果 `init` 标志为 FALSE，表示功能块尚未初始化。此时，将 `init` 设置为 TRUE，并将 `old` 初始化为当前的输入值 `in`，以便后续计算微分时使用。\n\n  -- REGION 微分计算\n    如果功能块正在运行（`run` 为 TRUE）且时间差 `tc` 大于 0.0，则进行微分计算。微分值通过以下公式计算：\n    ```\n    out = (in - old) / tc * 1000000.0 * K\n    ```\n    其中，`(in - old)` 表示输入信号的变化量，`tc` 是时间差（以微秒为单位），`1000000.0` 用于将时间差从微秒转换为秒，`K` 是比例系数。计算完成后，将 `old` 更新为当前的输入值 `in`，以便在下一次计算时使用。\n  \n  -- REGION 输出处理\n    如果功能块未运行（`run` 为 FALSE）或时间差 `tc` 为 0.0，则将输出 `out` 设置为 0.0，表示没有微分值被计算。\n\n- 总结\n该功能块通过测量输入信号的变化率来计算微分值，并根据比例系数 `K` 进行缩放。它使用时间戳来计算时间差，并仅在功能块运行时进行微分计算。如果功能块未运行或时间差为 0，则输出为 0。", "name": "FT_DERIV"}