{"variables": [], "instructions": [], "planning": "- 概述\n此功能块名为 `INTERLOCK_4`，用于根据输入信号和模式控制输出信号。它支持四种不同的模式，每种模式对输入信号的处理方式不同。功能块还提供了一个触发脉冲（TP）输出，用于指示输出信号是否发生变化。\n\n- 变量定义\n代码中定义了以下几类变量：\n  - 输入变量：`I0`、`I1`、`I2`、`I3` 是四个布尔输入信号，`E` 是使能信号，`MODE` 是模式选择信号。\n  - 输出变量：`OUT` 是字节输出信号，`TP` 是触发脉冲信号。\n  - 内部变量：`in` 是当前输入信号的字节表示，`last` 是上一次的输入信号，`old` 是上一次的输出信号，`lmode` 是上一次的模式。\n\n- 主逻辑部分\n  -- REGION 使能逻辑\n     - 如果使能信号 `E` 为真，则执行以下逻辑：\n       1. **模式切换处理**：如果当前模式 `MODE` 与上一次的模式 `lmode` 不同，则重置输出信号 `OUT`、`last` 和 `old`，并更新 `lmode` 为当前模式。\n       2. **输入信号更新**：将四个布尔输入信号 `I0`、`I1`、`I2`、`I3` 组合成一个字节 `in`。\n       3. **输入信号变化处理**：如果当前输入信号 `in` 与上一次的输入信号 `last` 不同，则根据当前模式 `MODE` 处理输入信号并更新输出信号 `OUT`。\n          - **模式 0**：直接将输入信号 `in` 赋值给输出信号 `OUT`。\n          - **模式 1**：按优先级处理输入信号，`I3` 的优先级最高，`I2` 次之，`I1` 再次之，`I0` 最低。如果高优先级信号为真，则忽略低优先级信号。\n          - **模式 2**：检测输入信号的上升沿，并按照优先级处理。仅当输入信号从假变为真时，才会更新输出信号 `OUT`。\n          - **模式 3**：在输出信号 `OUT` 与输入信号 `in` 无冲突的情况下，按照优先级处理输入信号。如果输出信号 `OUT` 的某些位与输入信号 `in` 的对应位都为真，则不会更新输出信号。\n       4. **触发脉冲生成**：如果输出信号 `OUT` 与上一次的输出信号 `old` 不同，则设置触发脉冲信号 `TP` 为真，否则为假。同时更新 `old` 为当前输出信号 `OUT`。\n     - 如果使能信号 `E` 为假，则重置所有输出和内部变量，并将触发脉冲信号 `TP` 设置为假。", "name": "INTERLOCK_4"}