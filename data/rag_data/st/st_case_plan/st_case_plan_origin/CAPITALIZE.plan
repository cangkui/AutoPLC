{"variables": [], "instructions": [], "planning": "- 概述\n该函数名为 `CAPITALIZE`，其功能是将输入的字符串中每个单词的首字母大写，其余字母保持不变。该函数通过遍历字符串中的每个字符，并在检测到空格时将下一个字符转换为大写。\n\n- 变量定义\n代码中定义了以下几类变量：\n  - 输入变量：`str`，表示输入的字符串。\n  - 内部变量：\n    - `PT`：指向字符串中当前字符的指针。\n    - `pos`：用于遍历字符串的索引。\n    - `L`：存储字符串的长度。\n    - `first`：布尔变量，用于标记当前字符是否为单词的首字母。\n\n- 主逻辑部分\n  -- REGION 初始化\n    - 首先，将函数输出 `CAPITALIZE` 初始化为输入字符串 `str`。\n    - 使用 `LEN` 函数获取字符串的长度，并存储在变量 `L` 中。\n    - 将指针 `PT` 初始化为指向函数输出 `CAPITALIZE` 的地址。\n\n  -- REGION 遍历字符串\n    - 使用 `FOR` 循环遍历字符串中的每个字符，从第 1 个字符到第 `L` 个字符。\n    - 在循环中，检查 `first` 变量是否为 `TRUE`。如果是，则将当前字符转换为大写，并更新 `first` 变量为 `FALSE`。\n    - 检查当前字符是否为空格（ASCII 码为 32）。如果是，则将 `first` 变量设置为 `TRUE`，表示下一个字符是单词的首字母。\n    - 将指针 `PT` 移动到下一个字符的位置。\n\n  -- REGION 结束\n    - 循环结束后，函数输出 `CAPITALIZE` 即为每个单词首字母大写的字符串。", "name": "CAPITALIZE"}