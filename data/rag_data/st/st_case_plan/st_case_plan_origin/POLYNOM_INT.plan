{"variables": [], "instructions": [], "planning": "- 概述\n  该函数 `POLYNOM_INT` 用于计算多项式插值。它通过给定的点集 `XY` 和输入值 `X`，使用牛顿插值法计算并返回插值结果。\n\n- 变量定义\n  代码中定义了以下几类变量：\n  - 输入变量：\n    - `X`：插值点的值。\n    - `XY`：一个二维数组，存储已知点的坐标（x, y）。\n    - `Pts`：已知点的数量。\n  - 内部变量：\n    - `I` 和 `J`：用于循环控制的整数变量。\n    - `stop`：用于控制内层循环的终止条件。\n\n- 主逻辑部分\n  -- REGION 初始化\n    首先，将 `Pts` 的值限制为最大 5（通过 `MIN(pts, 5)` 实现），以确保不会超出数组 `XY` 的范围。\n\n  -- REGION 计算差商\n    使用双重循环计算差商（divided differences），这是牛顿插值法的核心步骤。\n    - 外层循环 (`i`) 从 1 到 `Pts`，控制差商的阶数。\n    - 内层循环 (`j`) 从 `Pts` 到 `i + 1`，逐次更新差商的值。\n    - 公式：`XY[j,1] := (XY[j,1] - XY[j-1,1]) / (XY[j,0] - XY[j-i,0])`，计算并存储差商。\n\n  -- REGION 计算插值结果\n    使用单层循环计算最终的插值结果。\n    - 循环从 `Pts` 到 1，逐步累加插值结果。\n    - 公式：`POLYNOM_INT := POLYNOM_INT * (X - XY[i,0]) + XY[i,1]`，通过牛顿插值公式计算最终值。\n\n  -- REGION 返回结果\n    最终，函数返回计算得到的插值结果 `POLYNOM_INT`。", "name": "POLYNOM_INT"}