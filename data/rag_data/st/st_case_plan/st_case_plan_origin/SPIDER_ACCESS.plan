{"variables": [], "instructions": [], "planning": "- 概述\n  这个功能块名为`SPIDER_ACCESS`，用于通过网络访问一个远程服务器，读取或写入一个变量的值。它使用HTTP协议与服务器通信，并通过状态机控制整个流程。功能块支持两种模式：读取模式和写入模式。\n\n- 变量定义\n  代码中定义了以下几类变量：\n  - 输入输出变量：IP_C（IP配置）、S_BUF（发送缓冲区）、R_BUF（接收缓冲区）、VALUE（读取或写入的值）、VAR_NAME（变量名称）。\n  - 输入变量：MODE（模式，用于区分读取或写入操作）。\n  - 输出变量：ERROR（错误代码，用于指示操作是否成功）。\n  - 内部变量：state（状态机状态）、st_tmp（临时字符串）、URL_DATA（URL数据）、HTTP_GET（HTTP GET操作）、value_len（值的长度）、body_len（响应体的长度）、mode_save（保存的模式）。\n\n- 主逻辑部分\n  -- REGION 状态机\n     状态机控制整个功能块的执行流程，分为以下几个状态：\n     - 状态00：\n       首先检查`MODE`是否在有效范围内（1或2）。如果是，则保存`MODE`到`mode_save`。然后，根据`VAR_NAME`是否包含点号（`.`），决定是否在变量名前添加前缀`%40GV.`。接着，根据`MODE`的值，构建相应的URL。如果`MODE`为2（写入模式），则构建一个包含变量名和值的URL；如果`MODE`为1（读取模式），则构建一个仅包含变量名的URL。最后，将状态设置为60，准备执行HTTP请求。\n     - 状态60：\n       检查`HTTP_GET`操作是否完成。如果完成，则根据`MODE`的值处理响应。如果`MODE`为2（写入模式），则检查响应体的长度是否与写入值的长度一致，并将结果存储在`ERROR`中。如果`MODE`为1（读取模式），则从响应体中提取值并存储在`VALUE`中。如果`HTTP_GET`操作出错，则将错误代码存储在`ERROR`中。最后，将状态设置为100。\n     - 状态100：\n       检查`HTTP_GET`操作是否已完成。如果未完成，则将状态重置为0，准备重新执行流程。\n\n  -- REGION HTTP_GET操作\n     在状态机的每个状态中，`HTTP_GET`操作根据当前状态执行不同的任务：\n     - 当状态为60时，`HTTP_GET`操作执行GET请求，使用之前构建的URL数据。\n     - 当状态为100时，`HTTP_GET`操作解锁缓冲区，准备下一次操作。\n\n  状态机和`HTTP_GET`操作共同协作，确保功能块能够正确执行读取或写入操作，并处理可能发生的错误。", "name": "SPIDER_ACCESS"}