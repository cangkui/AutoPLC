{"variables": [], "instructions": [], "planning": "- 概述\n  这段代码是一个使用SCL编写的功能块，名为“FT_TN64”，用于实现一个简单的滑动窗口滤波器。该功能块接收一个实数输入和一个时间参数，输出滤波后的结果和一个触发信号。\n\n- 变量定义\n  代码中定义了以下几类变量：\n  - 输入变量：输入值（`in`）和时间参数（`T`）。\n  - 输出变量：输出值（`out`）和触发信号（`trig`）。\n  - 内部变量：窗口长度（`length`）、存储输入值的数组（`X`）、计数器（`cnt`）、上一次更新时间（`last`）、当前时间（`tx`）和初始化标志（`init`）。\n\n- 主逻辑部分\n  -- REGION 初始化\n     首先，获取当前时间并存储在变量`tx`中。触发信号`trig`初始化为`FALSE`。如果功能块未初始化（`init`为`FALSE`），则将输入值`in`存储到数组`X`的当前位置，并设置初始化标志`init`为`TRUE`，同时记录当前时间`last`。\n  \n  -- REGION 滑动窗口更新\n     如果当前时间`tx`与上一次更新时间`last`的差值大于或等于时间参数`T`除以窗口长度`length`，则执行以下操作：\n     1. 更新计数器`cnt`：如果`cnt`已达到窗口长度减1，则重置为0，否则递增1。\n     2. 将数组`X`中`cnt`位置的值赋给输出`out`。\n     3. 将当前输入值`in`存储到数组`X`的`cnt`位置。\n     4. 更新上一次更新时间`last`为当前时间`tx`。\n     5. 将触发信号`trig`设置为`TRUE`，表示输出已更新。\n\n- 总结\n  该功能块通过维护一个固定长度的数组来实现滑动窗口滤波。每次输入值更新时，都会根据时间参数`T`和窗口长度`length`决定是否更新输出值，并触发相应的信号。这种滤波器可以用于平滑输入信号或提取信号的某些特征。", "name": "FT_TN64"}