{"variables": [], "instructions": [], "planning": "- 概述\n  这是一个用于红外接收解码的功能块，名为 `IRTRANS_RCV_8`。它的主要功能是根据输入的设备代码和键值代码，判断当前接收到的红外信号是否匹配，并输出相应的布尔值。\n\n- 变量定义\n  代码中定义了以下几类变量：\n  - 输入变量：`dev_code`（设备代码）、`key_code_0` 到 `key_code_7`（8个键值代码）、`CMD`（命令信号）。\n  - 输入输出变量：`DEV`（当前设备代码）、`KEY`（当前键值代码）。\n  - 输出变量：`Q0` 到 `Q7`（8个布尔输出，分别对应键值代码的匹配结果）。\n  - 临时变量：`decode`（解码标志，用于判断设备代码是否匹配）。\n\n- 主逻辑部分\n  -- REGION 解码逻辑\n     此区域实现了红外信号解码的核心逻辑：\n     1. **解码标志计算**：首先，通过 `decode := cmd AND dev_code = dev` 计算解码标志。如果 `CMD` 为真且 `dev_code` 与 `DEV` 匹配，则 `decode` 为真，表示设备代码匹配。\n     2. **键值匹配**：根据 `KEY` 的值与 `key_code_0` 到 `key_code_7` 的匹配结果，结合解码标志 `decode`，计算输出 `Q0` 到 `Q7`。如果 `KEY` 与某个键值代码匹配且 `decode` 为真，则对应的输出为真，否则为假。\n     - `Q0 := key = key_code_0 AND decode;`\n     - `Q1 := key = key_code_1 AND decode;`\n     - `Q2 := key = key_code_2 AND decode;`\n     - `Q3 := key = key_code_3 AND decode;`\n     - `Q4 := key = key_code_4 AND decode;`\n     - `Q5 := key = key_code_5 AND decode;`\n     - `Q6 := key = key_code_6 AND decode;`\n     - `Q7 := key = key_code_7 AND decode;`\n\n  此功能块的逻辑非常简单，主要用于红外信号的设备代码和键值代码的匹配判断，并输出相应的匹配结果。", "name": "IRTRANS_RCV_8"}