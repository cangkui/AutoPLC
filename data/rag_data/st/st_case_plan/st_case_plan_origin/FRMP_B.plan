{"variables": [], "instructions": [], "planning": "- 概述\n  这个函数 `FRMP_B` 用于根据输入的起始值、方向、延迟时间 `TD` 和参考时间 `TR` 计算一个字节值。函数根据 `TD` 和 `TR` 的关系，结合方向 `DIR`，动态调整输出值。\n\n- 变量定义\n  代码中定义了以下几类变量：\n  - 输入变量：\n    - `START`：起始值，类型为 `BYTE`。\n    - `DIR`：方向，类型为 `BOOL`，决定计算的方向（增加或减少）。\n    - `TD`：延迟时间，类型为 `TIME`。\n    - `TR`：参考时间，类型为 `TIME`。\n  - 输出变量：\n    - `FRMP_B`：计算结果，类型为 `BYTE`。\n\n- 主逻辑部分\n  -- REGION 计算逻辑\n      1. **比较 `TD` 和 `TR`**：\n         - 如果 `TD` 小于 `TR`，则执行以下逻辑：\n           - 将 `TD` 和 `TR` 转换为 `DWORD` 类型。\n           - 将 `TD` 左移 8 位后除以 `TR`，得到一个比例值。\n           - 将比例值转换为 `BYTE` 类型，并确保其不超过 `START` 或 `255 - START`（根据方向 `DIR` 选择）。\n           - 如果 `DIR` 为真（增加方向），则将比例值加到 `START` 上。\n           - 如果 `DIR` 为假（减少方向），则从 `START` 中减去比例值。\n         - 如果 `TD` 大于或等于 `TR`，则直接根据方向 `DIR` 输出 `0` 或 `255`。\n      2. **输出结果**：\n         - 最终的计算结果存储在 `FRMP_B` 中，作为函数的返回值。\n\n  这个函数的核心逻辑是根据时间比例动态调整输出值，同时考虑方向的影响。如果延迟时间 `TD` 小于参考时间 `TR`，则输出值会根据比例调整；否则，输出值会根据方向直接设置为最小值或最大值。", "name": "FRMP_B"}