{"variables": [], "instructions": [], "planning": "- 概述\n此函数名为 `CHK_REAL`，用于检查一个 `REAL` 类型的输入值 `X` 是否为有效浮点数。通过位操作和条件判断，函数返回一个 `BYTE` 类型的值，表示输入值的状态（有效、NaN、无穷大等）。\n\n- 变量定义\n代码中定义了两类变量：\n - 输入变量：`X`，是一个 `REAL` 类型的浮点数，作为函数的输入。\n - 内部变量：`pt` 是一个指向 `DWORD` 类型的指针，用于存储 `X` 的地址；`tmp` 是一个 `DWORD` 类型的临时变量，用于存储位操作的结果。\n\n- 主逻辑部分\n-- REGION 主逻辑\n   1. **获取地址**：首先，使用 `ADR(X)` 获取输入值 `X` 的内存地址，并将其赋值给指针变量 `pt`。\n   2. **位操作**：通过 `ROL(pt^, 1)` 对 `pt` 指向的 `DWORD` 值进行循环左移 1 位的操作，结果存储在 `tmp` 中。\n   3. **条件判断**：\n      - 如果 `tmp` 小于 `16#FF000000`，表示 `X` 是一个有效的浮点数，函数返回 `16#00`。\n      - 如果 `tmp` 等于 `16#FF000000`，表示 `X` 是一个 NaN（非数字），函数返回 `16#20`。\n      - 如果 `tmp` 等于 `16#FF000001`，表示 `X` 是一个无穷大（正或负），函数返回 `16#40`。\n      - 否则，表示 `X` 是一个无效的浮点数，函数返回 `16#80`。\n-- END_REGION 主逻辑", "name": "CHK_REAL"}