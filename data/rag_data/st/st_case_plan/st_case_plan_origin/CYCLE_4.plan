{"variables": [], "instructions": [], "planning": "- 概述\n  这段代码定义了一个名为 `CYCLE_4` 的功能块，用于实现一个基于时间的四状态循环状态机。状态机的切换由输入的时间参数控制，并且可以通过外部信号强制跳转到指定状态。\n\n- 变量定义\n  代码中定义了以下几类变量：\n  - 输入变量：使能信号 `E`、四个时间参数 `T0`、`T1`、`T2`、`T3`、状态跳转信号 `S0`、强制跳转状态值 `SX`、强制跳转信号 `SL`。\n  - 输出变量：当前状态 `STATE`。\n  - 内部变量：当前时间 `tx`、上一次状态切换时间 `last`、初始化标志 `init`。\n\n- 主逻辑部分\n  -- REGION 初始化\n     - 在功能块的第一次运行时，初始化内部变量。`init` 被设置为 `TRUE`，并记录当前时间 `tx` 到 `last` 中。\n     - 这个逻辑确保功能块在第一次运行时正确初始化。\n\n  -- REGION 状态机逻辑\n     - 如果使能信号 `E` 为 `TRUE`，则执行状态机逻辑。\n     - 如果强制跳转信号 `SL` 为 `TRUE`，则根据 `SX` 的值强制跳转到指定状态（限制在 0 到 3 之间），并更新 `last` 为当前时间。同时，将 `SL` 置为 `FALSE`。\n     - 如果 `SL` 为 `FALSE`，则根据当前状态和输入的时间参数进行状态切换：\n       - 状态 0：如果当前时间与 `last` 的差值大于等于 `T0`，则切换到状态 1，并更新 `last`。\n       - 状态 1：如果当前时间与 `last` 的差值大于等于 `T1`，则切换到状态 2，并更新 `last`。\n       - 状态 2：如果当前时间与 `last` 的差值大于等于 `T2`，则切换到状态 3，并更新 `last`。\n       - 状态 3：如果当前时间与 `last` 的差值大于等于 `T3`，则根据 `S0` 的值决定是否跳回状态 0，并更新 `last`。\n     - 如果使能信号 `E` 为 `FALSE`，则将状态重置为 0，并更新 `last` 为当前时间。\n\n  -- REGION 输出\n     - 当前状态 `STATE` 被输出，反映状态机的当前状态。\n\n- 总结\n  该功能块实现了一个基于时间的四状态循环状态机，支持通过外部信号强制跳转状态。状态切换由输入的时间参数控制，并且可以通过使能信号 `E` 启用或禁用状态机。状态机的逻辑简单清晰，适用于需要周期性状态切换的应用场景。", "name": "CYCLE_4"}