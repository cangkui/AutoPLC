{"variables": [], "instructions": [], "planning": "- 概述\n此功能块名为 `DEC_TO_INT`，用于将十进制格式的字符串转换为整数。它支持处理带符号的整数（负号“-”），并忽略非数字字符。\n\n- 变量定义\n代码中定义了以下几类变量：\n - 输入变量：`DEC`，表示输入的十进制字符串，最大长度为10。\n - 局部变量：\n   - `pt`：指向字符串的指针，用于逐个访问字符。\n   - `i`：循环计数器，用于遍历字符串。\n   - `X`：当前字符的ASCII值。\n   - `sign`：标志位，用于判断是否为负数。\n   - `stop`：字符串的长度，用于控制循环次数。\n\n- 主逻辑部分\n-- REGION 字符串遍历与转换\n   1. 初始化指针 `pt`，使其指向输入字符串 `DEC` 的起始地址。\n   2. 获取字符串的长度，并将其赋值给 `stop`，用于控制循环次数。\n   3. 使用 `FOR` 循环遍历字符串中的每个字符：\n      - 通过指针 `pt` 获取当前字符的 ASCII 值，并赋值给 `X`。\n      - 如果 `X` 是数字字符（ASCII 值在 48 到 57 之间），则将其转换为对应的数字，并累加到结果 `DEC_TO_INT` 中。\n      - 如果 `X` 是负号“-”（ASCII 值为 45）且当前结果 `DEC_TO_INT` 为 0，则设置 `sign` 标志为 `TRUE`，表示结果为负数。\n      - 移动指针 `pt`，指向下一个字符。\n   4. 循环结束后，如果 `sign` 标志为 `TRUE`，则将结果 `DEC_TO_INT` 取反，表示负数。\n-- REGION 结果输出\n   最终，功能块返回转换后的整数值 `DEC_TO_INT`。\n\n- 示例\n例如，输入字符串 `\"-123\"`，功能块会将其转换为整数 `-123`。输入字符串 `\"45a6\"`，功能块会忽略非数字字符 `'a'`，并返回整数 `456`。", "name": "DEC_TO_INT"}