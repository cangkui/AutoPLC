{"variables": [], "instructions": [], "planning": "- 概述\n该功能块名为 `FILTER_DW`，用于对输入的32位无符号整数（DWORD）进行滤波处理。滤波器的输出是一个经过平滑处理的32位无符号整数。滤波器的行为由输入的时间常数 `T` 控制，`T` 决定了滤波器的响应速度。\n\n- 变量定义\n代码中定义了以下几类变量：\n  - 输入变量：`X` 是待滤波的输入值（DWORD），`T` 是滤波器的时间常数（TIME）。\n  - 输出变量：`Y` 是滤波后的输出值（DWORD）。\n  - 内部变量：\n    - `last` 存储上一次调用功能块时的时间戳（DWORD）。\n    - `tx` 存储当前的时间戳（DWORD）。\n    - `init` 是一个布尔值，用于标记是否已经初始化。\n    - `Yi` 是一个实数值，用于存储滤波器的中间计算结果。\n\n- 主逻辑部分\n  -- REGION 初始化与滤波计算\n    1. **获取当前时间戳**：首先，通过 `T_PLC_MS()` 函数获取当前的时间戳（以毫秒为单位），并将其存储在 `tx` 变量中。\n    2. **初始化检查**：如果 `init` 为 `FALSE`（表示功能块尚未初始化）或时间常数 `T` 为 `t#0s`（表示无需滤波），则进行初始化：\n       - 将 `init` 设置为 `TRUE`，标记功能块已初始化。\n       - 将输入值 `X` 转换为实数值并直接赋值给 `Yi`，作为滤波器的初始值。\n    3. **滤波计算**：如果功能块已经初始化且 `T` 不为 `t#0s`，则进行滤波计算：\n       - 计算当前输入值 `X` 与上一次输出值 `Y` 之间的差值。\n       - 根据时间差（`tx - last`）和时间常数 `T`，计算滤波器的增量值。\n       - 将该增量值累加到 `Yi` 上，得到新的滤波结果。\n    4. **更新时间戳**：将当前时间戳 `tx` 存储到 `last` 中，用于下一次调用时的计算。\n    5. **输出结果**：将滤波器的中间结果 `Yi` 转换回 DWORD 类型，并赋值给输出变量 `Y`。\n\n- 滤波器的数学原理\n滤波器的计算基于一阶低通滤波器的公式：\n\\[ Y_i = Y_i + (X - Y) \\cdot \\frac{\\Delta t}{T} \\]\n其中：\n  - \\( Y_i \\) 是滤波器的中间结果。\n  - \\( X \\) 是当前输入值。\n  - \\( Y \\) 是上一次的输出值。\n  - \\( \\Delta t \\) 是当前时间与上一次时间的时间差。\n  - \\( T \\) 是滤波器的时间常数。\n\n- 注意事项\n  - 如果时间常数 `T` 设置为 `t#0s`，滤波器将直接输出输入值 `X`，不进行任何滤波处理。\n  - 滤波器的响应速度由时间常数 `T` 决定，`T` 越大，滤波器的响应越慢，输出值的变化越平滑。\n  - 功能块需要在每个扫描周期中调用，以确保时间戳和滤波计算的准确性。", "name": "FILTER_DW"}