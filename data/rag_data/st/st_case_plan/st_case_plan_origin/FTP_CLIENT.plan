{"variables": [], "instructions": [], "planning": "- 概述\n  这个功能块名为“FTP_CLIENT”，用于实现FTP客户端的功能，包括文件的上传、下载和删除。它通过状态机来管理FTP会话的各个阶段，并处理网络通信、错误检测和超时控制。\n  \n- 变量定义\n  代码中定义了以下几类变量：\n   - 输入变量：激活、文件名、FTP URL、下载标志、激活标志、删除文件标志、超时时间、DNS IP地址、PLC IP地址。\n   - 输出变量：完成标志、忙标志、错误代码、错误类型。\n   - 内部变量：IP控制结构、网络缓冲区、URL数据、DNS客户端、文件服务器、状态变量、临时变量、超时定时器等。\n\n- - 主逻辑部分\n  -- REGION 初始化（Step 00）\n     当激活信号（ACTIVATE）从假变为真时，初始化FTP会话。首先，重置文件大小（ftp_file_size）为0，并设置超时时间（TIMEOUT）为至少10秒。同时，设置两个额外的超时时间（timeout2和timeout3），用于后续的定时器控制。重置完成标志（DONE）、错误代码（ERROR_C）和错误类型（ERROR_T），并清空文件服务器诊断信息（FSD.ERROR）。\n     接下来，解析FTP URL（FTP_URL）并存储在URL_DATA结构中。如果URL中没有用户名，则使用默认值“Anonymous”和“User@”。然后，解析文件名（FILENAME）和路径，并设置FTP路径（ftp_path）。如果URL路径中没有文件名，则将文件名附加到路径中。初始化完成后，进入下一步（step 10）。\n\n  -- REGION DNS解析（Step 10）\n     在step 10中，调用DNS客户端（DNS_CLIENT）解析FTP服务器的域名（URL_DATA.DOMAIN）。如果DNS解析成功（DNS_CLIENT.DONE为真），进入step 20；如果DNS解析失败（DNS_CLIENT.ERROR不为0），设置错误代码（ERROR_C）和错误类型（ERROR_T），并跳转到错误处理步骤（step 980）。\n\n  -- REGION FTP连接（Step 20）\n     在step 20中，配置IP控制结构（IP_C1）以连接到FTP服务器的控制端口（端口21）。设置IP地址为DNS解析的结果（DNS_CLIENT.IP4），并启用连接（IP_C1.C_ENABLE为真）。同时，重置接收缓冲区（R_BUF1.SIZE）为0，并禁用第二个IP控制结构（IP_C2.C_ENABLE为假）。然后，进入step 30。\n\n  -- REGION FTP登录（Step 30）\n     在step 30中，等待FTP服务器的欢迎消息（状态码220）。如果收到状态码220，发送用户名（USER命令），并将命令字符串存储在snd_text中。设置下一步为step 40，并进入发送步骤（step 999）。\n\n  -- REGION 发送用户名（Step 40）\n     在step 40中，等待服务器的响应。如果收到状态码331（需要密码），发送密码（PASS命令），并将命令字符串存储在snd_text中。设置下一步为step 50，并进入发送步骤（step 999）。如果收到状态码230（登录成功），则跳过密码发送，直接进入step 50。\n\n  -- REGION 设置传输模式（Step 50）\n     在step 50中，发送“TYPE I”命令以设置二进制传输模式，并将命令字符串存储在snd_text中。设置下一步为step 54，并进入发送步骤（step 999）。\n\n  -- REGION 获取文件大小（Step 54）\n     在step 54中，如果下载标志（FTP_DOWNLOAD）为真，发送“SIZE”命令以获取文件大小，并将命令字符串存储在snd_text中。设置下一步为step 56，并进入发送步骤（step 999）。如果下载标志为假，则直接进入step 60。\n\n  -- REGION 解析文件大小（Step 56）\n     在step 56中，等待服务器的响应（状态码213），并解析文件大小。从响应文本中提取文件大小，并将其转换为无符号双字（UDINT）存储在ftp_file_size中。然后，进入step 60。\n\n  -- REGION 配置数据传输连接（Step 60）\n     在step 60中，根据激活标志（FTP_ACTIV）决定使用主动模式还是被动模式。如果使用主动模式，发送“PORT”命令，并将命令字符串存储在snd_text中。设置下一步为step 80，并进入发送步骤（step 999）。如果使用被动模式，发送“PASV”命令，并将命令字符串存储在snd_text中。设置下一步为step 70，并进入发送步骤（step 999）。\n\n  -- REGION 解析被动模式响应（Step 70）\n     在step 70中，等待服务器的响应（状态码227），并解析返回的IP地址和端口。从响应文本中提取IP地址和端口，并将其存储在dw_tmp和w_tmp中。然后，进入step 100。\n\n  -- REGION 建立数据传输连接（Step 100）\n     在step 100中，配置IP控制结构（IP_C2）以建立数据传输连接。根据传输模式（主动或被动），设置IP地址（dw_tmp）和端口（w_tmp），并启用连接（IP_C2.C_ENABLE为真）。同时，重置接收缓冲区（R_BUF2.SIZE）为0。然后，进入step 120。\n\n  -- REGION 数据传输（Step 120）\n     在step 120中，检查数据传输连接的状态（IP_C2.C_STATE）。如果连接成功，根据下载标志（FTP_DOWNLOAD）决定是发送“RETR”命令（下载）还是“STOR”命令（上传），并将命令字符串存储在snd_text中。设置下一步为step 400（下载）或step 140（上传），并进入发送步骤（step 999）。\n\n  -- REGION 文件上传（Step 140）\n     在step 140中，等待服务器的响应（状态码125或150），然后开始上传文件。在step 160中，配置文件服务器（FS）以读取文件内容并发送到FTP服务器。设置文件服务器模式（FSD.MODE）为1（读取文件），并启用数据传输（IP_C2.MAILBOX[2]为1）。然后，进入step 200。\n\n  -- REGION 文件上传完成检查（Step 200）\n     在step 200中，检查文件是否上传完成（FSD.MODE为0且FSD.ERROR为0）。如果未完成，则继续上传；否则，关闭数据传输连接（IP_C2.MAILBOX[2]为0），并进入step 210。\n\n  -- REGION 文件上传完成（Step 210）\n     在step 210中，检查文件是否完全上传（FSD.FILE_SIZE - FSD.OFFSET为0）。如果未完成，则继续上传；否则，关闭数据传输连接（IP_C2.C_ENABLE为假），并进入step 300。\n\n  -- REGION 文件下载（Step 400）\n     在step 400中，发送“RETR”命令以下载文件，并将命令字符串存储在snd_text中。设置下一步为step 410，并进入发送步骤（step 999）。\n\n  -- REGION 文件下载开始（Step 410）\n     在step 410中，等待服务器的响应（状态码125或150），然后开始下载文件。启用数据传输（IP_C2.R_OBSERVE为真），并进入step 420。\n\n  -- REGION 文件下载处理（Step 420）\n     在step 420中，配置文件服务器（FS）以接收文件内容并保存到本地。设置文件服务器模式（FSD.MODE）为3（写入文件），并进入step 460。\n\n  -- REGION 文件下载完成检查（Step 440）\n     在step 440中，检查文件是否下载完成（FSD.FILE_SIZE等于ftp_file_size）。如果未完成，则继续下载；否则，关闭数据传输连接（IP_C2.C_ENABLE为假），并进入step 700。\n\n  -- REGION 文件删除（Step 700）\n     在step 700中，如果下载标志为真且删除文件标志（FILE_DELETE）为真，则发送“DELE”命令以删除远程文件，并将命令字符串存储在snd_text中。设置下一步为step 720，并进入发送步骤（step 999）。\n\n  -- REGION 文件删除完成（Step 720）\n     在step 720中，等待服务器的响应（状态码250），然后进入step 740。\n\n  -- REGION 结束FTP会话（Step 740）\n     在step 740中，发送“QUIT”命令以结束FTP会话，并将命令字符串存储在snd_text中。设置下一步为step 760，并进入发送步骤（step 999）。\n\n  -- REGION 关闭连接（Step 760）\n     在step 760中，等待服务器的响应（状态码221），然后关闭控制连接（IP_C1.C_ENABLE为假）。如果未下载文件且删除文件标志为真，则删除本地文件（FSD.MODE为4）。然后，进入step 900。\n\n  -- REGION 完成处理（Step 900）\n     在step 900中，设置完成标志（DONE）为真，并进入step 980。\n\n  -- REGION 清理和重置（Step 980）\n     在step 980中，关闭所有连接（IP_C1.C_ENABLE和IP_C2.C_ENABLE为假），重置缓冲区（S_BUF1.SIZE、S_BUF2.SIZE、R_BUF1.SIZE、R_BUF2.SIZE为0），并清空文件服务器模式（FSD.MODE为5）。然后，进入step 990。\n\n  -- REGION 检查连接状态（Step 990）\n     在step 990中，检查所有连接是否已关闭（IP_C1.C_STATE和IP_C2.C_STATE为0），并重置状态机（step 0）。\n\n  -- REGION 错误处理\n     如果在任何步骤中发生错误（如网络错误、文件服务器错误或超时），则设置错误代码（ERROR_C）和错误类型（ERROR_T），并跳转到step 980进行清理和重置。\n\n  -- REGION 定时器\n     使用TON定时器（TON_WAIT）来检测超时。如果超时，则设置错误代码（ERROR_C）和错误类型（ERROR_T），并跳转到step 980。\n\n  -- REGION 发送和接收数据\n     在发送步骤（snd_step）中，将命令字符串转换为缓冲区并发送到FTP服务器。在接收步骤中，解析服务器的响应，并根据状态码决定下一步操作。", "name": "FTP_CLIENT"}