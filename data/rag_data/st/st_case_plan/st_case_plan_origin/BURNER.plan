{"variables": [], "instructions": [], "planning": "- 概述\n这段代码是一个使用SCL编写的功能块，名为“BURNER”，用于控制燃烧器的运行。它包括多个状态，用于管理燃烧器的预热、点火、运行和关闭过程。代码还处理了超温、复位、计时器重置等逻辑，并计算了燃烧器的能耗。\n\n- 变量定义\n代码中定义了以下几类变量：\n - 输入变量：包括启动信号、阶段2信号、超温信号、油温信号、火焰信号、复位信号、计时器复位信号、多个时间参数（预热时间、预通风时间、预点火时间、后点火时间、阶段2延迟、安全时间、锁定时间）、多次点火标志、功率参数（KW1、KW2）。\n - 输出变量：包括电机控制、线圈1控制、线圈2控制、预热控制、点火控制、能耗（KWh）、状态、故障标志。\n - 输入输出变量：包括运行时间1、运行时间2、循环次数。\n - 内部变量：包括状态、上一次时间、当前时间、上一次状态改变时间、计时器1、计时器2、上一次油温状态、循环次数2。\n\n- - 主逻辑部分\n-- REGION 初始化和复位处理\n   此区域处理复位、超温和状态为0的情况。首先，检查复位信号（rst）、超温信号（over_temp）或当前状态是否为0。如果满足任一条件，则进一步检查锁定时间是否已过（tx - last_change >= lockout_time）且复位信号为真。如果满足，则设置状态为110，清除故障标志，并将状态设置为1。否则，重置电机（motor）、线圈1（coil1）、线圈2（coil2）、点火（ignite）和预热（pre_heat）控制。如果超温信号为真，则设置状态为9并标记故障（fail := TRUE）。最后，记录当前时间（last_change := tx）和上一次时间（last := tx），并将状态设置为1。\n\n-- REGION 计时器复位处理\n   此区域处理计时器复位信号（rst_timer）。如果计时器复位信号为真，则重置运行时间1（runtime1）、运行时间2（runtime2）、循环次数（cycles）和循环次数2（cycles2）为0。\n\n-- REGION 状态机\n   此区域实现了燃烧器的状态机，根据当前状态（state）执行不同的逻辑：\n   - 状态1（state := 1）：\n     - 如果启动信号（in）和火焰信号（flame）为真，则跳转到状态7（state := 7），关闭预热（pre_heat := FALSE），并设置状态为2（status := 2）。\n     - 如果只有启动信号为真，则开启预热（pre_heat := TRUE），跳转到状态2（state := 2），并记录当前时间（last_change := tx）。\n   - 状态2（state := 2）：\n     - 如果预热时间已过（tx - last_change >= pre_heat_time）且油温为真（oil_temp），则开启电机（motor := TRUE），跳转到状态3（state := 3），并记录当前时间（last_change := tx）。\n     - 如果预热时间已过但油温为假（NOT oil_temp），则跳转到状态7（state := 7），关闭预热（pre_heat := FALSE），并设置状态为1（status := 1）。\n     - 如果火焰信号为真，则跳转到状态7（state := 7），关闭预热（pre_heat := FALSE），并设置状态为2（status := 2）。\n   - 状态3（state := 3）：\n     - 如果预通风时间减去预点火时间已过（tx - last_change >= pre_vent_time - pre_ignite_time），则开启点火（ignite := TRUE），跳转到状态4（state := 4），并记录当前时间（last_change := tx）。\n     - 如果火焰信号为真，则跳转到状态7（state := 7），关闭预热（pre_heat := FALSE）和电机（motor := FALSE），并设置状态为3（status := 3）。\n   - 状态4（state := 4）：\n     - 如果预点火时间已过（tx - last_change >= pre_ignite_time），则开启线圈1（coil1 := TRUE），跳转到状态5（state := 5），并记录当前时间（last_change := tx）。\n   - 状态5（state := 5）：\n     - 如果安全时间已过（tx - last_change >= safety_time）或火焰信号为真，则检查火焰信号：\n       - 如果火焰信号为假，则跳转到状态7（state := 7），关闭电机（motor := FALSE）、线圈1（coil1 := FALSE）、预热（pre_heat := FALSE）和点火（ignite := FALSE），并设置状态为4（status := 4）。\n       - 如果火焰信号为真，则跳转到状态6（state := 6），并记录当前时间（last_change := tx）。\n   - 状态6（state := 6）：\n     - 如果火焰信号为假且多次点火标志为假（NOT multiple_ignition），则跳转到状态7（state := 7），关闭电机（motor := FALSE）、线圈1（coil1 := FALSE）、线圈2（coil2 := FALSE）、预热（pre_heat := FALSE）和点火（ignite := FALSE），并设置状态为5（status := 5）。\n     - 如果火焰信号为假且多次点火标志为真，则重新开启点火（ignite := TRUE），跳转到状态5（state := 5），并关闭线圈2（coil2 := FALSE）。\n     - 如果火焰信号为真，则检查后点火时间（post_ignite_time）和阶段2延迟（stage2_delay）：\n       - 如果后点火时间已过，则关闭点火（ignite := FALSE）。\n       - 如果阶段2延迟已过且阶段2信号为真（stage2），则开启线圈2（coil2 := TRUE），否则关闭线圈2（coil2 := FALSE）。\n\n-- REGION 非启动状态处理\n   此区域处理启动信号为假（NOT in）的情况。如果启动信号为假，则重置状态为1（state := 1），并关闭电机（motor := FALSE）、线圈1（coil1 := FALSE）、线圈2（coil2 := FALSE）、点火（ignite := FALSE）和预热（pre_heat := FALSE），并记录当前时间（last_change := tx）。\n\n-- REGION 计时器更新和能耗计算\n   此区域更新计时器并计算能耗。根据火焰信号（flame）、启动信号（in）、电机（motor）、线圈1（coil1）和线圈2（coil2）的状态，更新运行时间1（runtime1）、运行时间2（runtime2）、循环次数（cycles）和循环次数2（cycles2）。然后，根据运行时间和功率参数（KW1、KW2）计算能耗（KWh := UDINT_TO_REAL(runtime1) * KW1 / 3600.0 + UDINT_TO_REAL(runtime2) * KW2 / 3600.0）。\n\n-- REGION 状态和故障标志更新\n   此区域更新状态和故障标志。如果状态大于0且小于100（status > 0 AND status < 100），则标记故障（fail := TRUE）。否则，根据启动信号（in）、火焰信号（flame）、电机（motor）、线圈1（coil1）和线圈2（coil2）的状态，更新状态：\n   - 如果启动信号为假，则设置状态为110（status := 110）。\n   - 如果火焰信号、启动信号、电机、线圈1和线圈2都为真，则设置状态为113（status := 113）。\n   - 如果火焰信号、启动信号和电机、线圈1为真，则设置状态为112（status := 112）。\n   - 否则，设置状态为111（status := 111）。\n\nEND_FUNCTION_BLOCK", "name": "BURNER"}