{"variables": [], "instructions": [], "planning": "- 概述\n  该功能块名为 `WEEKDAY_TO_STRING`，用于将星期几的数字表示转换为对应的字符串表示。支持多种语言和字符串格式。\n\n- 变量定义\n  - 输入变量：\n    - `WDAY`：表示星期几的数字（1到7）。\n    - `LANG`：表示语言的编号（0表示默认语言，其他值表示特定语言）。\n    - `LX`：表示字符串格式的编号（0表示标准格式，2表示另一种格式）。\n  - 内部变量：\n    - `ly`：用于存储实际使用的语言编号。\n\n- 主逻辑部分\n  -- REGION 语言选择\n    首先，根据输入的语言编号 `LANG` 确定实际使用的语言编号 `ly`。如果 `LANG` 为 0，则使用默认语言；否则，使用 `LANG` 和语言最大编号 `LANGUAGE.LMAX` 中的较小值。\n    代码逻辑：\n    ```plaintext\n    IF LANG = 0 THEN ly := LANGUAGE.DEFAULT; ELSE ly := MIN(LANG, LANGUAGE.LMAX); END_IF;\n    ```\n\n  -- REGION 输入验证\n    检查 `WDAY` 是否在有效范围内（1到7）。如果 `WDAY` 不在范围内，则直接返回，不执行后续逻辑。\n    代码逻辑：\n    ```plaintext\n    IF wday < 1 OR wday > 7 THEN RETURN; END_IF;\n    ```\n\n  -- REGION 字符串转换\n    根据 `LX` 的值选择不同的字符串格式：\n    - 如果 `LX` 为 0，则从 `language.WEEKDAYS` 数组中获取标准格式的字符串。\n    - 如果 `LX` 为 2，则从 `language.WEEKDAYS2` 数组中获取另一种格式的字符串。\n    代码逻辑：\n    ```plaintext\n    IF LX = 0 THEN WEEKDAY_TO_STRING := language.WEEKDAYS[ly, WDAY];\n    ELSIF Lx = 2 THEN WEEKDAY_TO_STRING := language.WEEKDAYS2[ly, WDAY];\n    END_IF;\n    ```\n\n- 输出结果\n  功能块的返回值是转换后的字符串，表示星期几的名称。如果输入无效（如 `WDAY` 不在 1 到 7 之间），则返回空值。", "name": "WEEKDAY_TO_STRING"}