{"variables": [], "instructions": [], "planning": "- 概述\n  这段代码定义了一个名为 `TN_SC_READ_ATTR` 的功能块，用于从屏幕缓冲区中读取指定位置的属性值（如颜色）。功能块通过输入坐标 (X, Y) 计算偏移量，并从屏幕缓冲区的属性数组中读取相应的属性值。\n\n- 变量定义\n  代码中定义了以下几类变量：\n  - 输入变量：`Iin_X` 和 `Iin_Y`，表示屏幕上的坐标。\n  - 输出变量：`Oby_ATTR`，表示从屏幕缓冲区读取的属性值。\n  - 局部变量：`in_Offset`，用于计算屏幕缓冲区中的偏移量。\n  - 输入输出变量：`Xus_TN_SCREEN`，表示屏幕缓冲区结构，包含属性数组 `bya_COLOR`。\n\n- 主逻辑部分\n  -- REGION 输入验证\n      首先调用 `TN_SC_XY_ERROR` 函数检查输入的坐标 (X, Y) 是否有效。如果坐标无效，则直接返回，不执行后续逻辑。\n  -- REGION 偏移量计算\n      通过公式 `in_Offset := (Iin_Y * 80) + Iin_X` 计算屏幕缓冲区中的偏移量。这里假设屏幕宽度为 80 个字符，因此 Y 坐标乘以 80 再加上 X 坐标，得到一维数组中的索引。\n  -- REGION 属性读取\n      从屏幕缓冲区的属性数组 `Xus_TN_SCREEN.bya_COLOR` 中读取偏移量 `in_Offset` 对应的属性值，并将其赋值给输出变量 `Oby_ATTR`。\n  -- REGION 结束\n      功能块执行完毕后，直接结束。\n\n- 总结\n  该功能块的核心逻辑是通过输入的坐标 (X, Y) 计算屏幕缓冲区中的偏移量，并从属性数组中读取相应的属性值。如果坐标无效，则直接返回，避免错误操作。代码简洁高效，适用于从屏幕缓冲区中读取特定位置属性的场景。", "name": "TN_SC_READ_ATTR"}