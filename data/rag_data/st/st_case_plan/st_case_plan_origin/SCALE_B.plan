{"variables": [], "instructions": [], "planning": "- 概述\n  这是一个名为 `SCALE_B` 的函数，用于将一个字节（BYTE）类型的输入值 `X` 从一个输入范围 `[I_LO, I_HI]` 线性映射到一个输出范围 `[O_LO, O_HI]`。该函数返回一个实数（REAL）类型的值，表示输入值在输出范围内的映射结果。\n\n- 变量定义\n  代码中定义了以下几类变量：\n  - 输入变量：\n    - `X`：需要被映射的字节值。\n    - `I_LO`：输入范围的下限（字节类型）。\n    - `I_HI`：输入范围的上限（字节类型）。\n    - `O_LO`：输出范围的下限（实数类型）。\n    - `O_HI`：输出范围的上限（实数类型）。\n\n- 主逻辑部分\n  -- REGION 主逻辑：\n    1. **输入范围检查**：\n       - 首先检查输入范围是否有效，即 `I_HI` 是否等于 `I_LO`。如果相等，表示输入范围无效，函数直接返回输出范围的下限 `O_LO`。\n    2. **线性映射计算**：\n       - 如果输入范围有效，则进行线性映射计算：\n         - 使用 `LIMIT` 函数将输入值 `X` 限制在输入范围 `[I_LO, I_HI]` 内，确保 `X` 不会超出范围。\n         - 将 `LIMIT` 的结果转换为实数类型。\n         - 计算输入范围的比例：`(O_HI - O_LO) / BYTE_TO_REAL(I_HI - I_LO)`，表示输出范围与输入范围的比值。\n         - 将比例乘以限制后的输入值，得到映射后的结果。\n    3. **返回结果**：\n       - 将计算结果赋值给函数返回值 `SCALE_B`，并返回该值。\n\n- 关键点解释\n  - **`LIMIT` 函数**：用于确保输入值 `X` 在指定的输入范围内。如果 `X` 小于 `I_LO`，则返回 `I_LO`；如果 `X` 大于 `I_HI`，则返回 `I_HI`；否则返回 `X`。\n  - **线性映射公式**：`(O_HI - O_LO) / (I_HI - I_LO) * (X - I_LO) + O_LO`，这是线性映射的标准公式。代码中通过 `BYTE_TO_REAL` 将字节类型转换为实数类型，以确保计算的准确性。\n  - **输入范围无效的情况**：如果 `I_HI` 等于 `I_LO`，表示输入范围无效，函数直接返回 `O_LO`，避免除以零的错误。\n\n- 示例\n  假设：\n  - `X = 150`\n  - `I_LO = 100`\n  - `I_HI = 200`\n  - `O_LO = 0.0`\n  - `O_HI = 10.0`\n  计算过程：\n  1. 输入值 `X` 被限制在 `[100, 200]` 内，即 `150`。\n  2. 计算比例：`(10.0 - 0.0) / (200 - 100) = 0.1`。\n  3. 计算映射结果：`0.1 * (150 - 100) + 0.0 = 5.0`。\n  最终，函数返回 `5.0`。", "name": "SCALE_B"}