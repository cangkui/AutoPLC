{"variables": [], "instructions": [], "planning": "- 概述\n  这个函数名为 `FSTRING_TO_WEEK`，用于将表示星期的字符串转换为一个字节值，其中每个位代表一个特定的星期。函数支持多语言输入，并通过查找逗号分隔符来解析字符串中的每个星期。\n\n- 变量定义\n  代码中定义了几类变量：\n  - 输入变量：`WEEK` 是一个字符串，表示星期；`LANG` 是一个整数，表示语言代码。\n  - 内部变量：`pos` 是一个整数，用于查找字符串中的逗号位置。\n\n- 主逻辑部分\n  -- REGION 主逻辑\n    1. **查找逗号位置**：首先，使用 `FIND` 函数查找字符串 `WEEK` 中的第一个逗号位置，并将结果存储在 `pos` 变量中。\n    2. **循环解析星期**：通过 `WHILE` 循环，处理字符串中的每个星期：\n       - **提取星期**：使用 `MID` 函数从字符串中提取逗号前的字符（即一个星期的表示）。\n       - **转换为字节值**：调用 `FSTRING_TO_WEEKDAY` 函数将提取的星期转换为对应的位值，并通过 `SHR` 函数将其移位到正确的位置。然后使用 `OR` 操作将结果与当前的 `FSTRING_TO_WEEK` 值合并。\n       - **更新字符串**：使用 `RIGHT` 函数移除已处理的部分（包括逗号），并继续查找下一个逗号位置。\n    3. **处理最后一个星期**：在循环结束后，字符串中可能还剩下最后一个星期。使用相同的方法将其转换为字节值，并通过 `OR` 操作合并到 `FSTRING_TO_WEEK` 中。\n    4. **限制字节范围**：最终，使用 `AND BYTE#127` 操作确保 `FSTRING_TO_WEEK` 的值在 0 到 127 之间（即只保留低 7 位）。\n  -- REGION 结束", "name": "FSTRING_TO_WEEK"}