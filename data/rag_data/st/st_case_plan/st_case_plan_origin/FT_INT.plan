{"variables": [], "instructions": [], "planning": "- 概述\n  这段代码实现了一个积分器功能块，名为 `FT_INT`。它根据输入信号进行积分运算，并支持积分结果的上下限限制。功能块还提供了复位功能，并可以输出当前积分值是否超出限制的布尔信号。\n\n- 变量定义\n  代码中定义了以下几类变量：\n  - 输入变量：输入信号 `IN`、积分增益 `K`、运行信号 `RUN`、复位信号 `RST`、输出下限 `OUT_MIN`、输出上限 `OUT_MAX`。\n  - 输出变量：积分结果 `OUT`、限制标志 `LIM`。\n  - 内部变量：积分器实例 `INTeg`。\n\n- 主逻辑部分\n  -- REGION 复位逻辑\n      首先检查复位信号 `RST` 是否为真。如果为真，则将输出 `OUT` 重置为 0.0，表示积分器被复位。如果复位信号为假，则调用内部积分器 `INTeg` 进行积分运算。积分器的输入为 `IN`，运行信号为 `RUN`，增益为 `K`，输出为 `OUT`。\n\n  -- REGION 输出限制逻辑\n      在积分运算完成后，检查积分结果 `OUT` 是否超出预设的上下限。如果 `OUT` 大于等于 `OUT_MAX`，则将 `OUT` 限制为 `OUT_MAX`，并将限制标志 `LIM` 设置为真。如果 `OUT` 小于等于 `OUT_MIN`，则将 `OUT` 限制为 `OUT_MIN`，并将限制标志 `LIM` 设置为真。如果 `OUT` 在上下限范围内，则将限制标志 `LIM` 设置为假。\n\n- 总结\n  该功能块实现了一个简单的积分器，支持复位功能和输出限制。通过复位信号可以重置积分结果，通过上下限参数可以限制积分输出的范围，并通过 `LIM` 标志指示当前积分值是否超出限制。这种功能常用于控制系统中的积分运算和信号处理场景。", "name": "FT_INT"}