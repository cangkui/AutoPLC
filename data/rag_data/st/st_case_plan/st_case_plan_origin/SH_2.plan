{"variables": [], "instructions": [], "planning": "- 概述\n该功能块 `SH_2` 实现了一个信号处理逻辑，主要用于对输入信号进行滤波和统计分析。它通过一个滑动窗口对输入信号进行采样，并计算窗口内的平均值、最大值和最小值。此外，它还可以根据配置的阈值去除异常值（如高值和低值），从而得到更稳定的输出。\n\n- 变量定义\n代码中定义了以下几类变量：\n  - **输入变量**：`in`（输入信号）、`PT`（采样周期）、`N`（窗口大小，默认16）、`disc`（丢弃的异常值数量）。\n  - **输出变量**：`out`（输出信号）、`trig`（触发标志，表示是否完成一次采样）、`avg`（窗口内信号的平均值）、`high`（窗口内信号的最大值）、`low`（窗口内信号的最小值）。\n  - **内部变量**：`M`（实际窗口大小）、`buf` 和 `buf2`（用于存储采样数据的数组）、`last`（上一次采样的时间）、`i`、`start`、`stop`（循环和索引变量）、`temp`（临时变量）、`tx`（当前时间）、`d2`（计算丢弃的异常值数量的一半）。\n\n- 主逻辑部分\n  -- REGION 采样和数据处理\n     首先，获取当前时间 `tx`，并计算 `d2`（`disc` 的一半）。如果当前时间与上一次采样的时间差大于或等于采样周期 `PT`，则执行以下逻辑：\n     1. 更新 `last` 为当前时间，并设置 `trig` 为 `TRUE`，表示完成一次采样。\n     2. 计算实际窗口大小 `M`，确保其值在 1 到 16 之间。\n     3. 将输入信号 `in` 插入到缓冲区 `buf2` 的开头，并将 `buf2` 的内容复制到 `buf` 中。\n     4. 对 `buf` 中的数据进行排序，以便后续计算。\n     5. 根据 `disc` 的值，计算需要保留的数据范围（去除高值和低值），并计算这些数据的平均值 `avg`、最小值 `low` 和最大值 `high`。\n     6. 输出 `out` 设置为输入信号 `in`。\n\n     如果当前时间与上一次采样的时间差小于采样周期 `PT`，则将 `trig` 设置为 `FALSE`，表示未完成采样。\n\n  -- REGION 排序和滤波\n     在采样和数据处理的过程中，对缓冲区 `buf` 中的数据进行排序。排序采用简单的冒泡排序算法，确保数据按从小到大的顺序排列。排序完成后，根据 `disc` 的值去除异常值（如最高和最低的部分数据），并计算剩余数据的平均值、最小值和最大值。\n\n  -- REGION 输出结果\n     在每次采样完成后，输出以下结果：\n     - `out`：直接输出输入信号 `in`。\n     - `trig`：表示是否完成一次采样。\n     - `avg`：窗口内信号的平均值。\n     - `high`：窗口内信号的最大值。\n     - `low`：窗口内信号的最小值。\n\n- 总结\n该功能块通过滑动窗口对输入信号进行采样和滤波，能够有效地去除异常值并计算信号的平均值、最大值和最小值。适用于需要对信号进行平滑处理或去除噪声的场景。通过配置采样周期 `PT` 和丢弃的异常值数量 `disc`，可以灵活地调整滤波效果。", "name": "SH_2"}