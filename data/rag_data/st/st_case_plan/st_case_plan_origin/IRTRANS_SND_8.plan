{"variables": [], "instructions": [], "planning": "- 概述\n  这个功能块 `IRTRANS_SND_8` 用于处理红外信号的发送。它根据输入信号选择一个红外键码，并将其发送到网络缓冲区。功能块还处理重复发送的逻辑，并确保在设备状态和模式满足条件时执行操作。\n\n- 变量定义\n  代码中定义了以下几类变量：\n  - 输入变量：设备代码（DEV_CODE）、8个红外键码（KEY_CODE_0 到 KEY_CODE_7）、8个输入信号（IN_0 到 IN_7）、重复发送时间（T_REPEAT）。\n  - 输入输出变量：IP控制结构（IP_C）、网络缓冲区（S_BUF）。\n  - 输出变量：当前选择的键值（KEY）。\n  - 内部变量：当前键码（skey）、字符串长度（size）、拼接的字符串（str）、定时器（t）、当前键索引（k）、上一个键索引（lk）、设备状态标志（d）。\n\n- 主逻辑部分\n  -- REGION 设备状态检查\n     首先，检查设备状态和模式是否满足条件。如果设备状态大于127且（IP_C.MAILBOX[1]大于0或IP_C.C_MODE不等于5），则设置设备状态标志 `d` 为真。如果不满足条件，则直接返回，不执行后续逻辑。\n\n  -- REGION 定时器逻辑\n     使用定时器 `t` 来处理重复发送的逻辑。定时器的输入条件是当前键索引 `k` 等于上一个键索引 `lk`，定时时间为 `T_REPEAT`。如果条件满足，定时器开始计时。\n\n  -- REGION 键码选择\n     如果网络缓冲区 `S_BUF` 的大小为0，则根据输入信号 `IN_0` 到 `IN_7` 的状态选择相应的红外键码，并设置当前键索引 `k`。如果没有输入信号，则将上一个键索引 `lk` 和输出键值 `KEY` 重置为0，并直接返回。\n\n  -- REGION 键码发送\n     如果当前键索引 `k` 不等于上一个键索引 `lk` 或定时器 `t` 的输出 `Q` 为真，则开始发送键码。首先，拼接设备代码和选择的键码，生成发送字符串 `str`。然后，将字符串转换为网络缓冲区的内容，并更新缓冲区的大小 `S_BUF.SIZE`。最后，将当前键索引 `k` 赋值给上一个键索引 `lk`，并重置定时器。\n\n  -- REGION 输出键值\n     将当前键索引 `k` 赋值给输出键值 `KEY`，表示当前选择的键码。\n\nEND_FUNCTION_BLOCK", "name": "IRTRANS_SND_8"}