{"variables": [], "instructions": [], "planning": "- 概述\n  这段代码是一个简单的SCL函数，名为`RAD`，用于将角度（以度为单位）转换为弧度。转换后的弧度值会被限制在0到2π之间。\n\n- 变量定义\n  代码中定义了以下几类变量：\n  - 输入变量：`DEG`，表示输入的角度值（以度为单位）。\n  - 输出变量：函数的返回值`RAD`，表示转换后的弧度值。\n\n- 主逻辑部分\n  -- REGION 转换逻辑\n    此区域是函数的核心逻辑，负责将角度值转换为弧度，并将结果限制在0到2π之间。\n    1. **角度转弧度**：首先，将输入的角度值`DEG`乘以一个常数`0.0174532925199433`，这个常数是π/180，用于将度转换为弧度。\n    2. **取模运算**：使用`MODR`函数将转换后的弧度值对`math.PI2`（即2π）取模，确保结果在0到2π之间。`MODR`函数的作用是返回输入值对模数的余数。\n    3. **赋值输出**：将计算得到的弧度值赋给函数的返回值`RAD`。\n\n  这段代码的逻辑非常简单，但非常实用，特别是在需要将角度转换为弧度并确保结果在标准范围内的场景中。", "name": "RAD"}