{"variables": [], "instructions": [], "planning": "- 概述\n  这段代码实现了一个名为“BLIND_SHADE”的功能块，用于控制百叶窗的升降和角度调整。它根据太阳的位置、时间和其他输入参数来决定百叶窗的状态和角度。功能块还考虑了日出和日落的偏移量、太阳的方向和角度偏移、百叶窗的延迟时间等参数。\n\n- 变量定义\n  代码中定义了以下几类变量：\n  - 输入变量：UP（上升命令）、DN（下降命令）、S_IN（状态输入）、PI（位置输入）、AI（角度输入）、ENABLE（使能）、SUN（太阳状态）、sunrise_offset（日出偏移时间）、sunset_preset（日落预设时间）、direction（太阳方向）、angle_offset（角度偏移）、slat_width（百叶窗叶片宽度）、Slat_spacing（百叶窗叶片间距）、Shade_delay（百叶窗延迟时间）、Shade_pos（百叶窗位置）。\n  - 输入输出变量：CX（日历对象，用于获取太阳位置和时间信息）。\n  - 输出变量：QU（上升输出）、QD（下降输出）、STATUS（状态输出）、PO（位置输出）、AO（角度输出）。\n  - 内部变量：angle（计算出的百叶窗角度）、sun_delay（用于延迟太阳信号的定时器）。\n\n- 主逻辑部分\n  -- REGION 太阳延迟处理\n    首先，使用`sun_delay`定时器对`SUN`信号进行延迟处理。定时器的输入为`SUN`信号，延迟时间为`Shade_delay`。定时器的输出`Q`用于后续逻辑判断。\n\n  -- REGION 百叶窗控制逻辑\n    在以下条件满足时，功能块会执行百叶窗的自动控制逻辑：\n    - `UP`和`DN`信号同时为真。\n    - `ENABLE`信号为真。\n    - `sun_delay.Q`为真（太阳信号延迟结束）。\n    - 太阳的水平角度在`direction - angle_offset`和`direction + angle_offset`之间。\n    - 当前时间在日出后`sunrise_offset`时间和日落前`sunset_preset`时间之间。\n\n    如果上述条件满足，功能块会执行以下操作：\n    - 设置`STATUS`为151，表示百叶窗处于自动控制状态。\n    - 将`QU`和`QD`设置为`UP`和`DN`的值，控制百叶窗的升降。\n    - 将`PO`设置为`Shade_pos`，输出百叶窗的位置。\n    - 计算百叶窗的角度`angle`，首先计算叶片间距和叶片宽度的比值，然后根据太阳的垂直角度进一步调整角度。如果太阳的垂直角度在0和`angle`之间，则调整角度并输出到`AO`；否则，将`AO`设置为255（最大角度）。\n\n    如果上述条件不满足，功能块会执行以下操作：\n    - 将`QU`和`QD`设置为`UP`和`DN`的值，控制百叶窗的升降。\n    - 将`PO`设置为`PI`，输出输入的位置。\n    - 将`AO`设置为`AI`，输出输入的角度。\n    - 将`STATUS`设置为`S_IN`，输出输入的状态。\n\n  -- REGION 角度计算\n    功能块根据太阳的垂直角度和百叶窗的叶片间距与宽度计算百叶窗的角度。首先，使用`ATAN`函数计算叶片间距与宽度的比值对应的角度。然后，如果太阳的垂直角度在0和`angle`之间，则进一步调整角度，并使用`LIMIT`函数将角度限制在0到255之间，最后输出到`AO`。如果太阳的垂直角度不在该范围内，则将`AO`设置为255（最大角度）。\n\n  -- REGION 输出处理\n    功能块根据条件判断输出`QU`、`QD`、`PO`、`AO`和`STATUS`的值。如果条件满足，则输出自动控制的结果；否则，输出输入的值。", "name": "BLIND_SHADE"}