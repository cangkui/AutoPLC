{"variables": [], "instructions": [], "planning": "- 概述\n  这段代码实现了一个简单的JK触发器（JK Flip-Flop）功能块。JK触发器是一种基本的数字电路元件，用于存储和操作二进制状态。该功能块通过输入信号 `J`、`K`、`CLK`、`SET` 和 `RST` 来控制输出信号 `Q` 的状态。\n\n- 变量定义\n  代码中定义了以下几类变量：\n  - 输入变量：`SET`（置位）、`J`（J输入）、`CLK`（时钟）、`K`（K输入）、`RST`（复位）。\n  - 输出变量：`Q`（输出状态）。\n  - 内部变量：`edge`（用于检测时钟上升沿的临时变量）。\n\n- 主逻辑部分\n  -- REGION 主逻辑\n     JK触发器的逻辑基于时钟信号 `CLK` 的上升沿触发。以下是逻辑的详细描述：\n     1. **复位和置位逻辑**：\n        - 如果 `RST` 或 `SET` 为真，则优先处理这两个信号。\n        - 如果 `RST` 为真，则 `Q` 被强制设置为假（`Q := NOT rst`，因为 `NOT rst` 是假）。\n        - 如果 `SET` 为真，则 `Q` 被强制设置为真（`Q := NOT rst`，因为 `NOT rst` 是真）。\n     2. **时钟上升沿检测**：\n        - 如果 `CLK` 为真且 `edge` 为假，表示检测到时钟的上升沿，触发 JK 逻辑。\n     3. **JK 逻辑**：\n        - 如果 `J` 和 `K` 的值不同（`J XOR K`），则 `Q` 的值直接设置为 `J` 的值。\n        - 如果 `J` 和 `K` 的值相同，则 `Q` 的值翻转（`Q := K XOR Q`）。\n     4. **更新时钟状态**：\n        - 最后，`edge` 被更新为当前 `CLK` 的值，以便在下一个周期检测时钟上升沿。\n\n- 总结\n  该功能块实现了一个基本的 JK 触发器，支持复位、置位和时钟触发功能。通过 `J` 和 `K` 输入信号，可以控制输出 `Q` 的状态变化。时钟信号 `CLK` 的上升沿用于触发状态更新，而 `RST` 和 `SET` 信号则用于强制设置输出状态。", "name": "FF_JKE"}