Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\nThis code defines a function named `SET_DATE`, which generates a `DATE` type value based on the input year, month, and day. The function converts the date by calculating the number of seconds from a fixed starting point to the given date.\n\n- Variable Definitions\nThe code defines the following types of variables:\n - Input variables: `YEAR` (year), `MONTH` (month), `DAY` (day).\n - Internal variables: `count` (a counter for date calculation), `ofs` (an array storing monthly offsets for date calculation), `ENDIF` (a Boolean variable, unused in the code).\n\n- Main Logic Section\n-- REGION Date Calculation\n   The core logic in this region calculates a `DATE` value based on the input year, month, and day. Here are the detailed steps:\n   1. **Leap Year Check**: First, it checks if the month is greater than 2 and whether the year is a leap year (determined by `SHL(YEAR,14) = 0`). If it's a leap year, an extra day is added to the date calculation.\n   2. **Date Conversion**:\n      - If the leap year condition is met, it calculates the number of days from the start of the year to the given date using `ofs[MONTH] + day` and converts it to seconds.\n      - If the leap year condition is not met, it uses `ofs[MONTH] + day - 1` to calculate the days and similarly converts it to seconds.\n   3. **Year Calculation**: It calculates the number of days from the fixed starting point to the given year using the formula `SHR(INT_TO_DWORD(year) * 1461 - 2878169, 2)` and converts it to seconds.\n   4. **Final Date Generation**: The above results are summed up and converted to a `DATE` type using the `DWORD_TO_DATE` function.\n\n-- REGION Leap Year Counting\n   This region handles special cases for leap years. If the year is a leap year (determined by `SHL(year,14) = 0`), the counter `count` is incremented by 1.\n\n-- REGION Default Date Calculation\n   This region provides a default date calculation logic. If the preceding conditions are not met, it calculates the number of days from the start of the year to the given month using `(month - 1) * 31` and converts it to seconds.\n\n-- REGION Final Date Generation\n   This region combines the previously calculated `count`, `day`, and year information to generate the final `DATE` value. The specific steps include:\n   1. Calculating the number of days from the start of the year to the given date using `count + day - 1`.\n   2. Calculating the number of days from the fixed starting point to the given year using `SHR(INT_TO_DWORD(year) * 1461 - 2878169, 2)`.\n   3. Converting the above results to seconds and generating the `DATE` value via the `DWORD_TO_DATE` function.\n\n- Output Result\nThe function returns a `DATE` type value, representing the number of seconds from the fixed starting point to the input date.", "name": "SET_DATE"}