Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\nThe function block `FT_PT2` simulates a second-order transfer function (PT2). PT2 systems are commonly used to model physical systems with inertia or oscillatory characteristics. This function block calculates the output signal `out` based on the input signal `in`, time constant `T`, damping coefficient `D`, and gain `K`.\n\n- Variable Definitions\nThe code defines the following types of variables:\n  - **Input Variables**: `in` (input signal), `T` (time constant), `D` (damping coefficient), `K` (gain, default value 1.0).\n  - **Output Variables**: `out` (output signal).\n  - **Internal Variables**: `init` (initialization flag), `int1` and `int2` (integrator instances), `tn` and `tn2` (converted values of the time constant), `I1` and `I2` (intermediate state variables).\n\n- Main Logic\n  -- REGION Initialization Logic\n     - If `init` is false (i.e., first run) or the time constant `T` is 0, execute the initialization logic:\n       - Set `init` to true, indicating initialization is complete.\n       - Directly compute the output `out` as `K * in` and initialize `I2` to `out`.\n     - This logic ensures that during the first run or when the time constant is 0, the output is determined directly by the input and gain, bypassing complex integration calculations.\n\n  -- REGION Main Calculation Logic\n     - If initialization is complete and the time constant `T` is not 0, execute the main calculation logic:\n       - Convert the time constant `T` to a real value `tn` and compute its squared value `tn2`.\n       - Use the integrator `int1` to calculate the intermediate variable `I1`, with the input being `in * K / tn2 - I1 * 0.5 * D / TN - I2 / TN2`.\n       - Use the integrator `int2` to calculate the intermediate variable `I2`, with the input being `I1`.\n       - The final output `out` equals `I2`.\n     - This logic simulates the second-order transfer function, using two integrators to compute the system's dynamic response.\n\n- Output Result\n  - The output signal `out` is determined by either the main calculation logic or the initialization logic, depending on whether initialization is complete and the value of the time constant `T`.\n  - If the time constant `T` is 0 or initialization is not complete, the output is directly determined by the input and gain.\n  - Otherwise, the output is derived through the dynamic calculation of the second-order transfer function, reflecting the system's inertia or oscillatory characteristics.", "name": "FT_PT2"}