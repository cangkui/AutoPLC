Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  The function block `FT_RMP` implements a ramp function to smoothly transition the current output value to the target input value. It supports control over ascending and descending slopes and provides output signals indicating whether it is currently in a transition state (`busy`) and the transition direction (`UD`).\n\n- Variable Definitions\n  The code defines the following types of variables:\n  - Input variables: `Rmp` (enable/disable ramp function), `in` (target value), `KR` (ascending slope coefficient), `KF` (descending slope coefficient).\n  - Output variables: `out` (current output value), `busy` (whether in transition state), `UD` (transition direction, `TRUE` for ascending, `FALSE` for descending).\n  - Internal variables: `tx` (time difference, representing the interval since the last calculation), `last` (timestamp of the last calculation), `init` (initialization flag, used for first-time setup).\n\n- Main Logic\n  -- REGION Initialization\n     - On the first run of the function block, `init` is `FALSE`, triggering initialization:\n       - Set `init` to `TRUE` to mark completion.\n       - Set `last` to the current time.\n       - Set `tx` to `0`, indicating no time difference.\n       - Initialize `out` to `in`, making the output equal to the target value.\n     - After initialization, this logic is skipped in subsequent runs.\n\n  -- REGION Ramp Function Control\n     - If `Rmp` is `FALSE`, the ramp function is disabled:\n       - Directly set `out` to `in`, bypassing the transition.\n       - Set `busy` to `FALSE`, indicating no transition.\n     - If `Rmp` is `TRUE`, the ramp function is enabled:\n       - If `out` > `in`, a descending transition is needed:\n         - Calculate the new `out` value using the descending slope coefficient `KF`.\n         - Use the `MAX` function to ensure `out` does not fall below `in`.\n       - If `out` < `in`, an ascending transition is needed:\n         - Calculate the new `out` value using the ascending slope coefficient `KR`.\n         - Use the `MIN` function to ensure `out` does not exceed `in`.\n\n  -- REGION State and Direction Determination\n     - If `out` < `in`, an ascending transition is in progress:\n       - Set `busy` to `TRUE`, indicating an active transition.\n       - Set `UD` to `TRUE`, marking the direction as ascending.\n     - If `out` > `in`, a descending transition is in progress:\n       - Set `busy` to `TRUE`, indicating an active transition.\n       - Set `UD` to `FALSE`, marking the direction as descending.\n     - If `out` == `in`, the transition is complete:\n       - Set `busy` to `FALSE`, indicating no active transition.\n\n  -- REGION Time Update\n     - Update `last` to the current timestamp for the next time difference calculation.\n\n- Summary\n  This function block achieves smooth transitions via a ramp function, supports configurable ascending/descending slopes, and provides `busy` and `UD` signals to indicate transition status and direction. Suitable for applications requiring gradual transitions, such as motor control or temperature regulation.", "name": "FT_RMP"}