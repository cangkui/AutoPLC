Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  The function is named `ELEMENT_GET`, and its purpose is to extract a substring from a string at a specified position, delimited by a given separator. The input parameters include the separator `SEP` and the position `POS`, with the output result stored in `ELEMENT_GET`.\n\n- Variable Definitions\n  The code defines the following types of variables:\n  - Input variables: `SEP` (separator), `POS` (position).\n  - Input/output variable: `ELEMENT` (original string).\n  - Internal variables:\n    - `i` and `o`: Indices used for traversing the string.\n    - `pt` and `po`: Pointers to the original string and the output string.\n    - `cnt`: Counter for the number of separators.\n    - `c`: Temporary storage for the current character.\n\n- Main Logic\n  -- REGION Initialization\n    First, `pt` and `po` are initialized as pointers to the input string `ELEMENT` and the output string `ELEMENT_GET`, respectively. `i` and `o` are initialized to 1, and `cnt` is initialized to 0.\n\n  -- REGION Locate the Substring at the Specified Position\n    A `WHILE` loop is used to traverse the input string until the separator at the specified position is found or the maximum string length is reached. Within the loop, if the current character matches the separator `SEP`, the counter `cnt` is incremented. After each iteration, `i` is incremented to continue traversal.\n\n  -- REGION Extract the Substring\n    After locating the separator at the specified position, another `WHILE` loop is used to extract the substring starting from the current position until the next separator or the end of the string is encountered. The extracted characters are copied into the output string `ELEMENT_GET`, and `o` is incremented to continue populating the output string.\n\n  -- REGION Final Processing\n    Once extraction is complete, the last character of the output string is set to 0 to indicate the end of the string.\n\n- Summary\n  The function traverses the input string, counts the separators to locate the substring at the specified position, and extracts it into the output string. The process efficiently manipulates strings using pointers and indices.", "name": "ELEMENT_GET"}