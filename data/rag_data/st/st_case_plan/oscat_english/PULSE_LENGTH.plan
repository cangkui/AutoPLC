Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  This is a functional block named `PULSE_LENGTH`, designed to detect the pulse length of an input signal and categorize the output into short, medium, or long pulses based on the pulse duration. The classification is determined using user-defined time thresholds `T_short` and `T_long`.\n\n- Variable Definitions\n  The code defines the following types of variables:\n  - Input variables: `in` (input signal), `T_short` (short pulse threshold, default 100ms), `T_long` (long pulse threshold, default 1s).\n  - Output variables: `short` (short pulse flag), `middle` (medium pulse flag), `long` (long pulse flag).\n  - Internal variables: `tx` (current time), `tn` (pulse start time), `edge` (rising edge detection flag).\n\n- Main Logic\n  -- REGION Initialization\n     At the start of each cycle, the output variables `short`, `middle`, and `long` are initialized to `FALSE`, indicating no pulse detection by default. The current time is then retrieved using the `OSCAT_BASIC.T_PLC_MS()` function, converted to `TIME` type, and stored in `tx`.\n\n  -- REGION Rising Edge Detection\n     If the input signal `in` is `TRUE` and `edge` is `FALSE`, a rising edge is detected. In this case, `edge` is set to `TRUE`, and the current time `tx` is recorded in `tn` to mark the start of the pulse.\n\n  -- REGION Falling Edge Detection and Pulse Length Classification\n     If the input signal `in` is `FALSE` and `edge` is `TRUE`, a falling edge is detected. Here, `edge` is reset to `FALSE`, and the pulse duration `tn = tx - tn` is calculated. Based on the comparison of `tn` with `T_short` and `T_long`, the corresponding output flags are set:\n    - If `tn < T_short`, `short` is set to `TRUE`, indicating a short pulse.\n    - If `tn > T_long`, `long` is set to `TRUE`, indicating a long pulse.\n    - Otherwise, `middle` is set to `TRUE`, indicating a medium-length pulse.\n\n  -- REGION Long Pulse Continuous Detection\n     If the input signal `in` remains `TRUE` and the difference between the current time `tx` and the pulse start time `tn` exceeds `T_long`, `long` is directly set to `TRUE`, indicating a long pulse. This logic handles cases where the input signal stays high beyond the long pulse threshold.\n\n- Summary\n  This functional block detects rising and falling edges of the input signal, calculates the pulse duration, and classifies the pulse into short, medium, or long based on user-defined thresholds. The output variables `short`, `middle`, and `long` indicate the detected pulse type. The logic is straightforward and suitable for applications requiring pulse length classification.", "name": "PULSE_LENGTH"}