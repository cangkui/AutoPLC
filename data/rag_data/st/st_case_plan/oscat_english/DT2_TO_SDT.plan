Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  The function named `DT2_TO_SDT` is used to convert time data of types `DATE` and `TOD` into time data of type `SDT`. `SDT` is a structured date-time format that includes information such as year, month, day, weekday, hour, minute, second, and millisecond.\n\n- Variable Definitions\n  - Input Variables:\n    - `DI`: Type `DATE`, representing the input date.\n    - `TI`: Type `TOD`, representing the input time.\n  - Output Variable:\n    - `DT2_TO_SDT`: Type `SDT`, representing the converted structured date-time.\n\n- Main Logic\n  -- REGION Date Conversion:\n    Extract the year, month, day, and weekday information from the `DATE` type variable `DI` and assign them to the corresponding fields of the `SDT` structure:\n    - `YEAR`: Extracted via `YEAR_OF_DATE(DI)`.\n    - `MONTH`: Extracted via `MONTH_OF_DATE(DI)`.\n    - `DAY`: Extracted via `DAY_OF_MONTH(DI)`.\n    - `WEEKDAY`: Extracted via `DAY_OF_WEEK(DI)`.\n\n  -- REGION Time Conversion:\n    Extract the hour, minute, second, and millisecond information from the `TOD` type variable `TI` and assign them to the corresponding fields of the `SDT` structure:\n    - `MS`: Extracted via `TOD_TO_DWORD(TI) MOD 1000` and converted to `INT` type.\n    - `SECOND`: Extracted via `(TOD_TO_DWORD(TI) / 1000) MOD 60` and converted to `INT` type.\n    - `MINUTE`: Extracted via `(TOD_TO_DWORD(TI) / 60000) MOD 60` and converted to `INT` type.\n    - `HOUR`: Extracted via `TOD_TO_DWORD(TI) / 3600000` and converted to `INT` type.\n\n- Output Result\n  The function returns an `SDT` type structure containing the year, month, day, weekday, hour, minute, second, and millisecond information extracted from `DI` and `TI`.", "name": "DT2_TO_SDT"}