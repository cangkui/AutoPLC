Natural Language Requirements:  
```json
{"variables": [], "instructions": [], "planning": "- Overview\nThis functional block, named `DEC_TO_INT`, is designed to convert a decimal-format string into an integer. It supports handling signed integers (negative sign \"-\") and ignores non-numeric characters.\n\n- Variable Definitions\nThe code defines the following types of variables:\n - Input variable: `DEC`, representing the input decimal string with a maximum length of 10.\n - Local variables:\n   - `pt`: A pointer to the string, used to access characters one by one.\n   - `i`: A loop counter for traversing the string.\n   - `X`: The ASCII value of the current character.\n   - `sign`: A flag to determine if the number is negative.\n   - `stop`: The length of the string, used to control the loop iterations.\n\n- Main Logic\n-- REGION String Traversal and Conversion\n   1. Initialize the pointer `pt` to point to the starting address of the input string `DEC`.\n   2. Retrieve the string length and assign it to `stop` to control the loop iterations.\n   3. Use a `FOR` loop to traverse each character in the string:\n      - Obtain the ASCII value of the current character via the pointer `pt` and assign it to `X`.\n      - If `X` is a numeric character (ASCII value between 48 and 57), convert it to the corresponding digit and accumulate it into the result `DEC_TO_INT`.\n      - If `X` is a negative sign \"-\" (ASCII value 45) and the current result `DEC_TO_INT` is 0, set the `sign` flag to `TRUE`, indicating a negative result.\n      - Move the pointer `pt` to the next character.\n   4. After the loop ends, if the `sign` flag is `TRUE`, negate the result `DEC_TO_INT` to represent a negative number.\n-- REGION Result Output\n   Finally, the functional block returns the converted integer value `DEC_TO_INT`.\n\n- Examples\nFor instance, the input string `\"-123\"` will be converted to the integer `-123`. The input string `\"45a6\"` will ignore the non-numeric character `'a'` and return the integer `456`.", "name": "DEC_TO_INT"}
```