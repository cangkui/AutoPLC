Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  This functional block, named `HYST_2`, implements a simple hysteresis comparator logic. Based on the input value `IN`, reference value `VAL`, and hysteresis width `HYS`, it determines the state of the output `Q` and generates a window signal `WIN`.\n\n- Variable Definitions\n  The code defines the following types of variables:\n  - Input variables: `IN` (input value), `VAL` (reference value), `HYS` (hysteresis width).\n  - Output variables: `Q` (output state), `WIN` (window signal, indicating whether the input value is within the hysteresis range).\n  - Internal variable: `tmp` (temporary variable used to calculate the lower bound of the hysteresis range).\n\n- Main Logic Section\n  -- REGION Hysteresis Comparison Logic\n     1. First, calculate the lower bound `tmp` of the hysteresis range using the formula `tmp := VAL - HYS * 0.5`.\n     2. Based on the comparison between the input value `IN` and `tmp` as well as `tmp + HYS`, determine the state of the output `Q` and the window signal `WIN`:\n        - If `IN < tmp`, the input value is below the lower bound, so the output `Q` is `FALSE`, and the window signal `WIN` is `FALSE`.\n        - If `IN > tmp + HYS`, the input value is above the upper bound, so the output `Q` is `TRUE`, and the window signal `WIN` is `FALSE`.\n        - If `IN` is between `tmp` and `tmp + HYS`, the input value is within the hysteresis range, so the window signal `WIN` is `TRUE`, and the output `Q` retains its previous state.\n  \n  Through this logic, `HYST_2` achieves hysteresis control, preventing frequent output switching when the input value fluctuates near the reference value.", "name": "HYST_2"}