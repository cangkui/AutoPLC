Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  This code defines a function named `V3_NORM` that calculates the normalized result of a 3D vector. Normalization refers to scaling the vector's length (magnitude) to 1 while preserving its direction. The function takes a 3D vector as input and returns its normalized version.\n\n- Variable Definitions\n  The code defines two types of variables:\n  - Input variable: `A`, representing the input 3D vector.\n  - Internal variable: `la`, used to store the vector's magnitude (length).\n\n- Main Logic\n  -- REGION Calculate Vector Magnitude\n    First, the `V3_ABS` function is called to compute the magnitude (length) of the input vector `A`, and the result is stored in the variable `la`.\n  -- REGION Normalization Process\n    If the value of `la` is greater than 0.0, it means the vector has a non-zero length and can be normalized. In this case, the `V3_SMUL` function is called to multiply each component of vector `A` by `1.0 / la`, thereby scaling the vector's length to 1. The normalized result is assigned to the function's return value `V3_NORM`.\n    If `la` is 0.0, it means the vector is a zero vector and cannot be normalized, so no further processing is performed.\n\n- Output Result\n  The function returns the normalized 3D vector. If the input vector's length is 0, the function does not modify the return value (defaulting to a zero vector).", "name": "V3_NORM"}