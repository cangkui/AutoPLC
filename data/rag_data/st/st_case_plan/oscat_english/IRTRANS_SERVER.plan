Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\nThe function block named `IRTRANS_SERVER` is designed to manage control logic related to network communication. It controls the enabling and status of network connections through the `IP_C` structure and handles send and receive buffers via `S_BUF` and `R_BUF`. The function block supports switching between UDP and TCP modes and provides error handling and timed reset functionality.\n\n- Variable Definitions\nThe code defines the following types of variables:\n- `VAR_IN_OUT` variables: Used for input/output control structures and buffers, including `IP_C` (network control structure), `S_BUF` (send buffer), and `R_BUF` (receive buffer).\n- `VAR_INPUT` variables: Input variable `UDP_TCP`, used to select between UDP or TCP mode.\n- `VAR_OUTPUT` variables: Output variables, including `S_ENABLE` (send enable), `R_ENABLE` (receive enable), and `ERROR` (error code).\n- `VAR` variables: Internal variable `t`, used for timer functionality, of type `TON` (on-delay timer).\n\n- Main Logic Section\n-- REGION Initialization and Mode Setting\nIf `IP_C.C_ENABLE` is `FALSE`, perform the following initialization steps:\n1. Set `IP_C.C_PORT` to `0`, indicating no specified port.\n2. Set `IP_C.C_IP` to `0`, indicating no specified IP address.\n3. Set `IP_C.C_MODE` based on the value of `UDP_TCP`: If `UDP_TCP` is `TRUE`, select mode `5` (UDP); otherwise, select mode `4` (TCP).\n4. Set `IP_C.C_ENABLE` to `TRUE` to enable network control.\n5. Set `IP_C.R_OBSERVE` to `FALSE`, indicating no receive status observation.\n6. Set `IP_C.TIME_RESET` to `TRUE`, indicating a time reset is required.\n7. Set the sizes of the send and receive buffers, `S_BUF.SIZE` and `R_BUF.SIZE`, to `0`.\n\n-- REGION Receive and Send Enable Logic\n1. The value of `R_ENABLE` depends on whether `IP_C.C_STATE` is greater than `127`. If it is, receive is enabled.\n2. The value of `S_ENABLE` depends on whether `R_ENABLE` is `TRUE` and one of the following conditions is met:\n   - There is data in `IP_C.MAILBOX[1]` (greater than `0`).\n   - `IP_C.C_MODE` is not `5` (i.e., not UDP mode).\n\n-- REGION Error Handling and Timed Reset\n1. Assign the value of `IP_C.ERROR` to the `ERROR` output.\n2. Use the `TON` timer `t` to check if `IP_C.ERROR` is greater than `0`. If it is, start the timer.\n3. If the timer output `Q` of `t` is `TRUE`, set `IP_C.TIME_RESET` to `TRUE`, indicating a time reset is required.\n\n- Summary\nThis function block manages the enabling, mode, and status of network connections through the `IP_C` structure and processes data via send and receive buffers. It supports switching between UDP and TCP modes and provides error handling and timed reset functionality. The receive and send enable logic dynamically adjusts based on network status and buffer data, ensuring communication reliability and flexibility.", "name": "IRTRANS_SERVER"}