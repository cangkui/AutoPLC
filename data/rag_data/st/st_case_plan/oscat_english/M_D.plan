Natural Language Requirements: {"variables": [], "instructions": [], "planning": "- Overview\nThis function block `M_D` is used to control the start, stop, and reset operations of a timer. It manages the timer's running state based on input signals `start`, `stop`, and `rst`, and outputs the current timer value (`ET`) and the preset maximum time (`PT`). Additionally, it indicates whether the timer is running through the `run` output signal.\n\n- Variable Definitions\nThe code defines the following types of variables:\n  - Input variables: `start` (start signal), `stop` (stop signal), `tmax` (maximum timer duration), `rst` (reset signal).\n  - Output variables: `PT` (preset time), `ET` (elapsed time), `run` (running status).\n  - Internal variables: `edge` (used to detect the rising edge of the `start` signal), `T0` (timer start time), `tx` (current time), `startup` (used to initialize the function block).\n\n- Main Logic\n  -- REGION Reset Logic\n    If the `rst` signal is true, or if the elapsed time `ET` reaches the maximum time `tmax`, a reset operation is performed. The reset operation includes:\n    - Resetting `PT` and `ET` to `0ms`.\n    - Setting `startup` and `run` to `FALSE`, indicating the timer is not started or running.\n\n  -- REGION Initialization Logic\n    If `startup` is `FALSE`, an initialization operation is performed:\n    - Setting `edge` to the current value of the `start` signal for subsequent rising edge detection.\n    - Setting `startup` to `TRUE`, indicating initialization is complete.\n\n  -- REGION Timer Logic\n    1. Get the current time `tx` and convert it to the `TIME` type.\n    2. If the `start` signal is true and no rising edge is detected (`NOT edge`), and the `stop` signal is false, start the timer:\n       - Set `T0` to the current time `tx`.\n       - Set `run` to `TRUE`, indicating the timer is running.\n       - Reset `PT` to `0s`.\n    3. If the `stop` signal is true and the timer is running, stop the timer:\n       - Set `PT` to the elapsed time `ET`.\n       - Set `run` to `FALSE`, indicating the timer has stopped.\n    4. Update `edge` to the current value of the `start` signal for rising edge detection in the next cycle.\n    5. If the timer is running, calculate the elapsed time `ET` as the current time `tx` minus the start time `T0`.\n\n- Summary\nThe core logic of this function block involves detecting the `start` and `stop` signals to control the timer's start and stop operations, and using the `rst` signal to perform a reset. The elapsed time `ET` and running status `run` are dynamically updated based on the input signals, while `PT` is used to store the preset maximum time or the elapsed time when stopped.", "name": "M_D"}