Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  This is a function named `SCALE_B` that linearly maps an input value `X` of type BYTE from an input range `[I_LO, I_HI]` to an output range `[O_LO, O_HI]`. The function returns a value of type REAL, representing the mapped result of the input value within the output range.\n\n- Variable Definitions\n  The code defines the following types of variables:\n  - Input variables:\n    - `X`: The byte value to be mapped.\n    - `I_LO`: The lower bound of the input range (BYTE type).\n    - `I_HI`: The upper bound of the input range (BYTE type).\n    - `O_LO`: The lower bound of the output range (REAL type).\n    - `O_HI`: The upper bound of the output range (REAL type).\n\n- Main Logic\n  -- REGION Main Logic:\n    1. **Input Range Validation**:\n       - First, check if the input range is valid, i.e., whether `I_HI` equals `I_LO`. If they are equal, it means the input range is invalid, and the function directly returns the lower bound of the output range, `O_LO`.\n    2. **Linear Mapping Calculation**:\n       - If the input range is valid, perform the linear mapping calculation:\n         - Use the `LIMIT` function to clamp the input value `X` within the input range `[I_LO, I_HI]`, ensuring `X` does not exceed the bounds.\n         - Convert the result of `LIMIT` to REAL type.\n         - Calculate the ratio of the output range to the input range: `(O_HI - O_LO) / BYTE_TO_REAL(I_HI - I_LO)`, representing the scaling factor.\n         - Multiply the ratio by the clamped input value to obtain the mapped result.\n    3. **Return Result**:\n       - Assign the calculated result to the function's return value `SCALE_B` and return it.\n\n- Key Points Explained\n  - **`LIMIT` Function**: Ensures the input value `X` stays within the specified input range. If `X` is less than `I_LO`, it returns `I_LO`; if `X` is greater than `I_HI`, it returns `I_HI`; otherwise, it returns `X`.\n  - **Linear Mapping Formula**: `(O_HI - O_LO) / (I_HI - I_LO) * (X - I_LO) + O_LO` is the standard formula for linear mapping. The code uses `BYTE_TO_REAL` to convert BYTE to REAL for accurate calculations.\n  - **Invalid Input Range Handling**: If `I_HI` equals `I_LO`, the input range is invalid, and the function returns `O_LO` to avoid division by zero errors.\n\n- Example\n  Assume:\n  - `X = 150`\n  - `I_LO = 100`\n  - `I_HI = 200`\n  - `O_LO = 0.0`\n  - `O_HI = 10.0`\n  Calculation steps:\n  1. The input value `X` is clamped to `[100, 200]`, resulting in `150`.\n  2. Calculate the ratio: `(10.0 - 0.0) / (200 - 100) = 0.1`.\n  3. Compute the mapped result: `0.1 * (150 - 100) + 0.0 = 5.0`.\n  The function returns `5.0`.", "name": "SCALE_B"}