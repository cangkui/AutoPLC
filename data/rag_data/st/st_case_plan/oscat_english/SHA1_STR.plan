Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\nThis functional block, named `SHA1_STR`, is used to compute the SHA1 hash value of an input string. It achieves this by calling the `SHA1_STREAM` functional block to perform the SHA1 hash calculation and stores the result in the `SHA1` output array.\n\n- Variable Definitions\nThe code defines the following types of variables:\n - Input variable: `RUN`, used to initiate the SHA1 calculation.\n - Output variable: `DONE`, used to indicate whether the calculation is complete.\n - Input/output variables:\n   - `STR`, the input string for which the SHA1 hash is computed.\n   - `SHA1`, a byte array that stores the computed result.\n - Internal variables:\n   - `run_last`, used to detect the rising edge of the `RUN` signal.\n   - `SHA1_STREAM`, an instance of the functional block that performs the SHA1 calculation.\n   - `buf`, a byte buffer used to store the converted string.\n   - `mode`, represents the current calculation mode.\n   - `size`, indicates the length of the string.\n   - `pos`, indicates the current byte position being processed.\n\n- Main Logic Section\n-- REGION Mode Handling\nThe core logic of the functional block is controlled by the `mode` variable, which is divided into the following modes:\n   - **Mode 0**: Waits for the rising edge of the `RUN` signal. When `RUN` transitions from false to true, it initializes the calculation process: sets `DONE` to false, sets `mode` to 1, and retrieves the length `size` of the input string.\n   - **Mode 2**: If `size` is greater than 0, converts a portion of the string into bytes and stores it in `buf`. The `OSCAT_BASIC._STRING_TO_BUFFER` function is used here to convert the string to bytes.\n   - **Mode 3**: Marks the completion of the calculation by setting `DONE` to true and resets `mode` to 0, preparing for the next calculation.\n\n-- REGION SHA1 Calculation\nIf `mode` is greater than 0, the `SHA1_STREAM` functional block is called to perform the SHA1 calculation. The input parameters for `SHA1_STREAM` include `size` (string length), `mode` (current mode), `buf` (byte buffer), and `SHA1` (result array), with `pos` (current byte position) as the output parameter.\n\n-- REGION Edge Detection\nAt the end of each cycle, the current value of the `RUN` signal is stored in `run_last` to detect the rising edge of the `RUN` signal in the next cycle.\n\n- Summary\nThis functional block controls the SHA1 calculation process using a state machine (`mode`). It first detects the rising edge of the `RUN` signal to start the calculation, then converts the string to bytes and calls the `SHA1_STREAM` functional block to compute the hash, and finally sets the `DONE` signal upon completion. The entire process is carried out step-by-step to ensure accuracy and efficiency.", "name": "SHA1_STR"}