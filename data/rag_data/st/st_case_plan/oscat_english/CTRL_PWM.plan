Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  This is a function block written in SCL, named `CTRL_PWM`, designed to control a PWM (Pulse Width Modulation) signal. It generates a PWM output signal based on input signals and supports switching between manual and automatic modes.\n\n- Variable Definitions\n  The code defines the following types of variables:\n  - Input Variables:\n    - `CI`: Duty cycle input in automatic mode (range 0 to 1).\n    - `MAN_IN`: Duty cycle input in manual mode (range 0 to 1).\n    - `MANUAL`: Mode selection signal; `TRUE` for manual mode, `FALSE` for automatic mode.\n    - `F`: Frequency of the PWM signal.\n  - Output Variables:\n    - `Q`: PWM output signal; `TRUE` for high level, `FALSE` for low level.\n  - Internal Variables:\n    - `PW`: An instance of the `PWM_DC` function block, used to generate the PWM signal.\n\n- Main Logic Section\n  -- REGION Main Logic\n     - First, the `SEL` function is used to select the duty cycle input based on the value of `MANUAL`. If `MANUAL` is `TRUE`, `MAN_IN` is selected as the duty cycle; otherwise, `CI` is selected.\n     - The selected duty cycle and frequency `F` are then passed to the `PWM_DC` function block `PW`.\n     - Finally, the output `Q` of the `PW` function block is assigned to the function block's output `Q`, which serves as the resulting PWM signal.", "name": "CTRL_PWM"}