Natural Language Requirement:  
{"variables": [], "instructions": [], "planning": "- Overview\n  This function, named `RANGE_TO_WORD`, is used to map a real numerical value to a `WORD` type value. It works by clamping the input value within a specified range and then linearly mapping it to the `WORD` range (0 to 65535).\n\n- Variable Definitions\n  - Input Variables:\n    - `X`: The input real value to be mapped.\n    - `low`: The lower bound of the range.\n    - `high`: The upper bound of the range.\n  - Output Variable:\n    - `RANGE_TO_WORD`: The mapped `WORD` type value.\n\n- Main Logic\n  -- REGION Mapping Logic:\n    1. **Range Clamping**: Use the `LIMIT` function to clamp the input value `X` between `low` and `high`. If `X` is less than `low`, it is set to `low`; if `X` is greater than `high`, it is set to `high`.\n    2. **Normalization**: Subtract `low` from the clamped value to obtain the offset relative to the lower bound.\n    3. **Linear Mapping**: Divide the offset by the range width (`high - low`) to get the normalized ratio.\n    4. **Scaling to WORD Range**: Multiply the normalized ratio by 65535.0 (the maximum value of `WORD`) to obtain the mapped value.\n    5. **Rounding**: Use the `TRUNC` function to truncate the result to an integer.\n    6. **Conversion to WORD**: Use the `DINT_TO_WORD` function to convert the integer to the `WORD` type.\n    7. **Return Result**: Assign the final `WORD` value to `RANGE_TO_WORD` as the output.\n\n  The core idea of this function is to linearly map a real value to a fixed range (0 to 65535), making it suitable for scenarios where analog values (such as sensor readings) need to be converted into digital values.", "name": "RANGE_TO_WORD"}