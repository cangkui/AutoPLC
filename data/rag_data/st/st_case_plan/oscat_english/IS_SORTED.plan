Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  The function named `IS_SORTED` is used to check whether an array of real numbers is sorted in ascending order. It traverses each element of the array and checks if the current element is greater than the next one to determine if the array is sorted.\n\n- Variable Definitions\n  - Input Variables:\n    - `pt`: A pointer to an array of real numbers.\n    - `size`: The size of the array, of type unsigned integer (UINT).\n  - Local Variables:\n    - `stop`: Used to control the loop termination condition, of type integer (INT).\n    - `i`: Loop counter, of type integer (INT).\n\n- Main Logic\n  -- REGION Initialization:\n     - The `stop` variable is calculated by right-shifting `size` by 2 bits and then subtracting 2. Here, `SHR(size, 2)` means dividing `size` by 4, so `stop` equals `size / 4 - 2`. This is likely an optimization to reduce the number of loop iterations by checking only a portion of the array.\n  \n  -- REGION Loop Check:\n     - A `FOR` loop is used to iterate from `i = 0` to `i = stop`.\n     - In each iteration, it checks whether the current element `pt^[i]` is greater than the next element `pt^[i+1]`.\n     - If any current element is found to be greater than the next, the function immediately returns `FALSE` and terminates.\n  \n  -- REGION Return Result:\n     - If the loop completes without finding any element greater than the next, the array is confirmed to be sorted in ascending order, and the function returns `TRUE`.", "name": "IS_SORTED"}