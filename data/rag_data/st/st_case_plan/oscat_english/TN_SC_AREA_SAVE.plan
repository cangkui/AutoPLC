Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\nThis code is a function block written in SCL, named 'TN_SC_AREA_SAVE', designed to save character and color data from a screen area into a backup array. The function block first checks if the input coordinates are validâ€”if not, it exits immediately. Otherwise, it copies the specified screen area data into the backup array.\n\n- Variable Definitions\nThe code defines the following types of variables:\n - Input variables: in_Offset_1, in_Offset_2, in_Y, in_X, used to store offset values and coordinates.\n - Internal variables: Iin_Y1, Iin_X1, Iin_Y2, Iin_X2, used to store the start and end coordinates of the screen area.\n - Struct variables: Xus_TN_SCREEN, containing a character array (bya_CHAR), a color array (bya_COLOR), and a backup array (bya_BACKUP).\n\n- Main Logic\n-- REGION Input Validation\n   First, the code calls the 'TN_SC_XY2_ERROR' function to verify if the input coordinates (Iin_X1, Iin_Y1, Iin_X2, Iin_Y2) are valid. If invalid, the function exits without further processing.\n\n-- REGION Backup Area Information\n   If the coordinates are valid, the code sets the first 5 bytes of the backup array as follows:\n   - Byte 1: BYTE#1, serving as the start marker for backup data.\n   - Byte 2: Converts Iin_X1 to a byte and stores it.\n   - Byte 3: Converts Iin_Y1 to a byte and stores it.\n   - Byte 4: Converts Iin_X2 to a byte and stores it.\n   - Byte 5: Converts Iin_Y2 to a byte and stores it.\n   These bytes record the boundary information of the screen area.\n\n-- REGION Backup Screen Data\n   Next, the code uses nested FOR loops to iterate through the specified screen area (from Iin_Y1 to Iin_Y2, and from Iin_X1 to Iin_X2). For each pixel, it performs the following operations:\n   - Calculates the offset (in_Offset_1) of the current pixel in the character array.\n   - Copies the character data from the character array to the current offset position (in_Offset_2) in the backup array.\n   - Copies the color data from the color array to the next offset position (in_Offset_2 + 1) in the backup array.\n   - Updates the offsets (in_Offset_1 and in_Offset_2) to process the next pixel.\n   This ensures the complete backup of character and color data for the specified screen area into the backup array.\n\n-- REGION Completion\n   After backing up all pixels, the function block concludes execution.", "name": "TN_SC_AREA_SAVE"}