Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\nThis code defines a function named `F_QUAD` used to calculate the value of a quadratic polynomial. The quadratic polynomial takes the form: `F_QUAD = (A * X + B) * X + C`, where `A`, `B`, and `C` are the coefficients of the polynomial, and `X` is the independent variable.\n\n- Variable Definitions\nThe code defines the following types of variables:\n  - Input variables: `X` (independent variable), `A` (quadratic coefficient), `B` (linear coefficient), `C` (constant term).\n  - Output variable: `F_QUAD` (function return value, i.e., the computed result of the quadratic polynomial).\n\n- Main Logic\n  -- REGION Compute Quadratic Polynomial\n    The function logic is very straightforwardâ€”it directly follows the formula `F_QUAD = (A * X + B) * X + C`. First, it calculates `A * X + B`, then multiplies the result by `X`, and finally adds `C` to obtain the final quadratic polynomial value.\n    The computation steps are as follows:\n    1. Calculate `A * X` to get the quadratic term value.\n    2. Add `B` to the result to get the sum of the linear and quadratic terms.\n    3. Multiply the above result by `X` to obtain the product including all terms.\n    4. Finally, add `C` to get the final polynomial value.\n    This formula represents the general form of a quadratic polynomial and can be applied to compute any quadratic equation.\n\n  -- REGION Return Value\n    After computation, the result is assigned to `F_QUAD`, which serves as the function's return value.\n\n- Summary\nThis function is a typical mathematical computation function designed to calculate the value of a quadratic polynomial. It performs the calculation through simple arithmetic operations and returns the result to the caller. Due to its straightforward logic and absence of complex states or conditional checks, the code is highly intuitive and easy to understand.", "name": "F_QUAD"}