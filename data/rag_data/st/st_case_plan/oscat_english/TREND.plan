Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  This code defines a function block named `TREND`, which is used to detect trend changes in the input variable `X`. By comparing the current value with the value from the previous cycle, it determines whether the input is rising, falling, or remaining unchanged, and outputs the corresponding result.\n\n- Variable Definitions\n  The code defines the following types of variables:\n  - Input variable: `X`, representing the current input value.\n  - Output variables:\n    - `Q`, indicating whether the input value has changed (rising or falling).\n    - `TU`, indicating whether the input value is rising.\n    - `TD`, indicating whether the input value is falling.\n    - `D`, representing the difference between the current value and the value from the previous cycle.\n  - Internal variable: `last_X`, used to store the input value from the previous cycle.\n\n- Main Logic Section\n  -- REGION Trend Detection Logic\n     This region implements the core logic for trend detection. The specific steps are as follows:\n    1. Check if the input value `X` is greater than the previous cycle's value `last_X`. If true, `TU` is set to `TRUE`, indicating the input value is rising.\n    2. Check if the input value `X` is less than the previous cycle's value `last_X`. If true, `TD` is set to `TRUE`, indicating the input value is falling.\n    3. If either `TU` or `TD` is `TRUE`, `Q` is set to `TRUE`, indicating the input value has changed.\n    4. Calculate the difference between the current value `X` and the previous cycle's value `last_X`, and assign the result to `D`.\n    5. Update `last_X` to the current value `X` for use in the next cycle.\n\n- Output Results\n  - `Q`: If the input value `X` changes (rising or falling), `Q` is `TRUE`; otherwise, it is `FALSE`.\n  - `TU`: If the input value `X` rises, `TU` is `TRUE`; otherwise, it is `FALSE`.\n  - `TD`: If the input value `X` falls, `TD` is `TRUE`; otherwise, it is `FALSE`.\n  - `D`: Represents the difference between the current value `X` and the previous cycle's value `last_X`.\n\n- Summary\n  This function block uses simple comparisons and calculations to detect trend changes in the input value and outputs the corresponding results. It is suitable for scenarios where monitoring variable trends is required, such as tracking changes in physical quantities like temperature or pressure.", "name": "TREND"}