Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\nThis code implements a PI controller function block (`CTRL_PI`) for controlling system output. It combines proportional-integral (PI) control with output limiting functionality and supports switching between manual and automatic modes. The function block calculates the deviation between the setpoint and the actual value, applies the PI control algorithm, and ultimately outputs a control signal.\n\n- Variable Definitions\nThe code defines the following types of variables:\n - Input variables: Actual value (`ACT`), setpoint (`SET`), setpoint upper limit (`SUP`), offset (`OFS`), manual input value (`M_I`), manual mode (`MAN`), reset (`RST`), proportional gain (`KP`), integral gain (`KI`), output lower limit (`LL`), output upper limit (`LH`).\n - Output variables: Control output (`Y`), deviation value (`DIFF`), limit flag (`LIM`).\n - Internal variables: `pi` (instance of the PI control function block), `co` (instance of the output control function block).\n\n- Main Logic\n-- REGION Deviation Calculation\n   First, the deviation (`DIFF`) between the setpoint (`SET`) and the actual value (`ACT`) is calculated. If a setpoint upper limit (`SUP`) is provided, the deviation calculation takes this limit into account. The deviation is computed using the `CTRL_IN` function, and the result is stored in the `DIFF` variable.\n\n-- REGION PI Control\n   Using the deviation value (`DIFF`) as input, the PI control function block (`pi`) is called. The PI control function block receives the following parameters:\n   - Input deviation (`in`): `DIFF`.\n   - Proportional gain (`kp`): Provided by the input parameter `KP`.\n   - Integral gain (`ki`): Provided by the input parameter `KI`.\n   - Output lower limit (`lim_l`): Provided by the input parameter `LL`.\n   - Output upper limit (`lim_h`): Provided by the input parameter `LH`.\n   - Reset signal (`rst`): Provided by the input parameter `RST`.\n   The PI control function block calculates the control output (`pi.Y`) and passes it to the output control function block.\n\n-- REGION Output Control\n   The output control function block (`co`) is called with the following parameters:\n   - Control input (`ci`): `pi.Y`.\n   - Offset (`OFFSET`): Provided by the input parameter `OFS`.\n   - Manual input value (`man_in`): Provided by the input parameter `M_I`.\n   - Output lower limit (`lim_l`): Provided by the input parameter `LL`.\n   - Output upper limit (`lim_h`): Provided by the input parameter `LH`.\n   - Manual mode (`MANUAL`): Provided by the input parameter `MAN`.\n   The output control function block determines whether to use the manual input value (`M_I`) or the PI control output (`pi.Y`) based on the manual mode status. The final output (`co.Y`) is assigned to the function block's output variable `Y`, and the limit flag (`co.LIM`) is assigned to `LIM`.\n\n-- REGION Output Results\n   The function block's final outputs include:\n   - Control output (`Y`): The control signal after PI control and output limiting.\n   - Deviation value (`DIFF`): The deviation between the setpoint and the actual value.\n   - Limit flag (`LIM`): Indicates whether the output has reached the upper or lower limit.\n\n- Summary\nThis function block implements a complete PI controller with support for manual/automatic mode switching and output limiting. By calculating deviations, applying the PI control algorithm, and handling output limits, the function block generates stable control signals suitable for various control system scenarios.", "name": "CTRL_PI"}