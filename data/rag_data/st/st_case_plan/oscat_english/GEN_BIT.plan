Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  The function block `GEN_BIT` is used to generate a series of bit signals based on four input 32-bit unsigned integers (`in0`, `in1`, `in2`, `in3`). It sequentially outputs these bits via a clock signal (`clk`) and supports control over repetition count (`rep`) and step count (`steps`). The block also provides a reset function (`rst`) to reset all internal states and outputs.\n\n- Variable Definitions\n  - Input variables: Include four 32-bit unsigned integers (`in0`, `in1`, `in2`, `in3`), clock signal (`clk`), step count (`steps`), repetition count (`rep`), and reset signal (`rst`).\n  - Output variables: Include four Boolean values (`Q0`, `Q1`, `Q2`, `Q3`), current step counter (`cnt`), and running status (`run`).\n  - Internal variables: Include four 32-bit unsigned integers (`r0`, `r1`, `r2`, `r3`) and a repetition counter (`rx`).\n\n- Main Logic Section\n  -- REGION Main Logic\n     - If the clock signal (`clk`) is true and the reset signal (`rst`) is false, the function block starts running.\n     - First, check the running status (`run`). If the repetition count (`rep`) is 0 or the repetition counter (`rx`) is less than or equal to the repetition count, the block continues running.\n     - If the current step counter (`cnt`) equals the step count (`steps`), reset the counter to 0.\n     - If the current step counter (`cnt`) is 0, load the input values (`in0`, `in1`, `in2`, `in3`) into the internal registers (`r0`, `r1`, `r2`, `r3`).\n     - If the current step counter (`cnt`) is less than the step count (`steps`), output the least significant bit of the internal registers (`r0.0`, `r1.0`, `r2.0`, `r3.0`) and right-shift the registers by one bit.\n     - Increment the step counter (`cnt`). If the step counter equals the step count and the repetition count is not 0, increment the repetition counter (`rx`).\n     - If the repetition counter (`rx`) exceeds the repetition count and the repetition count is not 0, stop running.\n  -- REGION Reset Logic\n     - If the reset signal (`rst`) is true, reset all outputs and internal variables, including the running status (`run`), output signals (`Q0`, `Q1`, `Q2`, `Q3`), internal registers (`r0`, `r1`, `r2`, `r3`), step counter (`cnt`), and repetition counter (`rx`).", "name": "GEN_BIT"}