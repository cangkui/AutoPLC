Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  This is a function block named `PULSE_T`, designed to generate a pulse signal. The block controls the behavior of the output signal `Q` based on the state of the input signal `IN` and the time parameters `T1` and `T2`. It supports a reset function, allowing the pulse output to be forcibly stopped via the `RST` input.\n\n- Variable Definitions\n  The code defines the following types of variables:\n  - Input variables: `IN` (input signal), `T1` (pulse high-level duration), `T2` (total pulse duration), `RST` (reset signal).\n  - Output variable: `Q` (output pulse signal).\n  - Internal variables: `init` (initialization flag), `last` (records the time of the last state change), `tx` (current time), `edge` (edge detection flag for the input signal).\n\n- Main Logic Section\n  -- REGION Initialization and Time Retrieval\n      First, the current time is obtained via `OSCAT_BASIC.T_PLC_MS()` and converted to the `TIME` type, stored in `tx`. If the function block has not been initialized (`init` is `FALSE`), `init` is set to `TRUE`, and the current time is recorded in `last`.\n\n  -- REGION Reset Handling\n      If the `RST` input is true, the output `Q` is forcibly set to `FALSE`, stopping the pulse output.\n\n  -- REGION Pulse Generation\n      If the `IN` input is true and a rising edge is detected (`edge` is `FALSE`), and there is currently no pulse output (`Q` is `FALSE`), the current time is recorded in `last`, and the output `Q` is set to `TRUE`, initiating pulse generation.\n\n  -- REGION Pulse Termination Handling\n      If the `IN` input is false and a falling edge is detected (`edge` is `TRUE`), and the time difference between the current time and `last` exceeds `T1`, the output `Q` is set to `FALSE`, ending the high-level portion of the pulse.\n      If the time difference between the current time and `last` is greater than or equal to `T2`, the output `Q` is set to `FALSE` regardless of the state of `IN`, ensuring the total pulse duration does not exceed `T2`.\n\n  -- REGION Edge Detection\n      After each logic execution, the current state of `IN` is stored in `edge` for edge detection in the next cycle.\n\n- Summary\n  This function block generates a pulse signal `Q` by detecting the rising and falling edges of the input signal `IN`, combined with the time parameters `T1` and `T2`. `T1` controls the high-level duration of the pulse, while `T2` controls the total pulse duration. The `RST` input can forcibly stop the pulse output. The block uses time difference calculations and edge detection to achieve precise pulse control.", "name": "PULSE_T"}