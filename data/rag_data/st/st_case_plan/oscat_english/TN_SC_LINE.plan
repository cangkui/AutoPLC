Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  The function block `TN_SC_LINE` is used to draw vertical or horizontal lines in the screen buffer, selecting appropriate characters for line connection points. It supports two different border styles and allows users to specify the start and end coordinates, attributes, and border style of the line.\n\n- Variable Definitions\n  The code defines the following types of variables:\n  - Connection character variables: Used to store characters for line connection points (e.g., top, bottom, left, right, intersection points).\n  - Line character variables: Used to store characters for vertical and horizontal lines.\n  - Old character variables: Used to store the current character values in the screen buffer.\n  - Coordinate and offset variables: Used to store the start and end coordinates of the line, as well as the screen buffer offsets.\n  - Attribute variables: Used to store line attributes (e.g., color).\n  - Screen buffer variables: Used to store character and color data for the screen.\n\n- Main Logic\n  -- REGION Input Validation\n    First, the `TN_SC_XY2_ERROR` function is called to validate the input coordinates. If the coordinates are invalid, the function returns immediately without executing further logic.\n\n  -- REGION Border Style Setting\n    Based on the value of `Iby_Border`, the connection and line characters are set:\n    - If `Iby_Border` is `BYTE#01`, the first border style is used.\n    - If `Iby_Border` is `BYTE#02`, the second border style is used.\n    - If `Iby_Border` is any other value, all connection and line characters are set to the value of `Iby_Border`.\n\n  -- REGION Vertical Line Drawing\n    If the start and end X coordinates are the same, a vertical line is drawn:\n    - The starting offset `in_Offset_1` is calculated.\n    - A loop iterates from the start Y coordinate to the end Y coordinate, updating the characters and colors in the screen buffer row by row.\n    - If the current character is a horizontal line character, the top, bottom, or intersection connection character is selected based on the position.\n    - The screen buffer's character and color are updated, and the row is marked for refresh.\n\n  -- REGION Horizontal Line Drawing\n    If the start and end Y coordinates are the same, a horizontal line is drawn:\n    - The row is marked for refresh.\n    - The starting offset `in_Offset_1` is calculated.\n    - A loop iterates from the start X coordinate to the end X coordinate, updating the characters and colors in the screen buffer column by column.\n    - If the current character is a vertical line character, the left, right, or intersection connection character is selected based on the position.\n    - The screen buffer's character and color are updated.\n\n- Output Result\n  After the function block executes, the character and color data in the screen buffer are updated to reflect the newly drawn vertical or horizontal line. Additionally, the refresh flags for the relevant rows are set to `TRUE` for subsequent processing.", "name": "TN_SC_LINE"}