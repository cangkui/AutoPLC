Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  The function `CPOW` is used to compute the power of complex numbers. It takes two complex numbers `X` and `Y` as input and returns the result of `X` raised to the power of `Y`.\n\n- Variable Definitions\n  The code defines two types of variables:\n  - Input variables: `X` and `Y`, both of complex type, representing the base and exponent for the power operation.\n  - Output variable: `CPOW`, of complex type, representing the result of `X` raised to the power of `Y`.\n\n- Main Logic\n  -- REGION Main Logic\n    The core logic of this function implements the power operation using logarithmic and exponential operations on complex numbers. The specific steps are as follows:\n    1. First, call `CLOG(X)` to compute the natural logarithm of the complex number `X`, with the result still being a complex number.\n    2. Then, call `CMUL(Y, CLOG(X))` to multiply the complex number `Y` with the result of `CLOG(X)`, yielding a new complex number.\n    3. Finally, call `CEXP(CMUL(Y, CLOG(X)))` to perform the natural exponential operation on the above result, obtaining the final power operation result, which is assigned to `CPOW`.\n    This logic is based on the mathematical property of complex numbers, where the power operation can be achieved through a combination of logarithmic and exponential operations.\n\n    The formula is represented as:\n    \\[\n    X^Y = e^{Y \\cdot \\ln(X)}\n    \\]\n    Here, `e` is the base of the natural logarithm, and `ln(X)` is the natural logarithm of `X`.", "name": "CPOW"}