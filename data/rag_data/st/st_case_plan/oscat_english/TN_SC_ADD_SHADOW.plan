Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  The function block `TN_SC_ADD_SHADOW` is used to add shadow effects or clear the content of a specified area on the screen. It achieves these functionalities by manipulating color and character attributes in the screen buffer.\n\n- Variable Definitions\n  The code defines the following types of variables:\n  - Input variables: `in_Offset`, `in_X`, `in_Y`, `Iin_Y1`, `Iin_X1`, `Iin_Y2`, `Iin_X2`, `Iin_OPTION`\n  - Screen buffer variables: `Xus_TN_SCREEN`, assuming `us_TN_SCREEN` is a predefined type containing arrays for color and character attributes.\n\n- Main Logic\n  -- REGION Input Validation\n     First, the code checks the validity of the input coordinates using the `TN_SC_XY2_ERROR` function. If invalid, it returns immediately. Next, it verifies whether the coordinates fall within the valid range (0 to 23 rows, 0 to 79 columns). If out of bounds, it returns.\n     These checks ensure operations are performed only within valid screen regions.\n\n  -- REGION Offset Calculation\n     The code calculates the starting offset using the formula `(Iin_Y1 * 80) + Iin_X2` to locate specific positions in the screen buffer.\n\n  -- REGION Vertical Processing\n     Based on the value of `Iin_OPTION`, the code decides whether to add shadows or clear content.\n     - If `Iin_OPTION` is `00`, it iterates through each row of the specified area, calling the `TN_SC_SHADOW_ATTR` function to modify color attributes and marking the row for updates.\n     - Otherwise, it iterates through each row, setting the color attribute to `BYTE#00` and the character attribute to `BYTE#32` (space), then marks the row for updates.\n\n  -- REGION Horizontal Processing\n     Again, based on `Iin_OPTION`, the code decides whether to add shadows or clear content.\n     - If `Iin_OPTION` is `00`, it iterates through each column of the specified area, calling `TN_SC_SHADOW_ATTR` to modify color attributes.\n     - Otherwise, it iterates through each column, setting the color attribute to `BYTE#00` and the character attribute to `BYTE#32` (space).\n\n- Output Result\n   By modifying the color and character attributes in the `Xus_TN_SCREEN` buffer, the code achieves the effect of adding shadows or clearing content on the screen. Ultimately, the specified screen area is updated, and where necessary, row update flags are set to `TRUE` to facilitate subsequent screen refresh operations.", "name": "TN_SC_ADD_SHADOW"}