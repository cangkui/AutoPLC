Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  This function, named `FINDP`, is used to search for the position of the target string `src` within the source string `str`, starting from the specified position `pos`. If the target string is found, it returns its starting position; otherwise, it returns 0.\n\n- Variable Definitions\n  The code defines the following types of variables:\n  - Input variables: `str` (source string), `src` (target string), `pos` (starting search position).\n  - Local variables: `i` (loop counter), `ls` (length of source string), `lx` (length of target string), `stp` (end position for the search).\n\n- Main Logic\n  -- REGION Initialization and Boundary Checks\n    First, the length of the source string `str` (`ls`) and the target string `src` (`lx`) are calculated. If the source string is shorter than the target string or the target string is empty, the function immediately returns 0, indicating that the target string cannot be found.\n\n  -- REGION Search Logic\n    The end position `stp` for the search is calculated as `ls - lx + 1`, representing the last possible starting position in the source string where the target string could be extracted. Then, a `FOR` loop is used to iterate from `MAX(pos, 1)` to `stp`. In each iteration, the `MID` function extracts a substring from the source string with the same length as the target string and compares it to the target string. If a match is found, the current position `i` is returned.\n\n  -- REGION Handling No Match\n    If no match is found after the loop completes, the function returns 0, indicating that the target string was not found.\n\n- Output\n  The function returns the starting position of the target string within the source string. If the target string is found, its position is returned; otherwise, 0 is returned.", "name": "FINDP"}