Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  This is a function block named `MD5_STR`, designed to compute the MD5 hash of an input string. It achieves this by invoking the `MD5_STREAM` function block to perform the MD5 hash calculation and stores the result in an output array. The core logic of the function block is a state machine that manages the different stages of the MD5 computation.\n\n- Variable Definitions\n  The code defines the following types of variables:\n  - Input variable: `RUN`, used to initiate the MD5 computation.\n  - Output variable: `DONE`, indicating whether the MD5 computation is complete.\n  - Input-output variables: `STR`, the input string; `MD5`, a byte array storing the computed result.\n  - Internal variables: `run_last`, used to detect the rising edge of the `RUN` signal; `MD5_STREAM`, an instance of the function block that performs the MD5 computation; `buf`, a temporary buffer for storing the string; `mode`, representing the current state of the state machine; `size`, the length of the string; `pos`, the current processing position.\n\n- Main Logic Section\n  -- REGION State Machine Logic\n     The state machine uses the `mode` variable to manage the different stages of MD5 computation:\n     - **Mode 0 (Initialization)**:\n       When the `RUN` signal transitions from `FALSE` to `TRUE`, the MD5 computation is initiated. `DONE` is set to `FALSE`, `mode` is set to 1, and `size` is initialized to the length of the input string.\n     - **Mode 2 (String Processing)**:\n       If `size` is greater than 0, it indicates there are remaining parts of the string to be processed. The `OSCAT_BASIC._STRING_TO_BUFFER` function is used to copy a portion of the string into the `buf` buffer for subsequent computation.\n     - **Mode 3 (Completion)**:\n       Once the MD5 computation is complete, `DONE` is set to `TRUE`, and `mode` is reset to 0, indicating the computation is finished and ready for the next cycle.\n  \n  -- REGION MD5 Computation Invocation\n     If `mode` is greater than 0, it indicates the MD5 computation is in progress. The `MD5_STREAM` function block is called to perform the actual MD5 computation. The inputs to `MD5_STREAM` include `size` (string length), `mode` (current state), `buf` (buffer), and `MD5` (result array), while the output is `pos` (current processing position).\n\n  -- REGION Detection of RUN Signal Change\n     At the end of each cycle, the current value of the `RUN` signal is stored in `run_last` to detect the rising edge of the `RUN` signal in the next cycle.\n\n  The core of the function block involves progressively processing the input string through the state machine and invoking the `MD5_STREAM` function block to complete the MD5 hash computation. Once the computation is done, the `DONE` signal is set to `TRUE`, indicating the result is stored in the `MD5` array.", "name": "MD5_STR"}