Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  This code implements an integrator function block named `FT_INT`. It performs integration operations based on the input signal and supports upper and lower limit constraints for the integration result. The function block also provides a reset feature and can output a Boolean signal indicating whether the current integration value exceeds the set limits.\n\n- Variable Definitions\n  The code defines the following types of variables:\n  - Input variables: Input signal `IN`, integration gain `K`, run signal `RUN`, reset signal `RST`, output lower limit `OUT_MIN`, and output upper limit `OUT_MAX`.\n  - Output variables: Integration result `OUT` and limit flag `LIM`.\n  - Internal variables: Integrator instance `INTeg`.\n\n- Main Logic Section\n  -- REGION Reset Logic\n      First, it checks whether the reset signal `RST` is true. If true, the output `OUT` is reset to 0.0, indicating the integrator has been reset. If the reset signal is false, the internal integrator `INTeg` is called to perform the integration operation. The integrator's input is `IN`, the run signal is `RUN`, the gain is `K`, and the output is `OUT`.\n\n  -- REGION Output Limit Logic\n      After the integration operation is completed, it checks whether the integration result `OUT` exceeds the preset upper or lower limits. If `OUT` is greater than or equal to `OUT_MAX`, `OUT` is clamped to `OUT_MAX`, and the limit flag `LIM` is set to true. If `OUT` is less than or equal to `OUT_MIN`, `OUT` is clamped to `OUT_MIN`, and the limit flag `LIM` is set to true. If `OUT` is within the limits, the limit flag `LIM` is set to false.\n\n- Summary\n  This function block implements a simple integrator with reset functionality and output limits. The reset signal can reset the integration result, while the upper and lower limit parameters constrain the output range of the integration. The `LIM` flag indicates whether the current integration value exceeds the limits. Such functionality is commonly used in control systems for integration operations and signal processing scenarios.", "name": "FT_INT"}