Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\nThe function block `SH_2` implements a signal processing logic primarily used for filtering and statistical analysis of input signals. It samples the input signal using a sliding window and calculates the average, maximum, and minimum values within the window. Additionally, it can remove outliers (such as high and low values) based on configured thresholds to produce a more stable output.\n\n- Variable Definitions\nThe code defines the following types of variables:\n  - **Input Variables**: `in` (input signal), `PT` (sampling period), `N` (window size, default 16), `disc` (number of discarded outliers).\n  - **Output Variables**: `out` (output signal), `trig` (trigger flag indicating whether sampling is complete), `avg` (average value within the window), `high` (maximum value within the window), `low` (minimum value within the window).\n  - **Internal Variables**: `M` (actual window size), `buf` and `buf2` (arrays for storing sampled data), `last` (time of the last sampling), `i`, `start`, `stop` (loop and index variables), `temp` (temporary variable), `tx` (current time), `d2` (half of the discarded outlier count).\n\n- Main Logic\n  -- REGION Sampling and Data Processing\n     First, the current time `tx` is obtained, and `d2` (half of `disc`) is calculated. If the time difference between the current time and the last sampling time is greater than or equal to the sampling period `PT`, the following logic is executed:\n     1. Update `last` to the current time and set `trig` to `TRUE`, indicating that sampling is complete.\n     2. Calculate the actual window size `M`, ensuring it is between 1 and 16.\n     3. Insert the input signal `in` at the beginning of buffer `buf2` and copy the contents of `buf2` to `buf`.\n     4. Sort the data in `buf` for subsequent calculations.\n     5. Based on the value of `disc`, calculate the range of data to retain (removing high and low outliers) and compute the average `avg`, minimum `low`, and maximum `high` of the remaining data.\n     6. Set the output `out` to the input signal `in`.\n\n     If the time difference is less than `PT`, set `trig` to `FALSE`, indicating that sampling is not complete.\n\n  -- REGION Sorting and Filtering\n     During sampling and data processing, the data in buffer `buf` is sorted. A simple bubble sort algorithm is used to arrange the data in ascending order. After sorting, outliers (such as the highest and lowest data points) are removed based on `disc`, and the average, minimum, and maximum values of the remaining data are calculated.\n\n  -- REGION Output Results\n     After each sampling cycle, the following results are output:\n     - `out`: Directly outputs the input signal `in`.\n     - `trig`: Indicates whether sampling is complete.\n     - `avg`: Average value within the window.\n     - `high`: Maximum value within the window.\n     - `low`: Minimum value within the window.\n\n- Summary\nThis function block samples and filters input signals using a sliding window, effectively removing outliers and calculating the average, maximum, and minimum values of the signal. It is suitable for scenarios requiring signal smoothing or noise removal. By configuring the sampling period `PT` and the number of discarded outliers `disc`, the filtering effect can be flexibly adjusted.", "name": "SH_2"}