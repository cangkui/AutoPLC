Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  The function named `DAY_OF_MONTH` is used to calculate the day of the month for a given date. It determines the day by subtracting the impact of leap years from the total days in the year and then uses predefined month offsets to identify the current day of the month.\n\n- Variable Definitions\n  - Input variable: `IDATE`, representing the input date.\n  - Internal variable: `leap`, used to store the leap year flag (0 or 1).\n\n- Main Logic\n  -- REGION Calculate days in the year\n     First, the function calls the `DAY_OF_YEAR` function to convert the input date `IDATE` into the day of the year and assigns the result to `DAY_OF_MONTH`.\n  \n  -- REGION Check for leap year\n     Next, the function calls the `LEAP_OF_DATE` function to determine if the input date falls in a leap year, converting the result to an integer (0 or 1) stored in the variable `leap`.\n  \n  -- REGION Adjust days\n     The function subtracts `leap` from `DAY_OF_MONTH` to eliminate the leap year's effect on the day count.\n  \n  -- REGION Determine day of the month\n     The function uses a series of nested `IF` statements to determine the day of the month based on predefined month offsets (`setup.MTH_OFS`). The specific logic is as follows:\n     1. If `DAY_OF_MONTH` is greater than the offset for the 9th month, it further checks whether it exceeds the offsets for the 11th or 12th months and subtracts the corresponding offsets accordingly.\n     2. If `DAY_OF_MONTH` is greater than the offset for the 5th month, it further checks whether it exceeds the offsets for the 7th or 8th months and subtracts the corresponding offsets accordingly.\n     3. If `DAY_OF_MONTH` is greater than the offset for the 3rd month, it further checks whether it exceeds the offset for the 4th month and subtracts the corresponding offset accordingly.\n     4. If none of the above conditions are met, the function adds `leap` back to `DAY_OF_MONTH` and checks if it exceeds the offset for the 2nd month. If so, it subtracts the offset for the 2nd month.\n  \n  -- REGION Return result\n     Finally, the function returns the calculated day of the month, `DAY_OF_MONTH`.", "name": "DAY_OF_MONTH"}