Natural Language Requirements: {"variables": [], "instructions": [], "planning": "- Overview\nThis code implements a functional block named `LOG_VIEWPORT`, designed to manage and update log views. It dynamically adjusts the display position and content of logs by processing input and output variables from log control (`LOG_CONTROL`) and log viewport (`us_LOG_VIEWPORT`).\n\n- Variable Definitions\nThe code defines the following types of variables:\n - Input/Output Variables: `LC` (Log Control) and `LV` (Log Viewport), used to pass log data and view states.\n - Internal Variables: `pos` (current view position), `count` (loop counter), `idx` (index), `base` (base index), `update_pos` (whether position needs updating), which support the view update logic.\n\n- Main Logic Section\n-- REGION View Position Adjustment\n   This section handles the logic for adjusting the log view position. First, it checks if `LV.MOVE_TO_X` has a non-zero value. If so, it adjusts `pos` based on `LV.MOVE_TO_X`:\n   - `30000`: Sets `pos` to 1 (moves the view to the beginning of the log).\n   - `30001`: Sets `pos` to `LC.SIZE` (moves the view to the end of the log).\n   - `30002`: Increments `pos` by `LV.COUNT` (moves the view forward).\n   - `30003`: Decrements `pos` by `LV.COUNT` (moves the view backward).\n   - Other values: Increments `pos` by `LV.MOVE_TO_X` (moves the view by the specified value).\n   After adjustment, it sets `update_pos` to `TRUE` to indicate the view position needs updating and resets `LV.MOVE_TO_X` to 0.\n\n-- REGION View Update\n   This section handles the logic for updating the log view. First, it checks if the view needs updating:\n   - If `LV.UPDATE_COUNT` does not equal `LC.UPDATE_COUNT`, or `update_pos` is `TRUE`, the view needs updating.\n   It then sets `LV.UPDATE` to `TRUE` and updates `LV.UPDATE_COUNT` to `LC.UPDATE_COUNT`. Simultaneously, it resets `update_pos` to `FALSE`.\n   Next, it adjusts `pos` based on the log mode (`LC.RING_MODE`):\n   - If `LC.RING_MODE` is `TRUE`, `pos` is constrained between 1 and `LC.SIZE - LV.COUNT + 1` (ring mode).\n   - If `LC.RING_MODE` is `FALSE`, `pos` is constrained between 1 and `LC.IDX - LV.COUNT + 1` (linear mode).\n   Finally, it populates `LV.LINE_ARRAY` based on the log mode:\n   - If `LC.RING_MODE` is `TRUE`, it calculates indices using ring logic and fills `LV.LINE_ARRAY`.\n   - If `LC.RING_MODE` is `FALSE`, it calculates indices using linear logic and fills `LV.LINE_ARRAY`, filling with 0 if the index is less than 1.\n\n- Summary\nThe `LOG_VIEWPORT` functional block dynamically adjusts the position and content of log views, supporting both ring and linear log modes. It updates the view display in real-time based on user actions (e.g., moving the view) and changes in log data.", "name": "LOG_VIEWPORT"}