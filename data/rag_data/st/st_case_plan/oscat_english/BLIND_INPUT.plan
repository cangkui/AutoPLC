Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\nThis code defines a functional block `BLIND_INPUT` designed to handle input processing for blinds or similar devices. It processes signals from buttons or switches and updates the blinds' status and position based on different input states (e.g., single-click, double-click, long-press). The block supports both manual and automatic mode switching and includes timeout and debounce logic.\n\n- Variable Definitions\nThe code defines the following categories of variables:\n  - **Input Variables**: Includes position (POS), angle (ANG), switch signals (S1, S2), input signal (IN), manual inputs (PI, AI), single-switch mode (SINGLE_SWITCH), click enable (CLICK_EN), click time (CLICK_TIME), maximum runtime (MAX_RUNTIME), manual timeout (MANUAL_TIMEOUT), debounce time (DEBOUNCE_TIME), double-click signals (DBL_CLK1, DBL_CLK2), double-click positions (DBL_POS1, DBL_POS2), double-click angles (DBL_ANG1, DBL_ANG2), double-click toggles (D1_TOGGLE, D2_TOGGLE), and master mode (MASTER_MODE).\n  - **Output Variables**: Includes upward status (QU), downward status (QD), status (STATUS), output position (PO), output angle (AO), and double-click outputs (D1, D2).\n  - **Internal Variables**: Includes debounce timers (s1e, s2e), click modes (s1d, s2d), direction (dir), current time (tx), and last operation time (last).\n\n- Main Logic\n-- **REGION Initialization**\n    The current time (tx) is set to the PLC's millisecond time for subsequent time calculations and timeout handling. Debounce timers (s1e, s2e) and click modes (s1d, s2d) are initialized. The debounce timers ensure signal stability by eliminating switch jitter, while click modes detect single-click, double-click, and long-press actions to update the status accordingly.\n\n-- **REGION Double-Click Toggle Handling**\n    If a double-click toggle (D1_TOGGLE or D2_TOGGLE) is false, the corresponding double-click output (D1 or D2) is set to false, allowing the double-click feature to be disabled in certain configurations.\n\n-- **REGION Status Handling**\n    Based on the click modes (s1d, s2d) and input signal (IN), the status (STATUS) and direction (dir) are updated as follows:\n    - If a long-press or status 139 is detected, the status is set to 139 (stop state).\n    - If a long-press on S1 is detected, the status is set to 132 (upward movement).\n    - If a long-press on S2 is detected, the status is set to 133 (downward movement).\n    - If a single-click on S1 is detected, the status toggles to 134 (upward movement). If click enable (CLICK_EN) is true, it checks whether the device is already running (QU XOR QD). If running, the status is set to 131 (stop state); otherwise, it sets the status to 134, records the current time (last), and toggles the direction (dir).\n    - If a single-click on S2 is detected, the status toggles to 135 (downward movement). Similar to S1, if click enable (CLICK_EN) is true, it checks the running state and sets the status to 131 if already running; otherwise, it sets the status to 135, records the time, and toggles the direction.\n    - If the input signal (IN) is detected, the status is set to 136 (input state), and the current time (last) is recorded.\n    - If a double-click on S1 is detected, the status is set to 137 (double-click 1 state) if DBL_CLK1 is true; otherwise, the D1 state is toggled.\n    - If a double-click on S2 is detected, the status is set to 138 (double-click 2 state) if DBL_CLK2 is true; otherwise, D1 or D2 is toggled based on SINGLE_SWITCH mode.\n\n-- **REGION State Machine**\n    The logic executes based on the STATUS value:\n    - **Status 0**: Default state, set to 130 (normal state).\n    - **Status 130 (Normal)**: Updates output position (PO) and angle (AO), sets QU and QD to true. If not in MASTER_MODE, PO and AO are updated to input values (POS, ANG).\n    - **Status 131 (Stop)**: Sets QU and QD to false and updates PO and AO. If the elapsed time (tx - last) ≥ MANUAL_TIMEOUT, it returns to status 130.\n    - **Status 132 (Upward)**: Sets QU to true and QD to false, updates PO and AO. If the long-press ends (s1d.LONG false), it returns to status 131 and toggles direction (dir).\n    - **Status 133 (Downward)**: Sets QU to false and QD to true, updates PO and AO. If the long-press ends (s2d.LONG false), it returns to status 131 and toggles direction.\n    - **Status 134 (Upward Run)**: Sets QU to true and QD to false, updates PO and AO. If the elapsed time ≥ MAX_RUNTIME, it returns to status 131.\n    - **Status 135 (Downward Run)**: Sets QU to false and QD to true, updates PO and AO. If the elapsed time ≥ MAX_RUNTIME, it returns to status 131.\n    - **Status 136 (Input)**: Sets QU and QD to true, updates PO and AO to manual inputs (PI, AI). If the elapsed time ≥ MAX_RUNTIME, it returns to status 130.\n    - **Status 137 (Double-Click 1)**: Sets QU and QD to true, updates PO and AO to DBL_POS1 and DBL_ANG1. If the elapsed time ≥ MAX_RUNTIME, it returns to status 131.\n    - **Status 138 (Double-Click 2)**: Sets QU and QD to true, updates PO and AO to DBL_POS2 and DBL_ANG2. If the elapsed time ≥ MAX_RUNTIME, it returns to status 131.\n    - **Status 139 (Stop)**: Sets QU and QD to false and updates PO and AO.", "name": "BLIND_INPUT"}