Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\nThis function `DT_TO_STRF` is used to format a datetime into a string. It accepts a datetime, milliseconds, a format string, and a language code as inputs, and converts the datetime into the corresponding string representation based on the placeholders (starting with `#`) in the format string.\n\n- Variable Definitions\nThe code defines the following types of variables:\n - Input variables: `DTI` (datetime input), `MS` (milliseconds input), `FMT` (format string input), `LANG` (language input).\n - Constants: `FILL` (padding character, default `'0'`), `BLANK` (blank character, default `' '`).\n - Local variables: `ly` (language code), `dx` (date), `fs` (formatted string), `td` (time), `tmp` (temporary integer), `pos` (position), `f` (format code).\n\n- Main Logic\n-- REGION Language Handling\n   First, check if the language input `LANG` is valid. If `LANG` is less than 1, use the default language code; otherwise, use the smaller value between `LANG` and the maximum language code as the language code.\n\n-- REGION Datetime Decomposition\n   Decompose the input datetime `DTI` into date `dx` and time `td` using the `DT_TO_DATE` and `DT_TO_TOD` functions, respectively.\n\n-- REGION Format String Processing\n   Initialize the output string as the format string `FMT`. Then, search for placeholders (starting with `#`) in the format string. If a placeholder is found, convert the corresponding part of the datetime into a string based on the character following the placeholder (format code) and replace the placeholder.\n   - Format code `A`: Year (full format, e.g., `2023`).\n   - Format code `B`: Year (last two digits, e.g., `23`).\n   - Format code `C`: Month (numeric, e.g., `1`).\n   - Format code `D`: Month (numeric, two digits, e.g., `01`).\n   - Format code `E`: Month (abbreviated, e.g., `Jan`).\n   - Format code `F`: Month (full name, e.g., `January`).\n   - Format code `G`: Day (numeric, e.g., `1`).\n   - Format code `H`: Day (numeric, two digits, e.g., `01`).\n   - Format code `I`: Weekday (numeric, e.g., `1` for Monday).\n   - Format code `J`: Weekday (abbreviated, e.g., `Mon`).\n   - Format code `K`: Weekday (full name, e.g., `Monday`).\n   - Format code `L`: AM/PM (`AM` or `PM`).\n   - Format code `M`: Hour (24-hour format, e.g., `13`).\n   - Format code `N`: Hour (24-hour format, two digits, e.g., `13`).\n   - Format code `O`: Hour (12-hour format, e.g., `1`).\n   - Format code `P`: Hour (12-hour format, two digits, e.g., `01`).\n   - Format code `Q`: Minute (e.g., `5`).\n   - Format code `R`: Minute (two digits, e.g., `05`).\n   - Format code `S`: Second (e.g., `30`).\n   - Format code `T`: Second (two digits, e.g., `30`).\n   - Format code `U`: Millisecond (e.g., `123`).\n   - Format code `V`: Millisecond (three digits, e.g., `123`).\n   - Format code `W`: Day (numeric, two digits, left-padded with space, e.g., ` 1`).\n   - Format code `X`: Month (numeric, two digits, left-padded with space, e.g., ` 1`).\n\n   After each replacement, continue searching for the next placeholder until all placeholders are replaced.\n\n-- REGION Return Result\n   Finally, the function returns the formatted string `DT_TO_STRF`.", "name": "DT_TO_STRF"}