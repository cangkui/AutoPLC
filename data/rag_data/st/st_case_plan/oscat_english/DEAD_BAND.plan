Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  This function block is named `DEAD_BAND` and is designed to implement a simple deadband control logic. Deadband control is a commonly used strategy to ignore minor fluctuations in the input signal within a certain range, thereby preventing unnecessary output variations.\n\n- Variable Definitions\n  The code defines two types of variables:\n  - Input variables: `X` (input signal) and `L` (deadband range).\n  - Output variable: `DEAD_BAND` (output value after deadband control).\n\n- Main Logic Section\n  -- REGION Deadband Control Logic\n    This region implements the core logic of deadband control. Based on the input signal `X` and the deadband range `L`, the function block performs the following checks:\n    1. If `X` is greater than `L`, the output value is `X - L`, indicating that the signal has exceeded the upper limit of the deadband range, and the function block outputs the positive difference.\n    2. If `X` is less than `-L`, the output value is `X + L`, indicating that the signal has exceeded the lower limit of the deadband range, and the function block outputs the negative difference.\n    3. If `X` is between `-L` and `L`, the output value is `0.0`, indicating that the signal is within the deadband range, and the function block outputs zero, ignoring the signal.\n    This logic is often used in control systems to minimize the impact of noise or minor fluctuations.", "name": "DEAD_BAND"}