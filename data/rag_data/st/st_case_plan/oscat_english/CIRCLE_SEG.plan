Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  This code defines a function named `CIRCLE_SEG` that calculates a specific geometric parameter of a circle (likely the area of a circular segment or circular cap). The function takes two input parameters: `RX` (the radius of the circle) and `HX` (the height of the segment), and returns a real value as the result.\n\n- Variable Definitions\n  - Input Variables:\n    - `RX`: The radius of the circle, of type `REAL`.\n    - `HX`: The height of the circular segment, of type `REAL`.\n\n- Main Logic\n  -- REGION Main Logic:\n    1. **Input Validation**: First, the function checks if the input radius `RX` is greater than 0.0. If `RX` is less than or equal to 0.0, the function terminates without performing any calculations.\n    2. **Angle Calculation**: If `RX` is greater than 0.0, the function calculates an angle value using the `ACOS` function (inverse cosine). The input to `ACOS` is `1.0 - LIMIT(0.0, HX / RX, 2.0)`. The `LIMIT` function ensures that `HX / RX` stays within the range of 0.0 to 2.0 to avoid invalid mathematical operations.\n    3. **Geometric Parameter Calculation**: Using the angle value from the previous step, the function computes the final geometric parameter with the formula `(CIRCLE_SEG - SIN(CIRCLE_SEG)) * RX * RX / 2.0`. This formula is likely used to calculate the area of a circular segment or cap.\n    4. **Return Result**: The computed geometric parameter is assigned to the function name `CIRCLE_SEG`, which serves as the return value.\n\n- Summary\n  This function calculates and returns a geometric parameter related to a circular segment based on the input radius and segment height. The core logic includes input validation, angle calculation, and geometric parameter computation. If the input is invalid (e.g., radius â‰¤ 0.0), the function terminates without performing calculations.", "name": "CIRCLE_SEG"}