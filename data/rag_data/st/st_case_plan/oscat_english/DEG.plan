Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\nThis code is a simple SCL function named 'DEG', designed to convert a radian value to a degree value and constrain the result within the range of 0 to 360 degrees.\n\n- Variable Definitions\nThe code defines the following types of variables:\n - Input variable: `rad`, representing the input radian value.\n - Output variable: `DEG`, representing the converted degree value.\n\n- Main Logic Section\n-- REGION Main Logic\n   The core logic of this function involves converting the input radian value to a degree value and ensuring the result stays between 0 and 360 degrees. The specific steps are as follows:\n   1. Use the formula `57.29577951308232 * rad` to convert the radian value to degrees. Here, `57.29577951308232` is the conversion factor from radians to degrees (i.e., `180 / π`).\n   2. Apply the `MODR` function to take the modulus of the converted degree value with `360.0` as the modulus. `MODR` is an SCL modulo function for floating-point operations, ensuring the result remains within 0 to 360 degrees.\n   3. Assign the final result to the output variable `DEG`.\n\n   For example, if the input is `rad = 3.14159` (i.e., π radians), the calculation proceeds as follows:\n   - `57.29577951308232 * 3.14159 ≈ 180` (converting π radians to 180 degrees).\n   - `MODR(180, 360) = 180` (the result remains unchanged as it is already within 0 to 360 degrees).\n   Therefore, the output `DEG` will be `180.0`.", "name": "DEG"}