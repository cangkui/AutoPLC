Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  This code implements a function block named `LTIME_TO_UTC`, which converts local time (`LOCAL_TIME`) to Coordinated Universal Time (UTC). It accounts for time zone offset (`TIME_ZONE_OFFSET`) and Daylight Saving Time (`DST`) adjustments.\n\n- Variable Definitions\n  The code defines the following types of variables:\n  - Input Variables:\n    - `LOCAL_TIME`: Local time, with a data type of `DT` (date and time).\n    - `DST`: A boolean value indicating whether Daylight Saving Time is enabled.\n    - `TIME_ZONE_OFFSET`: An integer representing the time zone offset from UTC in minutes.\n\n- Main Logic\n  -- REGION Time Conversion Logic:\n    1. **Time Zone Offset Calculation**:\n       - First, convert the local time (`LOCAL_TIME`) to `UDINT` (unsigned double integer) type for mathematical operations.\n       - Then, convert the time zone offset (`TIME_ZONE_OFFSET`) to `UDINT` and multiply it by 60 (to convert hours to minutes).\n       - Finally, subtract the total minutes of the time zone offset from the local time to obtain a preliminary UTC time.\n    2. **Daylight Saving Time Adjustment**:\n       - If Daylight Saving Time (`DST`) is true, subtract 1 hour (`T#1h`) from the preliminary UTC time to adjust for DST.\n    3. **Return Result**:\n       - Convert the final calculated UTC time back to `DT` type and return it as the function's output.\n\n  The core logic of this function involves converting local time to UTC by applying the time zone offset and DST adjustment. The time zone offset is specified in minutes, while the DST adjustment simply subtracts 1 hour.", "name": "LTIME_TO_UTC"}