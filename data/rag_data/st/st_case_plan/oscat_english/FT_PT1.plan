Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\nThis code implements a first-order inertial element (PT1) function block, simulating the dynamic response of a first-order system. The block calculates the output signal based on the input signal, time constant, and gain. It gradually approaches the steady-state value through time integration, emulating the characteristics of a first-order system.\n\n- Variable Definitions\nThe code defines the following types of variables:\n  - Input variables: `in` (input signal), `T` (time constant), `K` (gain, default value 1.0).\n  - Output variable: `out` (output signal).\n  - Internal variables: `last` (timestamp of the last call), `tx` (current timestamp), `init` (initialization flag, used for special handling during the first call).\n\n- Main Logic\n  -- REGION Main Logic:\n    1. **Get Current Time**: The `T_PLC_US()` function retrieves the current PLC timestamp in microseconds and stores it in the `tx` variable.\n    2. **Initialization Handling**:\n       - If the function block is called for the first time (`init` is `FALSE`) or the time constant `T` is 0, initialization is performed:\n         - Set `init` to `TRUE`, indicating initialization is complete.\n         - Directly calculate the output value: `out = K * in`, meaning the output equals the input multiplied by the gain.\n    3. **Dynamic Response Calculation**:\n       - If the function block is already initialized and the time constant `T` is not 0, the output value is calculated based on the dynamic characteristics of the first-order inertial element:\n         - Formula: `out = out + (in * K - out) * (Tx - last) / TIME_TO_REAL(T) * 1.0E-3`\n         - Here, `(Tx - last)` represents the time difference between two calls, and `TIME_TO_REAL(T)` converts the time constant to a real number.\n         - This formula gradually approaches the steady-state value through time integration, simulating the dynamic response of a first-order system.\n    4. **Output Value Adjustment**:\n       - If the absolute value of the output is less than `1.0E-20`, it is set to 0 to avoid floating-point precision issues.\n    5. **Update Timestamp**:\n       - Store the current timestamp `tx` in the `last` variable for calculating the time difference in the next call.\n\n- Summary\nThis function block simulates the characteristics of a first-order system using the dynamic response formula of a first-order inertial element. It supports initialization handling for the first call and gradually approaches the steady-state value based on the time constant and gain. The output calculation accounts for time differences and floating-point precision, ensuring accuracy and stability.", "name": "FT_PT1"}