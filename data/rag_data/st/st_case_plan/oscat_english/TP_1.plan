Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\nThe function block, named `TP_1`, implements a simple timer function. Based on the state of the input signal `IN` and the set time `PT`, the output `Q` remains `TRUE` after the rising edge of the `IN` signal is triggered, until the time `PT` elapses or the reset signal `RST` is triggered.\n\n- Variable Definitions\nThe code defines the following types of variables:\n  - Input variables: `IN` (trigger signal), `PT` (timer duration), `RST` (reset signal).\n  - Output variable: `Q` (timer output).\n  - Internal variables: `tx` (current time), `start` (timer start time), `ix` (used to detect the rising edge of the `IN` signal).\n\n- Main Logic Section\n  -- REGION Main Logic:\n    1. **Get Current Time**: The current time is obtained via `DWORD_TO_TIME(T_PLC_MS())` and assigned to `tx`.\n    2. **Reset Logic**: If `RST` is `TRUE`, the output `Q` is directly reset to `FALSE`.\n    3. **Timer Start**: If `IN` is `TRUE` and `ix` is `FALSE` (i.e., a rising edge of the `IN` signal is detected), `Q` is set to `TRUE`, and the current time `tx` is recorded in `start` as the timer's start time.\n    4. **Timer End**: If the current time `tx` minus the start time `start` is greater than or equal to the set time `PT`, `Q` is set to `FALSE`, indicating the timer has ended.\n    5. **Update `IN` Signal State**: The current value of the `IN` signal is stored in `ix` for rising edge detection in the next cycle.\n\n- Summary\nThis function block implements a basic timer function. After the rising edge of the input signal `IN` is triggered, the output `Q` remains `TRUE` until the set time `PT` elapses or the reset signal `RST` is triggered. The internal variable `ix` detects the rising edge of the `IN` signal, ensuring the timer starts only upon the initial trigger.", "name": "TP_1"}