Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\nThis code defines a function block named `ACTUATOR_A`, designed to control actuator output. Based on input signals and timer status, it calculates and outputs a `WORD`-type value `Y`. This function block primarily simulates actuator behavior, supports minimum and maximum output ranges, and allows dynamic adjustments based on input signals.\n\n- Variable Definitions\nThe code defines the following variable categories:\n  - Input variables: Include `I1` and `I2` (BYTE type, used to select output values), `IS` (BOOL type, used to choose between `I1` or `I2`), `RV` (BOOL type, for reversing output), `DX` (BOOL type, for triggering the timer), `RUNTIME` and `SELF_ACT_TIME` (TIME type, for timer settings), `OUT_MIN` and `OUT_MAX` (WORD type, defining the output range).\n  - Output variable: `Y` (WORD type, representing the actuator's output value).\n  - Internal variables: `timer` (an `OSCAT_BASIC.CYCLE_4`-type timer), `dx_edge` (BOOL type, detecting the rising edge of `DX`).\n\n- Main Logic Section\n  -- REGION Timer Logic\n     - The timer `timer` has its input parameters `T0` and `T1` set to `RUNTIME`, `T3` to `SELF_ACT_TIME`, `sl` to the rising edge of `DX` (i.e., when `DX` changes from `FALSE` to `TRUE`), `sx` to `0`, and `S0` to `SELF_ACT_TIME > t#0s`.\n     - `dx_edge` stores the current value of `DX` to detect the rising edge in the next cycle.\n\n  -- REGION State Machine Logic\n     - Depending on the `STATE` value of timer `timer`, different logic is executed:\n       - State `0`: Output `Y` is set to `OUT_MIN`.\n       - State `1`: Output `Y` is set to `OUT_MAX`.\n       - State `3`: Output `Y` is calculated based on `RV`:\n         - If `RV` is `TRUE`, output `Y` equals `OUT_MAX` minus a value derived from `SEL(IS, I1, I2)`.\n         - If `RV` is `FALSE`, output `Y` equals `OUT_MIN` plus a value derived from `SEL(IS, I1, I2)`.\n         - Here, `SEL(IS, I1, I2)` selects either `I1` or `I2` based on `IS` and maps it to the range between `OUT_MIN` and `OUT_MAX`.\n\n  -- REGION Output Calculation\n     - In state `3`, the formula for output `Y` is:\n       - If `RV` is `TRUE`: `Y = OUT_MAX - (OUT_MAX - OUT_MIN) * SEL(IS, I1, I2) / 255`\n       - If `RV` is `FALSE`: `Y = (OUT_MAX - OUT_MIN) * SEL(IS, I1, I2) / 255 + OUT_MIN`\n     - This formula ensures `Y` stays within `OUT_MIN` and `OUT_MAX`, performing linear interpolation based on `I1` or `I2`.\n\n- Summary\nThis function block implements actuator control logic using a timer and state machine, supporting configurable output ranges and dynamic adjustments. The timer manages state transitions, while the state machine calculates the output based on the current state.", "name": "ACTUATOR_A"}