Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\nThe function block is named `FILTER_DW` and is used to filter an input 32-bit unsigned integer (DWORD). The output of the filter is a smoothed 32-bit unsigned integer. The behavior of the filter is controlled by the input time constant `T`, which determines the response speed of the filter.\n\n- Variable Definitions\nThe code defines the following types of variables:\n  - Input variables: `X` is the input value to be filtered (DWORD), and `T` is the time constant of the filter (TIME).\n  - Output variable: `Y` is the filtered output value (DWORD).\n  - Internal variables:\n    - `last` stores the timestamp from the last function block call (DWORD).\n    - `tx` stores the current timestamp (DWORD).\n    - `init` is a boolean flag indicating whether initialization has been completed.\n    - `Yi` is a real value used to store intermediate calculation results of the filter.\n\n- Main Logic\n  -- REGION Initialization and Filter Calculation\n    1. **Get Current Timestamp**: First, the current timestamp (in milliseconds) is obtained via the `T_PLC_MS()` function and stored in the `tx` variable.\n    2. **Initialization Check**: If `init` is `FALSE` (indicating the function block has not been initialized) or the time constant `T` is `t#0s` (indicating no filtering is needed), initialization is performed:\n       - Set `init` to `TRUE`, marking the function block as initialized.\n       - Convert the input value `X` to a real number and directly assign it to `Yi` as the initial value of the filter.\n    3. **Filter Calculation**: If the function block is already initialized and `T` is not `t#0s`, the filter calculation is performed:\n       - Calculate the difference between the current input value `X` and the previous output value `Y`.\n       - Based on the time difference (`tx - last`) and the time constant `T`, compute the incremental value of the filter.\n       - Add this incremental value to `Yi` to obtain the new filtered result.\n    4. **Update Timestamp**: Store the current timestamp `tx` into `last` for use in the next function block call.\n    5. **Output Result**: Convert the intermediate result `Yi` back to the DWORD type and assign it to the output variable `Y`.\n\n- Mathematical Principle of the Filter\nThe filter calculation is based on the first-order low-pass filter formula:\n\\[ Y_i = Y_i + (X - Y) \\cdot \\frac{\\Delta t}{T} \\]\nWhere:\n  - \\( Y_i \\) is the intermediate result of the filter.\n  - \\( X \\) is the current input value.\n  - \\( Y \\) is the previous output value.\n  - \\( \\Delta t \\) is the time difference between the current and previous timestamps.\n  - \\( T \\) is the time constant of the filter.\n\n- Notes\n  - If the time constant `T` is set to `t#0s`, the filter will directly output the input value `X` without any filtering.\n  - The response speed of the filter is determined by the time constant `T`. A larger `T` results in slower response and smoother output changes.\n  - The function block must be called in every scan cycle to ensure the accuracy of timestamps and filter calculations.", "name": "FILTER_DW"}