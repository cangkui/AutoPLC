Natural Language Requirements: {"variables": [], "instructions": [], "planning": "- Overview\nThis code implements a Proportional-Integral (PI) controller function block named `FT_PIWL`. It calculates the output `Y` based on the input signal `IN` and the proportional-integral parameters `KP` and `KI`, while limiting the output between `LIM_L` and `LIM_H`. Additionally, it provides a flag `LIM` indicating whether the output has reached the limits.\n\n- Variable Definitions\nThe code defines the following types of variables:\n - Input variables: `IN` (input signal), `KP` (proportional gain), `KI` (integral gain), `LIM_L` (lower limit), `LIM_H` (upper limit), `RST` (reset signal).\n - Output variables: `Y` (output signal), `LIM` (flag indicating if output is at limit).\n - Internal variables: `init` (initialization flag), `tx` (current timestamp), `tc` (time difference), `t_last` (last timestamp), `in_last` (last input value), `i` (integral term), `p` (proportional term).\n\n- Main Logic\n-- REGION Initialization and Reset\n   This region handles the initialization and reset logic of the function block. If `init` is false or `RST` is true, initialization is performed. Initialization includes:\n   - Setting `init` to true.\n   - Setting `in_last` to the current input value `IN`.\n   - Getting the current timestamp and storing it in `t_last`.\n   - Resetting the integral term `i` and time difference `tc` to 0.0.\n\n-- REGION Time Difference Calculation\n   This region calculates the time difference `tc` between the current time and the last time:\n   - Gets the current timestamp and stores it in `tx`.\n   - Calculates the time difference `tc` as `tx - t_last` and converts it to `REAL` type.\n   - Updates `t_last` to the current timestamp `tx`.\n\n-- REGION Proportional Term Calculation\n   This region calculates the proportional term `p`:\n   - The proportional term `p` equals `KP` multiplied by the current input `IN`.\n\n-- REGION Integral Term Calculation\n   This region calculates the integral term `i`:\n   - The integral term `i` equals `(IN + in_last) * 5.0E-7 * KI * tc + i`, where `5.0E-7` is a scaling factor.\n   - Updates `in_last` to the current input `IN`.\n\n-- REGION Output Calculation and Limiting\n   This region calculates the output `Y` and checks if it exceeds the limits:\n   - The output `Y` equals the proportional term `p` plus the integral term `i`.\n   - If `Y` is greater than or equal to `LIM_H`, `Y` is limited to `LIM_H`, the integral term `i` is adjusted based on `KI`, and `LIM` is set to true.\n   - If `Y` is less than or equal to `LIM_L`, `Y` is limited to `LIM_L`, the integral term `i` is adjusted based on `KI`, and `LIM` is set to true.\n   - If `Y` is between `LIM_L` and `LIM_H`, `LIM` is set to false.\n\n-- REGION End\n   This region concludes the execution of the function block.", "name": "FT_PIWL"}