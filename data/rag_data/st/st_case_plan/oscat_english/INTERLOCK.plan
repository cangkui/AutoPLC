Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  This functional block is named 'INTERLOCK' and is designed to implement a simple interlock logic. It uses two input signals and two timers to ensure that the two output signals are never true simultaneously, thereby achieving the interlock function.\n\n- Variable Definitions\n  The code defines the following types of variables:\n  - Input variables: `I1` and `I2` are Boolean-type input signals, and `TL` is a time-type input used to set the delay time for the timers.\n  - Output variables: `Q1` and `Q2` are Boolean-type output signals representing the interlocked results.\n  - Internal variables: `T1` and `T2` are two `TON`-type timers used to implement the delay function.\n\n- Main Logic Section\n  -- REGION Timer Logic\n      This section contains the initialization and operation logic for the two timers `T1` and `T2`. Timer `T1` takes `I1` as its input signal, and timer `T2` takes `I2` as its input signal. Both timers use the input variable `TL` to set their delay times. When the input signal is true, the timer starts counting; when the count reaches the set delay time, the timer's output `Q` becomes true.\n\n  -- REGION Interlock Logic\n      This section implements the interlock logic. The logic for output `Q1` is that `I1` is true and the output `Q` of `T2` is false, meaning `Q1` is true when `I1` is true and `T2` has not completed its delay. The logic for output `Q2` is that `I2` is true and the output `Q` of `T1` is false, meaning `Q2` is true when `I2` is true and `T1` has not completed its delay. In this way, `Q1` and `Q2` cannot be true at the same time, achieving the interlock function.\n\n- Summary\n  This functional block uses timers and simple logic operations to ensure that the two output signals `Q1` and `Q2` are never true simultaneously, making it suitable for scenarios requiring interlock control. The delay time of the timers is controlled by the input variable `TL`, providing flexibility to the functional block.", "name": "INTERLOCK"}