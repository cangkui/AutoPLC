Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  The function is named `IP4_TO_STRING`, and its purpose is to convert a 32-bit DWORD-type IP address into a dotted-decimal format string. For example, converting `0xC0A80101` to `\"192.168.1.1\"`.\n\n- Variable Definitions\n  The code defines the following types of variables:\n  - Input variable: `IP4`, representing a 32-bit IP address of type DWORD.\n  - Internal variable: `tmp`, used to temporarily store each byte converted to a string, of type STRING[3].\n\n- Main Logic\n  -- REGION Logic Processing\n    1. **Extract the Lowest Byte**:\n       - Use the `DWORD_TO_BYTE` function to extract the lowest byte (i.e., the last part of the IP address) from `IP4`.\n       - Use the `BYTE_TO_STRING` function to convert this byte into a string and store it in `tmp`.\n       - Use the `CONCAT` function to concatenate `tmp` with the initial string `'...'`, forming the initial value of `IP4_TO_STRING`.\n\n    2. **Extract the Second-Lowest Byte**:\n       - Use `SHR(IP4, 8)` to right-shift `IP4` by 8 bits, extracting the second-lowest byte.\n       - Use `DWORD_TO_BYTE` and `BYTE_TO_STRING` to convert this byte into a string and store it in `tmp`.\n       - Use the `INSERT` function to insert `tmp` into the second position of `IP4_TO_STRING`.\n\n    3. **Extract the Second-Highest Byte**:\n       - Use `SHR(IP4, 16)` to right-shift `IP4` by 16 bits, extracting the second-highest byte.\n       - Use `DWORD_TO_BYTE` and `BYTE_TO_STRING` to convert this byte into a string and store it in `tmp`.\n       - Use the `INSERT` function to insert `tmp` into the first position of `IP4_TO_STRING`.\n\n    4. **Extract the Highest Byte**:\n       - Use `SHR(IP4, 24)` to right-shift `IP4` by 24 bits, extracting the highest byte.\n       - Use `DWORD_TO_BYTE` and `BYTE_TO_STRING` to convert this byte into a string and store it in `tmp`.\n       - Use the `CONCAT` function to concatenate `tmp` with `IP4_TO_STRING`, forming the final IP address string.\n\n  -- REGION Output Result\n    Finally, `IP4_TO_STRING` returns a dotted-decimal format IP address string. For example, input `0xC0A80101` will return `\"192.168.1.1\"`.", "name": "IP4_TO_STRING"}