Natural Language Requirements:  

```json
{
  "variables": [],
  "instructions": [],
  "planning": "- Overview\nThe function block `FT_PIDWL` implements a controller with Proportional-Integral-Derivative (PID) control logic. It calculates the output value using proportional, integral, and derivative components and clamps the output based on predefined upper and lower limits. The function block also supports a reset feature to clear internal states.\n\n- Variable Definitions\nThe code defines the following types of variables:\n - Input variables: Input value (`IN`), proportional gain (`KP`), integral time constant (`TN`), derivative time constant (`TV`), lower limit (`LIM_L`), upper limit (`LIM_H`), reset signal (`RST`).\n - Output variables: Output value (`Y`), limit flag (`LIM`).\n - Internal variables: Proportional-integral controller instance (`piwl`), derivative controller instance (`diff`).\n\n- Main Logic\n-- REGION Reset Handling\n   If the reset signal (`RST`) is true, the reset logic of the proportional-integral controller (`piwl`) is triggered, and the reset signal is cleared. This resets the controller's internal state.\n   \n-- REGION Proportional-Integral Control Logic\n   If the integral time constant (`TN`) is 0, only the proportional component is used, and the integral part is disabled. Otherwise, both proportional and integral components are applied. The input to the proportional-integral controller is the input value (`IN`) multiplied by the proportional gain (`KP`), and the integral gain (`KI`) is calculated based on the integral time constant (`TN`). The upper and lower limits (`LIM_L` and `LIM_H`) are passed to the proportional-integral controller to clamp its output.\n\n-- REGION Derivative Control Logic\n   The derivative controller's input is the input value (`IN`), and its gain is the proportional gain (`KP`) multiplied by the derivative time constant (`TV`). The derivative controller's output is added to the proportional-integral controller's output to form the final output value (`Y`).\n\n-- REGION Output Clamping\n   If the final output value (`Y`) is below the lower limit (`LIM_L`), it is clamped to the lower limit, and the limit flag (`LIM`) is set to true. If the final output value (`Y`) exceeds the upper limit (`LIM_H`), it is clamped to the upper limit, and the limit flag (`LIM`) is set to true. Otherwise, the limit flag (`LIM`) remains false.\n\n-- REGION Output Result\n   The final output value (`Y`) and the limit flag (`LIM`) are passed to the function block's outputs for external use.\n\n- Summary\nThis function block implements a complete PID controller with proportional, integral, and derivative control components, including output clamping. The reset feature allows users to reset the controller's internal state. By adjusting the proportional gain (`KP`), integral time constant (`TN`), and derivative time constant (`TV`), the controller's behavior can be flexibly configured.",
  "name": "FT_PIDWL"
}
```