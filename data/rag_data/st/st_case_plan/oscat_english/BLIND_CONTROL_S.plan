Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  This code implements a function block named `BLIND_CONTROL_S`, designed to control the upward and downward movements of blinds or similar devices. It processes input signals (such as up, down, position feedback, etc.) to control output signals (like motor up, motor down, current position, etc.), while managing state transitions and timeout logic.\n\n- Variable Definitions\n  The code defines the following types of variables:\n  - Input Variables: Include up (`UP`), down (`DN`), initial position (`S_IN`), position feedback (`PI`), rise time (`T_UP`), fall time (`T_DN`), reset up (`RU`), reset down (`RD`), lockout time (`T_LOCKOUT`), extension time (`T_EXT`), extension trigger value (`EXT_TRIG`), top reference position (`R_POS_TOP`), and bottom reference position (`R_POS_BOT`).\n  - Output Variables: Include current position (`POS`), motor up (`MU`), motor down (`MD`), and status (`STATUS`).\n  - Internal Variables: Include ramp function block (`rmp`), current time (`tx`), last time (`last`), and last position feedback (`PI_last`).\n\n- Main Logic Section\n  -- REGION Initialization and Time Calculation\n    First, the current time (in milliseconds) is obtained using `OSCAT_BASIC.T_PLC_MS()` and converted to the `TIME` type, stored in the variable `tx`. This time value is used for subsequent time difference calculations and timeout checks.\n\n  -- REGION Input Processing and State Setting\n    Based on the `UP` and `DN` input signals, the values of `rmp.IN` and `STATUS` are set:\n    - If `UP` is true and `DN` is false, an upward movement is required. Here, `rmp.IN` is set to 255 (maximum value), and `STATUS` is set to 121 (up state).\n    - If `DN` is true and `UP` is false, a downward movement is required. Here, `rmp.IN` is set to 0 (minimum value), and `STATUS` is set to 122 (down state).\n    - If both `UP` and `DN` are false, no movement is needed. Here, `rmp.IN` is set to `PI` (position feedback), and `STATUS` is set to `S_IN` (initial state).\n\n  -- REGION Ramp Function Block Call\n    The ramp function block `rmp` is called with the following parameters:\n    - `E`: Enable signal, which is the logical OR of `UP` or `DN`.\n    - `TR`: Rise time (`T_UP`).\n    - `TF`: Fall time (`T_DN`).\n    - `TL`: Lockout time (`T_LOCKOUT`).\n    - `OUT`: Output current position `POS`.\n\n    This function block smoothly adjusts the value of `POS` based on input parameters and the current state, simulating the blinds' upward and downward movement.\n\n  -- REGION State Machine Processing\n    Depending on the value of `STATUS`, different logic is executed:\n    - State 0: Initialization state. Sets `last` to the current time `tx`, `PI_last` to the inverse of `PI` (`PI XOR BYTE#255`), and `STATUS` to 128 (initialization complete).\n    - State 121: Up state. Sets `MU` to true (motor up) and `MD` to false (motor down). If `POS` is near the maximum value (255 - `EXT_TRIG`), indicating the upward movement is about to complete, `POS` is set to 255, `last` is updated to `tx`, and `STATUS` is set to 129 (up complete).\n    - State 122: Down state. Sets `MD` to true (motor down) and `MU` to false (motor up). If `POS` is near the minimum value (`EXT_TRIG`), indicating the downward movement is about to complete, `POS` is set to 0, `last` is updated to `tx`, and `STATUS` is set to 129 (down complete).\n    - State 123: Position adjustment state. Sets `MD` and `MU` to `rmp.DN` and `rmp.UP`. If `POS` is near the minimum or maximum value, the corresponding motor action is set, `last` is updated to `tx`, and `STATUS` is set to 129. Otherwise, `STATUS` is set to `S_IN`.\n    - State 124: Reference position adjustment state. Sets `MD` and `MU` to `rmp.DN` and `rmp.UP`. If both `rmp.DN` and `rmp.UP` are false, indicating adjustment is complete, `PI_last` is updated to `PI`, and `STATUS` is set to `S_IN`.\n    - State 127: Lockout state. If the time difference between the current time and `last` exceeds `T_LOCKOUT`, indicating the lockout time has passed, `STATUS` is set to `S_IN`.\n    - State 128: Initialization complete state. Sets `MU` to true (motor up), `MD` to false (motor down), and `rmp.IN` to 255. If the time difference between the current time and `last` exceeds `T_UP + T_EXT`, indicating the upward movement is complete, `MU` is set to false, `last` is updated to `tx`, and `STATUS` is set to 127.\n    - State 129: Action complete state. If the time difference between the current time and `last` exceeds `T_EXT`, indicating the extension time has passed, `MU` and `MD` are set to false, `last` is updated to `tx`, and `STATUS` is set to 127.\n    - Default State: Sets `MU` and `MD` to false. If `PI` does not equal `PI_last`, indicating a change in position feedback, `PI_last` is updated to `PI`, and `STATUS` is set to 123. If `POS` is 0 and `RU` is true, indicating adjustment to the bottom reference position is needed, `rmp.IN` is set to `R_POS_BOT`, and `STATUS` is set to 124. If `POS` is 255 and `RD` is true, indicating adjustment to the top reference position is needed, `rmp.IN` is set to `R_POS_TOP`, and `STATUS` is set to 124. Otherwise, `STATUS` is set to `S_IN`.\n\n  -- REGION End\n    The function block execution ends, outputting the current state and position. `POS` represents the blinds' current position, `MU` and `MD` indicate the motor's up and down states, and `STATUS` represents the current status code.", "name": "BLIND_CONTROL_S"}