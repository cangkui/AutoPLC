Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  This function is named `FSTRING_TO_BYTE` and is used to convert a string in a specific format into a `BYTE` type value. It supports conversions for binary, octal, hexadecimal, and decimal strings.\n\n- Variable Definitions\n  The code defines one input variable:\n  - `IN`: The input string, with a maximum length of 12.\n\n- Main Logic\n  -- REGION String Format Detection and Conversion\n    This section determines the string format based on its prefix (`2#`, `8#`, `16#`, or no prefix) and converts it to a `BYTE` type value.\n    - If the string starts with `2#`, it is treated as a binary string. The function removes the `2#` prefix and then calls the `BIN_TO_BYTE` function to convert the remaining binary string to `BYTE`.\n    - If the string starts with `8#`, it is treated as an octal string. The function removes the `8#` prefix and then calls the `OCT_TO_BYTE` function to convert the remaining octal string to `BYTE`.\n    - If the string starts with `16#`, it is treated as a hexadecimal string. The function removes the `16#` prefix and then calls the `HEX_TO_BYTE` function to convert the remaining hexadecimal string to `BYTE`.\n    - If the string has none of the above prefixes, it is treated as a decimal string by default. The function calls the `CLEAN` function to remove any non-numeric characters and then calls the `DEC_TO_BYTE` function to convert the remaining decimal string to `BYTE`.\n  -- REGION Return Result\n    The function ultimately returns the converted `BYTE` value.", "name": "FSTRING_TO_BYTE"}