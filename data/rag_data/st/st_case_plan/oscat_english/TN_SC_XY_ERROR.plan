Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  This function block is named `TN_SC_XY_ERROR` and is used to check whether the input values `X` and `Y` fall within the valid range. If either `X` or `Y` is out of range, it returns `TRUE`, indicating an error; otherwise, it returns `FALSE`.\n\n- Variable Definitions\n  The code defines two types of variables:\n  - Input variables: `X` and `Y`, both of integer type, representing the coordinate values to be checked.\n  - Output variable: `TN_SC_XY_ERROR`, a boolean type, representing the check result.\n\n- Main Logic\n  -- REGION Error Check Logic\n     The core logic of this function block is to verify whether the values of `X` and `Y` fall within the specified ranges. The specific rules are as follows:\n     - `Y` must be greater than or equal to 0 and less than or equal to 23.\n     - `X` must be greater than or equal to 0 and less than or equal to 79.\n     If `Y` is less than 0, `X` is less than 0, `Y` is greater than 23, or `X` is greater than 79, then `TN_SC_XY_ERROR` is set to `TRUE`, indicating invalid input values. Otherwise, `TN_SC_XY_ERROR` is set to `FALSE`, indicating valid input values.\n\n- Output Result\n  The output of the function block, `TN_SC_XY_ERROR`, directly reflects the validity of the input values `X` and `Y`. If `TN_SC_XY_ERROR` is `TRUE`, it means the input values are out of range; if it is `FALSE`, it means the input values are within the valid range.", "name": "TN_SC_XY_ERROR"}