Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\nThis is a simple function named `BIT_LOAD_W`, designed to perform bit manipulation on an input `WORD` type data based on an input value, a boolean, and a position. If the boolean is true, it sets the specified bit position to 1; if the boolean is false, it clears the specified bit position to 0.\n\n- Variable Definitions\nThe code defines the following types of variables:\n - Input variables: `IN` (the input `WORD` value), `VAL` (a boolean determining whether to set or clear the bit), and `POS` (an integer representing the bit position to manipulate).\n - Constants: `dat` (a `WORD` type with a value of 1, used for bit manipulation).\n\n- Main Logic\nThe core logic of the function determines how to manipulate the specified bit of the input `WORD` based on the value of `VAL`:\n - If `VAL` is `TRUE`, it uses the `OR` operation and the `SHL` (shift left) function to set the specified bit position to 1. Specifically, it shifts `dat` left by `POS` bits, then performs a bitwise OR with the input `IN`, and assigns the result to `BIT_LOAD_W`.\n - If `VAL` is `FALSE`, it uses the `AND` operation and the `NOT` function to clear the specified bit position to 0. Specifically, it shifts `dat` left by `POS` bits, inverts the result, then performs a bitwise AND with the input `IN`, and assigns the result to `BIT_LOAD_W`.\n\n- Output\nThe return value `BIT_LOAD_W` is a `WORD` type representing the result after bit manipulation. Depending on the values of `VAL` and `POS`, the specified bit of the input `IN` is set to 1 or cleared to 0, while all other bits remain unchanged.", "name": "BIT_LOAD_W"}