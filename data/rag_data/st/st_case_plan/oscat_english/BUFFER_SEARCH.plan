Natural Language Requirements:  

{"variables": [], "instructions": [], "planning": "- Overview\nThis function block, named 'BUFFER_SEARCH', is used to search for a specified string within a byte array. It supports starting the search from a given position and optionally ignoring case sensitivity. If a matching string is found, its starting position is returned; otherwise, -1 is returned.\n\n- Variable Definitions\nThe code defines the following types of variables:\n - Input variables: PT (pointer to the byte array), SIZE (size of the array), STR (the string to search for), POS (starting position for the search), IGN (whether to ignore case).\n - Local variables: ps (pointer to the string), chx (current byte), i (outer loop index), end (end position for the search), k (inner loop index), lx (length of the string).\n\n- Main Logic\n-- REGION Initialization\n   First, the address of the string is obtained, and its length is calculated. Then, the end position for the search is computed to ensure it does not exceed the array bounds. The string length is decremented by 1 for subsequent comparisons.\n\n-- REGION Outer Loop\n   Starting from the specified position (POS), the byte array is traversed until the end position (end). For each position, the inner loop is entered.\n\n-- REGION Inner Loop\n   In the inner loop, each character in the byte array is compared with the corresponding character in the string. If IGN is true, the byte array character is converted to uppercase before comparison. If characters do not match, the inner loop is exited.\n\n-- REGION Match Check\n   If the inner loop completes fully (i.e., k > lx), it indicates that a matching string has been found. In this case, the current outer loop index (i) is returned as the starting position of the match, and the function terminates.\n\n-- REGION No Match Found\n   If the outer loop completes without finding a match, -1 is returned to indicate no match was found.\n\nEND_FUNCTION", "name": "BUFFER_SEARCH"}