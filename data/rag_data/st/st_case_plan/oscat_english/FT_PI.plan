Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  The function block `FT_PI` implements a Proportional-Integral (PI) controller. It calculates the output value by combining proportional and integral terms, and supports integral clamping and reset functions.\n\n- Variable Definitions\n  The code defines the following types of variables:\n  - Input variables: Input value `IN`, proportional gain `KP`, integral gain `KI`, integral lower limit `ILIM_L`, integral upper limit `ILIM_H`, integral enable `IEN`, and reset signal `RST`.\n  - Output variables: Output value `Y` and clamping flag `LIM`.\n  - Internal variables: Integrator instance `integ`, used to perform integration operations.\n\n- Main Logic Section\n  -- REGION Integrator Call\n    Calls the integrator function block `FT_INT` to compute the integral term. The integrator inputs include:\n    - `IN`: Input value, serving as the integrator's input.\n    - `K`: Integral gain `KI`, used to adjust the integral action.\n    - `RUN`: Integral enable `IEN`, controlling whether integration is performed.\n    - `RST`: Reset signal `RST`, used to reset the integrator.\n    - `OUT_MIN` and `OUT_MAX`: Integral lower limit `ILIM_L` and upper limit `ILIM_H`, used to clamp the integrator's output range.\n    The integrator's output is stored in `integ.Out`, and its clamping flag `integ.LIM` is assigned to `LIM`.\n\n  -- REGION Output Calculation\n    Computes the PI controller's output value `Y` using the formula:\n    ```\n    Y = KP * IN + integ.Out\n    ```\n    Where:\n    - `KP * IN` is the proportional term, directly proportional to the input value `IN`.\n    - `integ.Out` is the integral term, calculated by the integrator.\n    The final output `Y` is the sum of the proportional and integral terms.\n\n  -- REGION Clamping Flag Propagation\n    Passes the integrator's clamping flag `integ.LIM` to the output variable `LIM`, indicating whether the integral output has reached the clamping limits.\n\n- Summary\n  This function block implements a simple PI controller by combining proportional and integral terms. The integrator supports clamping and reset functions. The output value `Y` is the sum of the proportional and integral terms, and the clamping flag `LIM` indicates whether the integral output has reached the clamping limits.", "name": "FT_PI"}