Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  The function block is named `RMP_W` and is used to implement a ramp function. It controls the output value to change linearly from 0 to 65535 based on the input signal and provides status indications (e.g., whether it is at a low value, high value, or in transition).\n\n- Variable Definitions\n  The code defines the following types of variables:\n  - Input variables: `SET` (sets the output to the maximum value), `PT` (ramp time), `E` (enable signal), `UP` (controls the direction, rising or falling), `RST` (reset signal).\n  - Output variables: `out` (current output value), `busy` (indicates whether the output is changing), `high` (indicates whether the maximum value is reached), `low` (indicates whether the minimum value is reached).\n  - Internal variables: `rmp` (a structure used to implement the ramp function).\n\n- Main Logic Section\n  -- REGION Ramp Control\n     - Uses the `rmp` structure to implement the ramp function. The input parameters for `rmp` include:\n       - `dir`: Controlled by `UP`, determines the ramp direction (rising or falling).\n       - `E`: Enable signal, controls whether the ramp function is active.\n       - `TR`: Ramp time, provided by `PT`.\n       - `rmp`: Output value, mapped to `out`.\n     - If `RST` is true, the output `out` is reset to 0.\n     - If `SET` is true, the output `out` is set to the maximum value of 65535.\n\n  -- REGION Status Indication\n     - `low`: When `out` is 0, `low` is true.\n     - `high`: When `out` is 65535, `high` is true.\n     - `busy`: When `out` is neither 0 nor 65535 and the enable signal `E` is true, `busy` is true, indicating that the ramp function is active.\n\n- Summary\n  This function block implements the ramp function using the `rmp` structure, supporting both rising and falling directions, and provides reset and direct maximum-value-setting capabilities. The output status is indicated via `low`, `high`, and `busy`, making it easy for external logic to determine the current state.", "name": "RMP_W"}