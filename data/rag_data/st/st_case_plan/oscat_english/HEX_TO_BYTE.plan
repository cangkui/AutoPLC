Natural Language Requirements: {"variables": [], "instructions": [], "planning": "- Overview\n  This is a function block that converts a hexadecimal string into a byte value. It parses the input string character by character, converts each character to its corresponding hexadecimal value based on its ASCII code, and finally combines these values into a single byte.\n\n- Variable Definitions\n  The code defines the following types of variables:\n  - Input variable: HEX (a string of length 5 representing a hexadecimal value).\n  - Internal variables: pt (a pointer to the string), i (loop counter), X (temporary storage for the current character's ASCII value), stop (length of the string).\n\n- Main Logic\n  -- REGION Initialization\n     First, the address of the input string is obtained using `ADR(hex)` and stored in the pointer variable `pt`. Then, the length of the string is obtained using `LEN(hex)` and stored in the variable `stop`.\n\n  -- REGION Character Parsing and Conversion\n     A `FOR` loop is used to iterate through each character in the string. In each iteration:\n     - The ASCII value of the current character is retrieved via the pointer `pt` and stored in variable `X`.\n     - Based on the value of `X`, the character type is determined:\n       - If the character is a digit (ASCII value between 48 and 57), it is converted to its numerical value (`X - 48`).\n       - If the character is an uppercase letter A to F (ASCII value between 65 and 70), it is converted to its numerical value (`X - 55`).\n       - If the character is a lowercase letter a to f (ASCII value between 97 and 102), it is converted to its numerical value (`X - 87`).\n     - The converted value is combined with the previous result using a left shift operation (`SHL`), updating the value of `HEX_TO_BYTE`.\n     - The pointer `pt` is incremented to point to the next character.\n\n  -- REGION Result Output\n     After the loop completes, the value of `HEX_TO_BYTE` represents the byte value corresponding to the input string, which is the output of the function block.\n\n- Summary\n  This function block converts an input hexadecimal string into a byte value by parsing and converting each character sequentially. It supports hexadecimal characters in the form of digits, uppercase letters, and lowercase letters, and efficiently processes the string using pointer operations.", "name": "HEX_TO_BYTE"}