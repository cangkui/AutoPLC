Natural Language Requirements: {"variables": [], "instructions": [], "planning": "- Overview\nThis functional block is named `TICKER` and is used to implement a text display feature similar to 'scrolling subtitles' or a 'typewriter effect.' It gradually displays portions of the input text until the entire text is fully shown. The block uses a timer to control the rhythm of the text display.\n\n- Variable Definitions\nThe code defines the following types of variables:\n  - Input variables: `N` (controls the number of characters to display) and `PT` (the preset time value for the timer).\n  - Input-output variable: `Text` (the input text string).\n  - Output variable: `Display` (the final displayed text string).\n  - Internal variables: `delay` (a timer to control the display rhythm) and `step` (used to track the current character position being displayed).\n\n- Main Logic Section\n-- REGION Text Display Logic\n   - First, check if `N` is less than the length of the input text. If so, proceed with the gradual display logic.\n   - If the timer `delay` is not yet complete (i.e., `delay.Q` is `FALSE`), increment the value of `step` (indicating the current character position being displayed). If `step` exceeds the length of the text, reset it to 1.\n   - Use the `MID` function to extract a substring from the input text `Text` starting at position `N` with a length of `step`, and assign it to the output variable `Display`.\n   - Start the timer `delay`, setting its preset time to `PT`.\n   - If the timer `delay` is complete (i.e., `delay.Q` is `TRUE`), reset the timer (`delay(in := FALSE)`).\n   - If `N` is not less than the length of the input text, directly assign the full `Text` to `Display` without gradual display.\n\n-- REGION Timer Control\n   - The timer `delay` is used to control the rhythm of the text display. When `delay` is active, the block pauses for a period (determined by `PT`) before displaying the next character.\n   - The use of this timer ensures a smoother and more controlled text display effect, avoiding issues where characters appear too quickly or too slowly.\n\n- Output Result\n   - The output variable `Display` will gradually show portions of the input text `Text` until the entire text is fully displayed.\n   - If `N` is not less than the text length, `Display` will directly show the complete `Text`.\n\n- Summary\nThe `TICKER` functional block combines a timer and string manipulation functions to implement a simple yet effective gradual text display feature. It is suitable for scenarios where text needs to be displayed progressively on the screen, such as scrolling subtitles or typewriter effects.", "name": "TICKER"}