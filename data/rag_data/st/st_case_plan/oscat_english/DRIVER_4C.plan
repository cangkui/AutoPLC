Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\nThis code is a function block written in SCL, named 'DRIVER_4C', designed to control a 4-channel output device. It increments the counter `SN` based on the input signal `IN` and reads the corresponding bit status from the array `SX` to output to `Q0` to `Q3`. Additionally, it supports a reset function and an optional timeout feature to reset the counter after a specified duration.\n\n- Variable Definitions\nThe code defines the following types of variables:\n - Input variables: `IN` (input signal), `RST` (reset signal), `Timeout` (timeout duration), `SX` (an array of 8 bytes storing the status of output bits).\n - Output variables: `SN` (current counter value), `Q0` to `Q3` (status of the 4 output channels).\n - Internal variables: `off` (TON timer for timeout functionality), `edge` (used to detect the rising edge of the `IN` signal).\n\n- Main Logic\n-- REGION Counter Logic:\n    - If `RST` (reset signal) is true, or the `off` timer times out (`off.Q` is true), the counter `SN` is reset to 0.\n    - If `IN` is true and `edge` is false (i.e., a rising edge of `IN` is detected), the counter `SN` is incremented. If `SN` exceeds 7 or `SX[SN]` is 0, `SN` is reset to 0.\n    - The `edge` variable is updated to track the state of the `IN` signal.\n\n-- REGION Output Logic:\n    - If `SN` is greater than 0, the corresponding byte from the array `SX` is read, and bits 0 to 3 are output to `Q0` to `Q3`, respectively.\n    - If `SN` is 0, all outputs `Q0` to `Q3` are set to false.\n\n-- REGION Timeout Logic:\n    - If `Timeout` is greater than 0 seconds, the `off` timer is activated. The timer input is `SN > 0`, meaning it starts counting when `SN` is greater than 0, with the timeout duration set to `Timeout`. If the timer times out, `off.Q` becomes true, triggering a counter reset.\n\n- Summary\nThis function block increments the counter upon detecting the rising edge of the input signal and reads output states from a predefined array based on the counter value. It also supports reset and timeout features to ensure the counter resets under specific conditions. The output logic dynamically updates the status of the 4 output channels according to the counter value.", "name": "DRIVER_4C"}