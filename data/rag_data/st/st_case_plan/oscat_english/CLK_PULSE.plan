Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  The function block `CLK_PULSE` is used to generate a pulse signal. The pulse period is defined by the input `PT`, and the number of pulses is defined by the input `N`. The block also provides outputs for pulse count and operational status.\n\n- Variable Definitions\n  The following types of variables are defined in the code:\n  - Input variables: `PT` represents the pulse period, `N` represents the number of pulses, and `RST` represents the reset signal.\n  - Output variables: `Q` represents the pulse output, `CNT` represents the current pulse count, and `RUN` indicates whether the function block is active.\n  - Internal variables: `tx` stores the current time, `tn` stores the next pulse timing point, and `init` flags whether the block has been initialized.\n\n- Main Logic\n  -- REGION Initialization and Reset Handling\n    The block first retrieves the current time and stores it in `tx`, while initializing `Q` to `FALSE` (no pulse output). The value of `RUN` is determined by `CNT < N`, indicating whether the block is active. If the block is uninitialized or receives a reset signal `RST`, it performs initialization: resets `CNT` to 0, calculates the next pulse timing point `tn`, and sets `RUN` to `FALSE`.\n\n  -- REGION Pulse Generation\n    If the block is initialized, not reset, and the current pulse count `CNT` is less than `N` (or `N` is 0, indicating infinite pulses), and the difference between the current time `tx` and the next pulse timing point `tn` is greater than or equal to the pulse period `PT`, a pulse is generated: `CNT` increments by 1, `Q` is set to `TRUE`, and the next pulse timing point `tn` is updated.\n\n  -- REGION Output Update\n    The outputs `Q`, `CNT`, and `RUN` are updated in real-time based on the above logic. `Q` indicates whether a pulse is currently being output, `CNT` tracks the number of pulses generated, and `RUN` shows if the block is still active.\n\n- Summary\n  This function block achieves pulse signal generation and control through time calculations and state management. It supports both finite and infinite pulse modes and provides a reset function to restart the pulse generation process.", "name": "CLK_PULSE"}