Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  This code defines a function named `RDM2`, which is used to generate a random integer within a specified range. The function generates a pseudo-random number based on the input value `last` and maps it to a range between `low` and `high`.\n\n- Variable Definitions\n  The code defines three types of input variables:\n  - `last`: An integer value serving as the seed for random number generation.\n  - `low`: The lower bound of the random number range.\n  - `high`: The upper bound of the random number range.\n\n- Main Logic\n  -- REGION Random Number Generation\n    The core logic of the function is as follows:\n    1. **Seed Processing**: First, the input `last` value is multiplied by the mathematical constant `PI`, and then the fractional part is extracted using the `FRACT` function. The purpose of this step is to generate a random seed between 0 and 1.\n    2. **Random Number Generation**: The `RDM` function is used to generate a pseudo-random number based on the fractional part obtained in the previous step. The `RDM` function returns a floating-point number between 0 and 1.\n    3. **Range Mapping**: The generated random number is multiplied by `(high - low + 1)`, and then truncated to an integer using the `TRUNC` function, mapping it to the range between `low` and `high`.\n    4. **Type Conversion**: Finally, the result is converted to an integer type using `DINT_TO_INT` and assigned to the output variable `RDM2`.\n\n  Summary: Through mathematical operations and a random number generator, this function converts the input `last` value into a random integer within the specified range.", "name": "RDM2"}