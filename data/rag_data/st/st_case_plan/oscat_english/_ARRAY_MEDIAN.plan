Natural Language Requirements: {"variables": [], "instructions": [], "planning": "- Overview\nThis code implements a function named `_ARRAY_MEDIAN`, which calculates the median of a real number array. The median is the value at the middle position of the array. If the array length is even, the median is the average of the two middle values.\n\n- Variable Definitions\nThe code defines the following types of variables:\n - Input variables: `pt` is a pointer to a real number array, and `size` is the size of the array.\n - Internal variables: `i` and `stop` are used as auxiliary indices for calculating the median.\n\n- Main Logic\n-- REGION Array Sorting\n   First, the `_ARRAY_SORT` function is called to sort the array. A sorted array makes it easier to find the median.\n-- REGION Calculating the Median\n   1. Calculate the `stop` value, which is the array size divided by 2 minus 1. This value determines the position of the median.\n   2. Check if `stop` is even:\n      - If even, the median is the value at the middle position of the array, i.e., `pt^[SHR(stop,1)]`.\n      - If odd, the median is the average of the two middle values, i.e., `(pt^[i] + pt^[i+1]) * 0.5`, where `i` is the result of dividing `stop` by 2.\n-- REGION Returning the Result\n   Finally, the calculated median is returned as the function's output.", "name": "_ARRAY_MEDIAN"}