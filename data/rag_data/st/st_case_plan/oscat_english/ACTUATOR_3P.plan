Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\nThis code is a function block written in SCL, named 'ACTUATOR_3P', designed to control a three-position actuator. It manages the actuator's position via input signals and handles logic for calibration, diagnostics, and error detection.\n\n- Variable Definitions\nThe code defines the following types of variables:\n - Input variables: IN (input signal), TEST (test mode), ARE (enable signal), END_POS (end position signal), T_RUN (runtime), T_EXT (extension time), T_CAL (calibration time), T_DIAG (diagnostic time), SWITCH_AVAIL (switch availability signal)\n - Input/output variables: ARX (actuator request signal)\n - Output variables: OUT1 (output 1), OUT2 (output 2), POS (position), ERROR (error flag), STATUS (status)\n - Internal variables: ramp (ramp function instance), tx (current time), next_cal (next calibration time), next_diag (next diagnostic time), last (last time), start (start time)\n\n- Main Logic Section\n-- REGION Initialization\n   First, the current time is converted to the TIME type and stored in the `tx` variable. If test mode (TEST) is true, the status is set to 103, the start time is recorded, and the actuator request signal (ARX) is set to true.\n\n-- REGION State Machine\n   The state machine executes different logic based on the current status (`status`):\n   - Status 0:\n     If the enable signal (ARE) is true and the actuator request signal (ARX) is false, the status is set to 103, the start time is recorded, and the actuator request signal (ARX) is set to true. This is the initial state for starting actuator operation.\n   - Status 100:\n     This is the normal operation state. First, it checks if diagnostics or calibration are needed:\n     - If the diagnostic time (T_DIAG) is greater than 0 and the current time exceeds the next diagnostic time (next_diag), and the enable signal (ARE) is true while the actuator request signal (ARX) is false, the status is set to 103, the start time is recorded, and the actuator request signal (ARX) is set to true. This initiates the diagnostic process.\n     - If the calibration time (T_CAL) is greater than 0 and the current time exceeds the next calibration time (next_cal), and the enable signal (ARE) is true while the actuator request signal (ARX) is false, the output signals (OUT1 and OUT2) and the ramp function input value (ramp.IN) are set based on the current position (pos), and the status is set to 101 with the start time recorded. This initiates the calibration process.\n     - Otherwise, if both output signals (OUT1 and OUT2) are false, the next calibration time (next_cal) is updated, and the input signal (IN) is passed to the ramp function input value (ramp.IN). This is the normal operation logic.\n   - Status 101:\n     This is a state during the calibration process. First, it checks if the current time minus the start time is less than the extension time (T_EXT). If true, the next calibration time (next_cal) is updated.\n     If both the switch availability signal (SWITCH_AVAIL) and the end position signal (END_POS) are true, the status is set to 100, and the actuator request signal (ARX) is cleared. This indicates the calibration process is complete.\n     If the current time minus the start time exceeds the extension time (T_EXT) plus the runtime (T_RUN), the error flag (ERROR) is set based on the switch availability signal (SWITCH_AVAIL), and the actuator request signal (ARX) is cleared. This indicates a calibration timeout.\n   - Status 103:\n     This is a state during the diagnostic process. First, it checks if the current time minus the start time is less than the extension time (T_EXT). If true, the error flag (ERROR) is cleared, the ramp function's rise and fall times (ramp.TR and ramp.TF) are set, and the output signals (OUT1 and OUT2) and ramp function input value (ramp.IN) are configured. This is the initial phase of diagnostics.\n     If both the switch availability signal (SWITCH_AVAIL) and the end position signal (END_POS) are true, the ramp function's rise time (ramp.TR) is set, and the status is updated to 104. This marks the intermediate phase of diagnostics.\n     If the current time minus the start time exceeds the extension time (T_EXT) plus the runtime (T_RUN), the error flag (ERROR) is set based on the switch availability signal (SWITCH_AVAIL), the status is set to 104, and the start time is recorded. This indicates a diagnostic timeout.\n   - Status 104:\n     This is the final state of the diagnostic process. First, it checks if the current time minus the start time is less than the extension time (T_EXT). If true, the output signals (OUT1 and OUT2) and ramp function input value (ramp.IN) are set, and the next diagnostic time (next_diag) is updated. This is the concluding phase of diagnostics.\n     If both the switch availability signal (SWITCH_AVAIL) and the end position signal (END_POS) are true, the ramp function's rise time (ramp.TR) is set, the error flag (ERROR) is configured based on the difference between the ramp function's rise and fall times, the status is set to 100, the actuator request signal (ARX) is cleared, and the next calibration time (next_cal) is updated. This indicates successful diagnostics.\n     If the current time minus the start time exceeds the extension time (T_EXT) plus the runtime (T_RUN), the error flag (ERROR) is set based on the switch availability signal (SWITCH_AVAIL), the status is set to 100, the actuator request signal (ARX) is cleared, and the next calibration time (next_cal) is updated. This indicates a diagnostic timeout.\n\n-- REGION Ramp Function Processing\n   The ramp function (ramp) is called, and its output value (ramp.OUT) is assigned to the position variable (POS). If the status is 100, the ramp function's rise and fall signals (ramp.UP and ramp.DN) are assigned to the output signals (OUT1 and OUT2). This controls the actuator's position during normal operation.\n\n-- REGION Position Update\n   If both the switch availability signal (SWITCH_AVAIL) and the end position signal (END_POS) are true, the position value is updated based on the current position (POS), and the next calibration time (next_cal) is updated. This ensures position information is refreshed when the switch is available and the actuator reaches the end position.\n\n-- REGION Time Update\n   Finally, the current time (tx) is assigned to the last time (last) variable. This ensures correct time difference calculations in the next cycle.", "name": "ACTUATOR_3P"}