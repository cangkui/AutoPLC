Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\nThis code implements a function called 'REPLACE_ALL', designed to replace all matching substrings within a string. It takes the input string `str`, the source string `src` (the part to be replaced), and the replacement string `rep` (the part used for replacement). The function iterates through the input string, finds all instances of the source string, and replaces them with the replacement string, ultimately returning the modified string.\n\n- Variable Definitions\nThe code defines the following types of variables:\n - Input Variables:\n   - `str`: The input string, which is the original string requiring replacement operations.\n   - `src`: The source string, representing the substring to be replaced.\n   - `rep`: The replacement string, representing the string used to substitute `src`.\n - Internal Variables:\n   - `pos`: Stores the position of the source string within the input string.\n   - `lp`: Stores the length of the replacement string.\n   - `lx`: Stores the length of the source string.\n\n- Main Logic\n -- REGION Initialization:\n    The function first assigns the input string `str` to the output variable `REPLACE_ALL` as the initial value. It then calculates the length of the source string `src` and stores it in `lx`, and the length of the replacement string `rep` is stored in `lp`.\n -- REGION Search and Replace:\n    The function uses the `FINDP` function to locate the position of the source string `src` within `REPLACE_ALL`, storing the result in `pos`. If `pos` is greater than 0, indicating a match is found, the `REPLACE` function is used to substitute it with `rep`. After replacement, the value of `REPLACE_ALL` is updated, and the search continues for the next matching source string. The search starts from the position `pos + lp` to avoid redundant replacements. This loop continues until the `FINDP` function can no longer find a matching source string (i.e., `pos` becomes 0).\n -- REGION Return Result:\n    Once all matching source strings have been replaced, the function returns the final `REPLACE_ALL` string.\n\n- Summary\nThis function employs a loop-based search-and-replace approach to replace all matching substrings within a string. It is suitable for scenarios requiring batch string replacements, such as text processing or data cleaning.", "name": "REPLACE_ALL"}