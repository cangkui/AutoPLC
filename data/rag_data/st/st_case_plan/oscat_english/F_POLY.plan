Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\nThis code defines a function named `F_POLY` for calculating the value of a 7th-degree polynomial. The polynomial takes the form:  \n`F_POLY = c[7] * x^7 + c[6] * x^6 + c[5] * x^5 + c[4] * x^4 + c[3] * x^3 + c[2] * x^2 + c[1] * x + c[0]`  \nThe function employs Horner's method (nested multiplication) to efficiently compute the polynomial's value.\n\n- Variable Definitions\nThe code defines two types of variables:\n  - Input variables: `X` is the independent variable of the polynomial, of type `REAL`; `C` is an array containing 8 `REAL` elements, representing the polynomial's coefficients.\n  - Output variable: `F_POLY` is the function's return value, of type `REAL`, representing the computed result of the polynomial at `X`.\n\n- Main Logic Section\n  -- REGION Polynomial Calculation\n    This region uses Horner's method to compute the polynomial's value. Horner's method reduces computational effort through nested multiplication, following this formula:  \n    `F_POLY := ((((((( c[7] * x + c[6] ) * x + c[5] ) * x + c[4] ) * x + c[3] ) * x + c[2] ) * x + c[1] ) * x + c[0] )`  \n    The specific steps are:\n    1. Starting with the highest-degree coefficient `c[7]`, multiply by `X` and add the next coefficient.\n    2. Repeat the above step until the constant term `c[0]` is added.\n    3. The final result is stored in `F_POLY` and returned.", "name": "F_POLY"}