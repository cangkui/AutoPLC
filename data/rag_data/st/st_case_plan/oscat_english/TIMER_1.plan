Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  The function block `TIMER_1` implements a timer logic to determine whether the current time falls within a specified time range and meets the specified day-of-week condition. If the conditions are satisfied, the output `Q` is set to `TRUE`; otherwise, it is `FALSE`. Additionally, it calculates and outputs the stop time `stop`.\n\n- Variable Definitions\n  - Input Variables:\n    - `E`: Enable signal, controls whether the function block executes.\n    - `DTI`: Current date and time (DateTime type).\n    - `START`: Start time (Time of Day type).\n    - `DURATION`: Duration (Time type).\n    - `DAY`: Day-of-week condition (BYTE type), where each bit represents a day (e.g., `2#1111111` means every day).\n  - Output Variables:\n    - `Q`: Output signal, indicating whether the current time meets the specified conditions.\n    - `stop`: Stop time (Time type), representing `START` plus `DURATION`.\n\n- Main Logic\n  -- REGION Main Logic\n    1. **Enable Check**: First, check the enable signal `E`. If `E` is `TRUE`, proceed with the logic; otherwise, set output `Q` to `FALSE` directly.\n    2. **Calculate Stop Time**:\n       - Convert `START` to `TIME` type and add `DURATION` to get `stop`.\n       - If `stop` exceeds 24 hours, subtract 24 hours to ensure it stays within a single day.\n    3. **Time Range Check**:\n       - Use the `OSCAT_BASIC.TIMECHECK` function to verify if the current time (`DT_TO_TOD(DTI)`) is between `START` and `stop`. If true, return `TRUE`.\n    4. **Day-of-Week Check**:\n       - Use `OSCAT_BASIC.DAY_OF_WEEK` to get the day of the week for the current date (`DT_TO_DATE(DTI)`).\n       - Map the day of the week to the corresponding bit in `DAY` using bitwise operation `SHR(BYTE#128, ...)` and perform a bitwise AND with `DAY`. If the result is greater than `0`, the day-of-week condition is met.\n    5. **Output Result**:\n       - If both time range and day-of-week conditions are satisfied, set `Q` to `TRUE`; otherwise, set it to `FALSE`.\n    6. **Stop Time Output**:\n       - Output the calculated `stop` to the `stop` variable.\n\n  -- REGION Disabled Logic\n    If the enable signal `E` is `FALSE`, directly set `Q` to `FALSE` and skip all calculation logic.", "name": "TIMER_1"}