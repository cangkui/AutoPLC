Natural Language Requirements:  
```json
{"variables": [], "instructions": [], "planning": "- Overview\n  The function block `M_TX` is designed to measure the duty cycle (DC), frequency (F), high-level duration (TH), low-level duration (TL), and total elapsed time (ET) of an input signal. It calculates these values by detecting the rising and falling edges of the input signal and resets all values upon a reset signal or when the maximum time limit is reached.\n\n- Variable Definitions\n  The code defines the following types of variables:\n  - Input variables: `in` (input signal), `tmax` (maximum runtime, default: 4 hours), `rst` (reset signal).\n  - Output variables: `TH` (high-level time), `TL` (low-level time), `DC` (duty cycle), `F` (frequency), `ET` (total elapsed time of the signal).\n  - Internal variables: `edge` (flag for detecting signal transitions), `start` (time of rising edge), `stop` (time of falling edge), `tx` (current time), `rise` (rising edge flag), `fall` (falling edge flag), `startup` (initialization flag).\n\n- Main Logic\n  -- REGION Reset Logic\n     When the reset signal `rst` is TRUE, or the total elapsed time `ET` exceeds `tmax`, the function block resets all internal states and output values. Specific actions include:\n     - Setting `rise` and `fall` flags to `FALSE`, indicating no detected edges.\n     - Setting `startup` to `FALSE`, requiring reinitialization.\n     - Resetting `TH`, `TL`, `DC`, `F`, and `ET` to default values (0 or `t#0ms`).\n\n  -- REGION Initialization Logic\n     If the function block is uninitialized (`startup` is `FALSE`), it sets `edge` to the current input signal value (`in`) and marks `startup` as `TRUE` to complete initialization.\n\n  -- REGION Time Capture Logic\n     Uses `DWORD_TO_TIME(T_PLC_MS())` to fetch the current PLC time (converted to `TIME` type) and stores it in `tx`.\n\n  -- REGION Edge Detection and Calculation Logic\n     When the input signal `in` changes (detected via `in XOR edge`), it updates `edge` and performs the following based on edge type:\n     - For a rising edge (`in` is `TRUE`):\n       - Records current time `tx` into `start` (high-level start).\n       - Sets `rise` to `TRUE` (rising edge detected).\n       - If a prior falling edge was detected (`fall` is `TRUE`), calculates low-level time `TL` as `start - stop`.\n       - If both `TH` and `TL` are >0, computes duty cycle `DC` (ratio of `TH` to `TH + TL`) and frequency `F` (`1000 / (TH + TL)`).\n     - For a falling edge (`in` is `FALSE`):\n       - Records current time `tx` into `stop` (low-level start).\n       - Sets `fall` to `TRUE` (falling edge detected).\n       - If a prior rising edge was detected (`rise` is `TRUE`), calculates high-level time `TH` as `stop - start`.\n       - Computes `DC` and `F` as above if both `TH` and `TL` are >0.\n\n  -- REGION Total Runtime Calculation\n     If a rising edge is detected (`rise` is `TRUE`), calculates total runtime `ET` as current time `tx` minus signal start time `start`.\n\n- Summary\n  This function block monitors input signal edges to compute high/low durations, duty cycle, frequency, and total runtime. It supports manual reset and auto-reset at maximum runtime, making it suitable for real-time signal analysis and monitoring applications.", "name": "M_TX"}
```