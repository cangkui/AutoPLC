Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  This code defines a function named `F_TO_PT` that converts frequency (in Hertz) to period time (in milliseconds). The function takes a real-type input parameter `F` representing frequency and returns a `TIME`-type value representing the period time.\n\n- Variable Definitions\n  The code defines one input variable:\n  - `F`: A real-type variable representing frequency, measured in Hertz (Hz).\n\n- Main Logic\n  -- REGION Logical Calculation\n    The core logic of the function involves converting frequency to period time. The steps are as follows:\n    1. Calculate the reciprocal of the frequency to get the period time (in seconds): `1.0 / F`.\n    2. Convert the period time to milliseconds: `1.0 / F * 1000.0`.\n    3. Convert the floating-point result to a double-word (DWORD) type: `REAL_TO_DWORD(1.0 / F * 1000.0)`.\n    4. Convert the DWORD type to `TIME` type: `DWORD_TO_TIME(REAL_TO_DWORD(1.0 / F * 1000.0))`.\n    Finally, the function returns the converted period time.\n\n- Example\n  Suppose the input frequency is `F = 2.0 Hz`. The calculation proceeds as follows:\n  1. `1.0 / 2.0 = 0.5` (period time is 0.5 seconds).\n  2. `0.5 * 1000.0 = 500.0` (period time is 500 milliseconds).\n  3. `REAL_TO_DWORD(500.0)` converts 500.0 to a DWORD type.\n  4. `DWORD_TO_TIME(...)` converts the DWORD type to `TIME` type.\n  The function ultimately returns `T#500ms`.", "name": "F_TO_PT"}