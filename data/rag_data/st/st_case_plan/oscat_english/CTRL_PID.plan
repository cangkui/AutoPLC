Natural Language Requirements:  
```json
{
  "variables": [],
  "instructions": [],
  "planning": "- Overview\n  The function block `CTRL_PID` implements a PID controller with manual/auto switching and output limiting. It achieves PID control and output processing by calling two sub-function blocks: `FT_PIDWL` and `CTRL_OUT`. Inputs include the actual value, setpoint, deviation, offset, manual input value, manual mode, reset signal, and PID parameters. Outputs include the control output, deviation value, and limit flag.\n\n- Variable Definitions\n  The code defines the following types of variables:\n  - Input variables: Actual value (`ACT`), setpoint (`SET`), deviation (`SUP`), offset (`OFS`), manual input value (`M_I`), manual mode (`MAN`), reset signal (`RST`), proportional gain (`KP`), integral time (`TN`), derivative time (`TV`), output lower limit (`LL`), and output upper limit (`LH`).\n  - Output variables: Control output (`Y`), deviation value (`DIFF`), and limit flag (`LIM`).\n  - Internal variables: PID controller instance (`pid`) and output controller instance (`co`).\n\n- Main Logic Section\n  -- REGION Deviation Calculation\n    First, the `CTRL_IN` function is called to calculate the deviation between the setpoint and actual value, storing the result in the `DIFF` variable. This deviation value serves as the input to the PID controller.\n  -- REGION PID Control\n    Next, the `FT_PIDWL` function block (`pid`) is called for PID control. Input parameters include the deviation value (`in`), proportional gain (`kp`), integral time (`tn`), derivative time (`tv`), output lower limit (`lim_l`), output upper limit (`lim_h`), and reset signal (`rst`). The PID controller's output is stored in `pid.Y`.\n  -- REGION Output Processing\n    Then, the `CTRL_OUT` function block (`co`) processes the PID controller's output. Input parameters include the PID output (`ci`), offset (`OFFSET`), manual input value (`man_in`), output lower limit (`lim_l`), output upper limit (`lim_h`), and manual mode (`MANUAL`). The output controller's result is stored in `co.Y`, and the limit flag is stored in `co.LIM`.\n  -- REGION Output Assignment\n    Finally, the output controller's result is assigned to the function block's output variable `Y`, and the limit flag is assigned to `LIM`.",
  "name": "CTRL_PID"
}
```