Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\nThis functional block is named `TMAX` and is used to implement a timer function. When the input signal `IN` is true, the timer starts counting, and upon reaching the preset time `PT`, it triggers the output signals `Q` and `Z`. `Q` indicates that the timer is running, while `Z` indicates that the timer has completed its countdown.\n\n- Variable Definitions\nThe code defines the following types of variables:\n - Input variables: `IN` (signal to start the timer), `PT` (preset timer duration).\n - Output variables: `Q` (signal indicating the timer is running), `Z` (signal indicating the timer has completed).\n - Internal variables: `tx` (current time), `start` (timer start time), `last_in` (state of the `IN` signal from the previous cycle).\n\n- Main Logic Section\n-- REGION Main Logic\n   - First, the current time is retrieved and stored in the variable `tx`.\n   - The output `Z` is initialized to `FALSE`, indicating the timer has not yet completed.\n   - If `IN` is `FALSE`, the timer is stopped, and `Q` is set to `FALSE`.\n   - If `IN` is `TRUE` and the previous cycle's `IN` was `FALSE` (i.e., a rising edge of the `IN` signal), the timer is started, `Q` is set to `TRUE`, and the current time is recorded as the timer's start time `start`.\n   - If the current time `tx` minus the start time `start` is greater than or equal to the preset time `PT`, and `Q` is `TRUE`, the timer is stopped, `Q` is set to `FALSE`, and `Z` is set to `TRUE`, indicating the timer has completed.\n   - Finally, `last_in` is updated to the current state of the `IN` signal for edge detection in the next cycle.", "name": "TMAX"}