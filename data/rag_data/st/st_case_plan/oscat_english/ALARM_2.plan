Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\nThis is a function block named `ALARM_2`, designed to implement a dual-alarm logic based on the input value `X`. By comparing `X` with four thresholds (`LO_1`, `HI_1`, `LO_2`, `HI_2`) and considering the hysteresis value `HYS`, it generates four Boolean output signals representing the alarm states for low threshold 1, high threshold 1, low threshold 2, and high threshold 2, respectively.\n\n- Variable Definitions\n  - Input variables: `X` (value to be compared), `LO_1` (low threshold 1), `HI_1` (high threshold 1), `LO_2` (low threshold 2), `HI_2` (high threshold 2), `HYS` (hysteresis value).\n  - Output variables: `Q1_LO` (alarm state for low threshold 1), `Q1_HI` (alarm state for high threshold 1), `Q2_LO` (alarm state for low threshold 2), `Q2_HI` (alarm state for high threshold 2).\n  - Internal variable: `tmp` (temporary value used during calculations).\n\n- Main Logic\n  - Step 1: Calculate the temporary value `tmp` using the formula `tmp := X - Hys * 0.5`. This introduces hysteresis to prevent frequent alarm state toggling near threshold boundaries.\n  - Step 2: Compare `tmp` with the low and high thresholds and update alarm states:\n    - If `tmp > LO_1`, clear the low threshold 1 alarm (`Q1_LO := FALSE`).\n    - If `tmp > LO_2`, clear the low threshold 2 alarm (`Q2_LO := FALSE`).\n    - If `tmp > HI_1`, trigger the high threshold 1 alarm (`Q1_HI := TRUE`).\n    - If `tmp > HI_2`, trigger the high threshold 2 alarm (`Q2_HI := TRUE`).\n  - Step 3: Update the temporary value `tmp` using the formula `tmp := tmp + hys`. This applies hysteresis in the opposite direction.\n  - Step 4: Compare `tmp` with the low and high thresholds again and update alarm states:\n    - If `tmp < LO_1`, trigger the low threshold 1 alarm (`Q1_LO := TRUE`).\n    - If `tmp < LO_2`, trigger the low threshold 2 alarm (`Q2_LO := TRUE`).\n    - If `tmp < HI_1`, clear the high threshold 1 alarm (`Q1_HI := FALSE`).\n    - If `tmp < HI_2`, clear the high threshold 2 alarm (`Q2_HI := FALSE`).\n\n- Summary\nThis function block implements dual-alarm logic for the input value `X` by incorporating the hysteresis value `HYS`. The hysteresis effect helps avoid frequent alarm state changes near thresholds, thereby improving system stability. The output signals `Q1_LO`, `Q1_HI`, `Q2_LO`, and `Q2_HI` indicate the alarm states for low threshold 1, high threshold 1, low threshold 2, and high threshold 2, respectively.", "name": "ALARM_2"}