Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\nThis functional block, named `LENGTH`, is designed to convert length values between different units. It accepts inputs in various length units and outputs the converted values in other units.\n\n- Variable Definitions\nThe code defines the following types of variables:\n - Input variables: `m` (meters), `p` (picas), `in` (inches), `ft` (feet), `yd` (yards), `mile` (miles), `sm` (nautical miles), `fm` (fathoms).\n - Output variables: `Ym` (meters), `Yp` (picas), `Yin` (inches), `Yft` (feet), `Yyd` (yards), `Ymile` (miles), `Ysm` (nautical miles), `Yfm` (fathoms).\n\n- Main Logic Section\n-- REGION Main Logic:\n    This section contains the core logic for unit conversion. First, the input length values are converted to meters (`Ym`), which serves as the basis for all conversions. The conversion formula is as follows:\n   ```plaintext\n   Ym := m + p * 0.000376065 + in * 0.0254 + ft * 0.3048 + yd * 0.9144 + mile * 1609.344 + sm * 1852.0 + fm * 1.829;\n   ```\n   Then, based on the converted meter value, the length values for other units are calculated:\n   ```plaintext\n   Yp := Ym * 2659.11478068951;  // meters to picas\n   Yin := Ym * 39.37007874016;   // meters to inches\n   Yft := Ym * 3.28083989501;    // meters to feet\n   Yyd := Ym * 1.09361329834;    // meters to yards\n   Ymile := Ym * 0.00062137119;  // meters to miles\n   Ysm := Ym * 0.00053995680;    // meters to nautical miles\n   Yfm := Ym * 0.54674685621;    // meters to fathoms\n   ```\n   Through these calculations, the functional block achieves conversions between multiple length units.", "name": "LENGTH"}