Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  The function block is named `RTC_MS` and is designed to implement a Real-Time Clock (RTC) with millisecond precision. It allows users to set an initial time and automatically updates the current time based on the PLC's system time while providing millisecond-level accuracy.\n\n- Variable Definitions\n  The code defines the following types of variables:\n  - Input variables: `SET` (set signal), `SDT` (set date and time), `SMS` (set millisecond value).\n  - Output variables: `XDT` (current date and time), `XMS` (current millisecond value).\n  - Internal variables: `init` (initialization flag), `last` (last recorded system time), `Tx` (current system time).\n\n- Main Logic\n  -- REGION Initialization and Setting\n     - The function block first retrieves the current PLC system time (in milliseconds) using the `T_PLC_MS()` function and stores it in the variable `Tx`.\n     - If the input `SET` is true or the function block has not been initialized (`init` is false), the initialization logic is executed:\n       - The `init` flag is set to `TRUE`, indicating the function block is initialized.\n       - The output variables `XDT` and `XMS` are set to the input values `SDT` and `SMS`, respectively.\n     - If the function block is already initialized and `SET` is false, the time update logic is executed:\n       - The difference between the current system time and the last recorded time (`last`) is calculated and added to `XMS`.\n       - If `XMS` exceeds 1000 milliseconds (i.e., 1 second), `XDT` is incremented by 1 second, and `XMS` is reduced by 1000 milliseconds.\n  -- REGION Record Last Time\n     - At the end of each logic execution, the current system time `Tx` is stored in the variable `last` to calculate the time difference in the next cycle.\n\n- Detailed Logic Explanation\n  - **Initialization and Setting**:\n    - The initialization logic is executed only during the first call or when the `SET` signal is true. This ensures users can reset the time at any time using the `SET` signal.\n    - During initialization, the output time `XDT` and `XMS` are directly set to the input values `SDT` and `SMS`.\n  - **Time Update**:\n    - After initialization, the time update logic is based on the PLC's system time.\n    - By calculating the difference between the current system time and the last recorded time, the function block accurately updates the millisecond value `XMS`.\n    - If `XMS` exceeds 1000 milliseconds, it is converted to seconds, and the date and time `XDT` are updated accordingly.\n  - **Record Last Time**:\n    - At the end of each cycle, the current system time `Tx` is recorded in the `last` variable to calculate the time difference in the next cycle.\n\n- Output Results\n  - `XDT`: Current date and time, automatically updated based on initialization settings and system time.\n  - `XMS`: Current millisecond value, automatically updated based on system time, and reset when exceeding 1000 milliseconds.\n\n- Summary\n  This function block implements a simple real-time clock with millisecond precision. Users can set the initial time via the `SET` signal, and the function block will automatically update the current time based on the PLC's system time while handling the conversion from milliseconds to seconds.", "name": "RTC_MS"}