Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  The function block `DLOG_FILE_TO_SMTP` is designed to send log files to a specified mail server via the SMTP protocol. It handles file reading, SMTP email transmission, and error management. The core logic of the function block is controlled by a state machine that manages file reading and email sending, while also supporting retry mechanisms and error detection.\n\n- Variable Definitions\n  The code defines the following categories of variables:\n  - Input/Output Variables: `SERVER` (mail server address), `MAILFROM` (sender address), `MAILTO` (recipient address), `SUBJECT` (email subject), `BODY` (email body), `X` (log file data).\n  - Input Variables: `FILE_DELETE` (whether to delete the file), `TIMEOUT` (timeout duration), `DTI` (date-time information), `DTI_OFFSET` (date-time offset), `RETRY` (retry count), `RETRY_TIME` (retry interval), `DNS_IP4` (DNS IP address).\n  - Output Variables: `DONE` (completion flag), `BUSY` (busy flag), `ERROR_C` (error code), `ERROR_T` (error type).\n  - Internal Variables: `UCBD` (circular buffer data), `UCB` (circular buffer instance), `SMTP_CLIENT` (SMTP client instance), `WT_1` (timer instance), `ftrig_old` (previous file trigger flag), `files` (file list), `step` (state machine step), `smtp_busy` (SMTP busy flag), `smtp_done` (SMTP completion flag), `cnt` (retry counter).\n\n- Main Logic\n  -- REGION File Trigger Handling\n     When a new file is detected (via the rising edge of `X.NEW_FILE_RTRIG`), the new file is added to the circular buffer. The steps are as follows:\n     - Set `UCBD.D_HEAD` to 1, indicating the operation starts at the buffer head.\n     - Set `UCBD.D_MODE` to 1, indicating data is being added to the buffer.\n     - Assign `X.NEW_FILE` (new filename) to `UCBD.D_STRING`.\n     - Call the `UCB` function block to add the data to the circular buffer.\n     - Store the previous trigger state in `ftrig_old` to detect the rising edge.\n\n  -- REGION State Machine Control\n     The state machine controls the entire process via the `step` variable, divided into multiple steps:\n     - **Step 00**:\n       - Check if the circular buffer contains data (`UCBD.BUF_COUNT > 0`) and if the SMTP client is idle (`smtp_busy = FALSE`).\n       - If conditions are met, set `UCBD.D_MODE` to 12 to read data from the buffer.\n       - Call the `UCB` function block to read the file list and store it in `files`.\n       - If `FILE_DELETE` is true, append `;#DEL#` to the filename to mark it for deletion.\n       - Initialize the retry counter `cnt` with the value of `RETRY`.\n       - Proceed to Step 10.\n\n     - **Step 10**:\n       - Check if the SMTP client is idle (`smtp_busy = FALSE`).\n       - If `smtp_done` is true, indicating successful email transmission, return to Step 00.\n       - If `smtp_done` is false, proceed to Step 20 for retry.\n\n     - **Step 20**:\n       - Check if the timer `WT_1` has timed out (`WT_1.Q` is true).\n       - If timed out, decrement the retry counter `cnt`.\n       - If `RETRY` is 0, indicating unlimited retries, return to Step 10.\n       - If `cnt >= 0`, indicating retries remain, return to Step 10.\n       - If `cnt < 0`, indicating retries exhausted, return to Step 00 to end the process.\n\n  -- REGION SMTP Email Transmission\n     In Steps 10 and 20, the `SMTP_CLIENT` function block is called to send the email. The steps are as follows:\n     - Set `ACTIVATE` to `BUSY` to activate the SMTP client.\n     - Pass configuration parameters, including `TIMEOUT` (timeout duration), `DTI` (date-time info), `DTI_OFFSET` (date-time offset), and `DNS_IP4` (DNS IP address).\n     - Pass email content, including `SERVER` (mail server address), `MAILFROM` (sender address), `MAILTO` (recipient address), `SUBJECT` (email subject), and `BODY` (email body).\n     - Pass the file list `FILES`, containing the filenames to be sent.\n     - Monitor `smtp_done` and `smtp_busy` to track SMTP client completion and busy status.\n\n  -- REGION Error Handling\n     After email transmission, check for errors:\n     - If `SMTP_CLIENT.ERROR_T` is not 0, an SMTP client error occurred; store the error code and type in `ERROR_C` and `ERROR_T`.\n     - If circular buffer data is lost (`UCBD.BUF_DATA_LOST > 0`), set the error code to `DWORD#2` and error type to `BYTE#6`.\n     - If buffer usage exceeds 90% (`UCBD.BUF_USED_MAX > 90`), set the error code to `DWORD#1` and error type to `BYTE#6`.\n     - If no errors, clear error info by setting `ERROR_C` to `DWORD#0` and `ERROR_T` to `BYTE#0`.\n\n  -- REGION Output Update\n     Update output variables based on the current state machine step:\n     - `BUSY`: True in Step 10, indicating the function block is processing.\n     - `DONE`: True in Step 0, indicating processing is complete.\n     - Timer `WT_1` is activated in Step 20 to control retry intervals.\n     - If `SMTP_CLIENT` returns an error, propagate the error info to `ERROR_C` and `ERROR_T`.", "name": "DLOG_FILE_TO_SMTP"}