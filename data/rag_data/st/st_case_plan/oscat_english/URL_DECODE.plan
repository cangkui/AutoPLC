Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  This function, named `URL_DECODE`, is used to decode URL-encoded strings. In URL encoding, certain special characters are replaced with a `%` followed by two hexadecimal characters. The function's purpose is to restore these encoded characters back to their original form.\n\n- Variable Definitions\n  The code defines the following types of variables:\n  - Input variable: `IN`, of type `STRING`, representing the URL-encoded string that needs to be decoded.\n  - Internal variables:\n    - `pos`, of type `INT`, used to store the position of the `%` character within the string.\n    - `seq`, of type `STRING(3)`, used to store the two hexadecimal characters following the `%`.\n    - `new`, of type `STRING(1)`, used to store the decoded character.\n\n- Main Logic\n  -- REGION Decoding Logic:\n    1. **Initialization**: Assign the input string `IN` to `URL_DECODE` as the initial string to be decoded.\n    2. **Locate `%` Character**: Use the `FIND` function to locate the position of the first `%` character in the string and assign the result to `pos`.\n    3. **Loop for Decoding**:\n       - If `pos` is greater than 0 (indicating a `%` character was found), perform the following steps:\n         - Use the `MID` function to extract the two characters following the `%` (i.e., the hexadecimal encoding) and assign them to `seq`.\n         - Use `OSCAT_BASIC.HEX_TO_DWORD` to convert `seq` into a decimal value, then use `OSCAT_BASIC.CHR_TO_STRING` to convert this value into the corresponding character and assign it to `new`.\n         - Use the `REPLACE` function to substitute the `%` and the following two characters with the decoded character `new`.\n         - Use the `FIND` function again to locate the next `%` character and update `pos`.\n       - Repeat the above steps until no more `%` characters are found in the string.\n    4. **Return Result**: Finally, the `URL_DECODE` variable contains the fully decoded string, which the function returns as the output.\n\n  The function iteratively locates and replaces all URL-encoded characters, ultimately returning the decoded string.", "name": "URL_DECODE"}