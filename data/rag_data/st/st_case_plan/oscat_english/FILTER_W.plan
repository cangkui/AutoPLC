Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\nThe function block `FILTER_W` implements a simple filter designed to smooth out variations in the input signal `X`. It uses the time constant `T` to control the rate at which the output signal `Y` changes, ensuring that `Y` does not abruptly follow `X` but instead gradually approaches it. This filter is suitable for applications requiring signal smoothing, such as sensor data filtering or signal processing in control systems.\n\n- Variable Definitions\nThe code defines the following types of variables:\n  - Input variables: `X` is the input signal, and `T` is the filter's time constant, representing the response speed of the filter.\n  - Output variable: `Y` is the filtered output signal.\n  - Internal variables:\n    - `last`: Stores the timestamp of the last processing cycle.\n    - `tx`: Stores the current timestamp.\n    - `init`: An initialization flag indicating whether the filter has been initialized.\n    - `tmp`: A temporary variable used to store intermediate values during calculations.\n\n- Main Logic\n  -- REGION Initialization Logic:\n     - If `init` is `FALSE` (indicating the first run) or the time constant `T` is `T#0s` (indicating no filtering is needed), initialization is performed.\n     - Set `init` to `TRUE` to mark the filter as initialized.\n     - Set `last` to the current timestamp `tx`.\n     - Directly set the output `Y` to the input `X`, indicating no filtering effect.\n  \n  -- REGION Unchanged Input Logic:\n     - If the output `Y` equals the input `X`, it means the input signal has not changed.\n     - Update `last` to the current timestamp `tx` to record the current time.\n\n  -- REGION Changed Input Logic:\n     - If the output `Y` does not equal the input `X`, it means the input signal has changed.\n     - Calculate the change amount `tmp` using the formula: `tmp = (X - Y) * (tx - last) / T`.\n       - `(X - Y)` is the difference between the input and output.\n       - `(tx - last)` is the time difference between the current and last processing cycle.\n       - `T` is the time constant controlling the filtering speed.\n     - If `tmp` is not zero, update `Y` to `Y + tmp`, meaning the output signal gradually approaches the input signal.\n     - Update `last` to the current timestamp `tx` to record the current time.\n\n- Output Result\nThe filter's output `Y` adjusts gradually based on changes to the input `X`, with the adjustment speed controlled by the time constant `T`. A larger `T` results in slower changes to `Y`, while a smaller `T` leads to faster changes. When `T` is `T#0s`, the filter is disabled, and `Y` directly equals `X`.\n\n- Key Points\n  - The filter uses the time constant `T` to control the output signal's rate of change, preventing abrupt shifts.\n  - Timestamps `tx` and `last` are used to calculate time intervals, ensuring the filter's dynamic performance.\n  - The initialization logic ensures the filter starts correctly on its first run.\n  - When the input signal remains unchanged, the filter avoids unnecessary calculations, improving efficiency.", "name": "FILTER_W"}