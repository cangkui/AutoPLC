Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  The function is named `FIB` and is used to calculate the `X`-th term of the Fibonacci sequence. If the input value `X` is outside the valid range (i.e., less than 0 or greater than 46), the function returns `-1` to indicate invalid input. If `X` is within the valid range, the function calculates and returns the `X`-th term of the Fibonacci sequence.\n\n- Variable Definitions\n  The code defines two types of variables:\n  - Input variable: `X`, representing the term number of the Fibonacci sequence to be calculated.\n  - Internal variables: `t1` and `t2`, used to store intermediate results during the calculation of the Fibonacci sequence.\n\n- Main Logic\n  -- REGION Input Validation\n    First, the function checks whether the input value `X` is within the valid range. If `X` is less than 0 or greater than 46, the function immediately returns `-1`, indicating invalid input.\n  -- REGION Special Case Handling\n    If `X` is less than 2, the function directly returns `X`, as the first two terms of the Fibonacci sequence are 0 and 1, respectively.\n  -- REGION Fibonacci Sequence Calculation\n    If `X` is greater than or equal to 2, the function proceeds with the calculation logic:\n    - Initializes `t2` to 1.\n    - Uses a `WHILE` loop for iterative calculation, subtracting 2 from `X` in each iteration and updating the values of `t1` and `t2`. `t1` and `t2` store the previous two terms of the Fibonacci sequence.\n    - If `X` is greater than 2, the function performs an additional update to `t1` after the loop ends.\n    - Finally, the function returns `t1 + t2`, which is the `X`-th term of the Fibonacci sequence.\n  -- REGION Result Return\n    The function returns the calculated `X`-th term of the Fibonacci sequence or `-1` if the input is invalid.", "name": "FIB"}