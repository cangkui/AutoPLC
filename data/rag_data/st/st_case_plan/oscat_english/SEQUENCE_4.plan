Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\nThis function block, named 'SEQUENCE_4', is designed to implement a four-step sequential control logic. It checks the status of input signals and time conditions to sequentially activate output signals while monitoring time limits for each step. If a step times out or encounters an error, the sequential control stops, and a corresponding status code is set.\n\n- Variable Definitions\nThe code defines the following types of variables:\n - Input Variables: Include four input signals (in0, in1, in2, in3), a start signal (start), a reset signal (rst), wait and delay times for each step (wait0, delay0, wait1, delay1, wait2, delay2, wait3, delay3), and a flag to stop on error (stop_on_error).\n - Output Variables: Include four output signals (Q0, Q1, Q2, Q3), a combined output signal (QX), a run flag (run), the current step (step), and a status code (status).\n - Internal Variables: Include variables to record the last timestamp (last), an edge detection variable for the start signal (edge), the current timestamp (tx), and an initialization flag (init).\n\n- Main Logic Section\n-- REGION Initialization\n   This region initializes the function block. First, the current timestamp (milliseconds obtained via T_PLC_MS()) is converted to TIME type and stored in tx. If the function block is not initialized (init is FALSE), last is set to the current timestamp (tx), the status code (status) is set to 110 (initialization state), and the init flag is set to TRUE. This ensures the function block is properly initialized on its first run.\n\n-- REGION Reset Logic\n   If the reset signal (rst) is TRUE, the function block's state is reset. Specific actions include:\n   - Setting the step (step) to -1, indicating the sequential control has not started.\n   - Resetting all output signals (Q0, Q1, Q2, Q3) to 0, turning them off.\n   - Setting the status code (status) to 110, indicating the function block is in the initialization state.\n   - Setting the run flag (run) to 0, stopping the sequential control.\n\n-- REGION Start Logic\n   If the start signal (start) is TRUE and no rising edge of the start signal has been detected (edge is FALSE), the sequential control begins. Specific actions include:\n   - Setting the step (step) to 0, starting the sequential control from the first step.\n   - Recording the current timestamp in last for future time calculations.\n   - Setting the status code (status) to 111, indicating the sequential control is running.\n   - Resetting all output signals (Q0, Q1, Q2, Q3) to 0, ensuring a clean initial state.\n   - Setting the run flag (run) to 1, indicating the sequential control is active.\n   Finally, the edge variable detects the rising edge of the start signal to ensure it triggers only once.\n\n-- REGION Error Handling\n   If the status code (status) is between 0 and 100 and stop_on_error is TRUE, the function block returns immediately, stopping further processing. This logic ensures the sequential control halts on error to prevent additional operations.\n\n-- REGION Step 0\n   If the function block is running (run is TRUE) and the current step is 0, the following logic is executed:\n   - If Q0 is FALSE and in0 is TRUE, and the time difference between the current time and last is less than or equal to wait0, Q0 is set to TRUE, and last is updated to the current time. This means Q0 is activated if in0 is detected within the wait time (wait0).\n   - If Q0 is FALSE and the time difference exceeds wait0, the status code (status) is set to 1, and the run flag (run) is set to FALSE, indicating a timeout in Step 0.\n   - If Q0 is TRUE and the time difference is greater than or equal to delay0, the step (step) is set to 1, and last is updated. This means the control proceeds to the next step after Q0 has been active for the delay time (delay0).\n\n-- REGION Step 1\n   If the function block is running (run is TRUE) and the current step is 1, the following logic is executed:\n   - If Q1 is FALSE and in1 is TRUE, and the time difference is less than or equal to wait1, Q0 is set to FALSE, Q1 is set to TRUE, and last is updated. This means Q1 is activated (and Q0 deactivated) if in1 is detected within wait1.\n   - If Q1 is FALSE and the time difference exceeds wait1, the status code (status) is set to 2, Q0 is set to FALSE, and the run flag (run) is set to FALSE, indicating a timeout in Step 1.\n   - If Q1 is TRUE and the time difference is greater than or equal to delay1, the step (step) is set to 2, and last is updated. This means the control proceeds to the next step after Q1 has been active for the delay time (delay1).\n\n-- REGION Step 2\n   If the function block is running (run is TRUE) and the current step is 2, the following logic is executed:\n   - If Q2 is FALSE and in2 is TRUE, and the time difference is less than or equal to wait2, Q1 is set to FALSE, Q2 is set to TRUE, and last is updated. This means Q2 is activated (and Q1 deactivated) if in2 is detected within wait2.\n   - If Q2 is FALSE and the time difference exceeds wait2, the status code (status) is set to 3, Q1 is set to FALSE, and the run flag (run) is set to FALSE, indicating a timeout in Step 2.\n   - If Q2 is TRUE and the time difference is greater than or equal to delay2, the step (step) is set to 3, and last is updated. This means the control proceeds to the next step after Q2 has been active for the delay time (delay2).\n\n-- REGION Step 3\n   If the function block is running (run is TRUE) and the current step is 3, the following logic is executed:\n   - If Q3 is FALSE and in3 is TRUE, and the time difference is less than or equal to wait3, Q2 is set to FALSE, Q3 is set to TRUE, and last is updated. This means Q3 is activated (and Q2 deactivated) if in3 is detected within wait3.\n   - If Q3 is FALSE and the time difference exceeds wait3, the status code (status) is set to 4, Q2 is set to FALSE, and the run flag (run) is set to FALSE, indicating a timeout in Step 3.\n   - If Q3 is TRUE and the time difference is greater than or equal to delay3, the step (step) is set to -1, Q3 is set to FALSE, the run flag (run) is set to FALSE, and the status code (status) is set to 110, indicating the sequential control has completed.\n\n-- REGION Combined Output\n   Finally, the logical OR of Q0, Q1, Q2, and Q3 is assigned to QX, indicating whether any output signal is active. This provides a combined output signal to show if any step in the sequential control is currently active.", "name": "SEQUENCE_4"}