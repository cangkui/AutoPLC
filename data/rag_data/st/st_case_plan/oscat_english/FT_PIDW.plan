Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\n  This function block, named `FT_PIDW`, implements a Proportional-Integral-Derivative (PID) controller with output limiting. It calculates the output `Y` based on the input signal `IN`, proportional gain `KP`, integral time `TN`, derivative time `TV`, and the lower and upper limits `LIM_L` and `LIM_H`. It also checks whether the output exceeds the specified limits.\n\n- Variable Definitions\n  The code defines the following types of variables:\n  - Input variables: `IN` (input signal), `KP` (proportional gain), `TN` (integral time), `TV` (derivative time), `LIM_L` (lower limit), `LIM_H` (upper limit), `RST` (reset signal).\n  - Output variables: `Y` (output signal), `LIM` (flag indicating whether the output exceeds the limits).\n  - Internal variables: `integ` (integrator instance), `diff` (differentiator instance), `YI` (output of the integral part).\n\n- Main Logic\n  -- REGION Integral Part\n    First, it checks whether the integral time `TN` is 0 or the reset signal `RST` is true. If so, the integrator is disabled, and the integral output `YI` is reset to 0. Otherwise, the integrator is enabled, with the input signal as `IN`, gain as `1.0 / TN`, and the result stored in `YI`. The integrator's enable signal is `NOT LIM`, meaning integration stops if the output exceeds the limits.\n\n  -- REGION Proportional Part\n    The proportional output is calculated using the formula `Y := KP * (IN + YI)`, which multiplies the proportional gain by the sum of the input signal and the integral output.\n\n  -- REGION Derivative Part\n    The differentiator is enabled, with the input signal as `IN` and gain as `TV`. The differentiator's output will be used in subsequent calculations.\n\n  -- REGION Output Limit Check\n    It checks whether the current output `Y` is within the specified limits (i.e., greater than `LIM_L` and less than `LIM_H`). If within limits, `LIM` is set to `FALSE`; otherwise, it is set to `TRUE`.\n\n  -- REGION Final Output Calculation\n    The proportional output is added to the derivative output, and the `LIMIT` function is used to clamp the result between `LIM_L` and `LIM_H`. The final result is stored in `Y`.\n\n- Summary\n  This function block implements a PID controller with integral, derivative, and output limiting features. It calculates the integral and derivative parts using an integrator and differentiator, combines them with the proportional part to produce the final output, and ensures the output stays within the specified range. If the output exceeds the limits, integration is halted, and the limit flag is set.", "name": "FT_PIDW"}