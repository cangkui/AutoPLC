Natural Language Requirements:  
{"variables": [], "instructions": [], "planning": "- Overview\nThis code defines a function block `TONOF` that implements a timer-based switching logic. Based on the state of the input signal `IN`, it uses different timer durations (`T_ON` and `T_OFF`) to control the output signal `Q`. Combining a timer (TON) with logical control, it enables delayed activation or deactivation functionality.\n\n- Variable Definitions\nThe code defines the following types of variables:\n - Input variables: `IN` (Boolean, the input signal controlling the function block), `T_ON` (time type, defining the activation delay time), `T_OFF` (time type, defining the deactivation delay time).\n - Output variable: `Q` (Boolean, the output signal of the function block).\n - Internal variables: `X` (an instance of the TON timer, used to implement the delay logic), `old` (Boolean, stores the `IN` state from the previous cycle), `mode` (Boolean, stores the current operating mode).\n\n- Main Logic Section\n-- REGION Input Signal Detection and Mode Switching:\n   This region detects changes in the input signal `IN`. By comparing the current `IN` value with the previous cycle's `IN` value (stored in `old`), it identifies rising or falling edges. If a change is detected, the corresponding timer duration (`T_ON` or `T_OFF`) is selected based on the state of `IN`, and the preset time (`PT`) of timer `X` is set to this value. The `mode` and `old` values are also updated to reflect the current operating mode.\n   - If `IN` is TRUE (rising edge), `T_ON` is selected as the timer duration.\n   - If `IN` is FALSE (falling edge), `T_OFF` is selected as the timer duration.\n\n-- REGION Timer Operation and Output Control:\n   This region starts timer `X` and controls the output signal `Q`. The input signal for timer `X` is always TRUE (`IN := TRUE`), so the timer runs according to the preset time. When timer `X` completes its countdown (`X.Q` is TRUE), `Q` is set to the current operating mode (`mode`).\n   - If `mode` is TRUE, `Q` outputs TRUE (indicating delayed activation).\n   - If `mode` is FALSE, `Q` outputs FALSE (indicating delayed deactivation).\n\n- Summary\nThe core logic of the `TONOF` function block uses the `TON` timer to implement delayed control. Based on the state of the input signal `IN`, it selects different delay times (`T_ON` or `T_OFF`) and updates the output signal `Q` once the timer completes. This design is useful for scenarios requiring delayed activation or deactivation, such as motor startup delays or delayed lighting control.", "name": "TONOF"}