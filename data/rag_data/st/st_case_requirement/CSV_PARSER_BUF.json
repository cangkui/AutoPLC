{
    "title": "CSV Parser Buffer Function",
    "description": "CSV_PARSER_BUF enables the analysis of the elements \n\ncontained in the bufer. The number of data contained on PT.SIZE \n\nspecifed. The separator is specifed in parameter \"SEP\". The search for \n\nelements that always begins, depending on the given \"OFFSET\", so it is \n\nvery easy to look at certain points in order to not always have to search \n\nthe entire bufer. At the beginning should be started with by default the \n\nOFFSET 0 (but need not).\n\nAt the beginning of the default should be started OFFSET 0 (but need not). \n\nOf course this is dependent on the content or the structure of the data.\n\nEvaluate elements:\n\nWill specify in SEP 0, lines are always evaluated completely and parameter \n\n\"VALUE\" is issued. If the elements in the bufer are structured as CSV \n\n(Excel), so at SEP the separator ',' or something else can be specifed. RUN \n\n= 1 startes the evaluation. Since it is not foreseeable how long the search \n\n147 Version 1.21\n\nChapter 10. File-System\n\ntakes, a watchdog function is Integrated that stops the search for the \n\ncurrent cycle, then RESULT = 5 and RUN remains unchanged. In the next \n\ncycle, the analysis proceeds automatically. As soon as the next element is \n\ndetected, the element in VALUE is passed, and RESULT is 1. If the element \n\nis also the last in a line, then RESULT = 2 is the output. As soon as the end \n\nof the data has been reached at RESULT = 10 passed. Always if yet RUN = \n\n0 is output, RESULT defnes the result. If an item is longer than the \n\nmaximum length (string_length) so the characters are cut of \n\nautomatically. The parameter OFFSET is by the module automatically \n\npassed after each result, but can be defned individually before each \n\nevaluation.",
    "type": "FUNCTION",
    "name": "CSV_PARSER_BUF",
    "input": [
        {
            "name": "SEP",
            "type": "BYTE",
            "description": "The separator used for parsing the buffer."
        },
        {
            "name": "RUN",
            "type": "BYTE",
            "description": "Command code for the current action (0 for no function, 1 to evaluate elements)."
        },
        {
            "name": "OFFSET",
            "type": "UDINT",
            "description": "Current file offset of the query, starting from 0 by default."
        },
        {
            "name": "VALUE",
            "type": "STRING",
            "description": "Output value of the current key processed in the buffer."
        },
        {
            "name": "PT",
            "type": "NETWORK_BUFFER",
            "description": "The read data buffer that contains the elements to be analyzed."
        }
    ],
    "output": [
        {
            "name": "RESULT",
            "type": "BYTE",
            "description": "Result of the query indicating the evaluation status."
        }
    ],
    "in/out": [],
    "return_value": null
}