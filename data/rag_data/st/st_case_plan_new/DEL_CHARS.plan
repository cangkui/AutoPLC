

- 概述  
  该功能块需要实现从输入字符串中删除所有出现在指定字符集内的字符，输出处理后的新字符串。核心逻辑是通过字符遍历和动态删除机制实现字符串净化。

- 变量定义  
  - **输入变量**：
    - `IN`：待处理的原始字符串（长度未明确限制）
    - `CX`：包含待删除字符的字符串（固定长度80）
  - **内部变量**：
    - `pos`：字符遍历的当前位置指针
    - `stop`：当前字符串的动态终止位置

- 主逻辑流程  
  1. **初始化阶段**：
     - 将输入字符串`IN`复制到输出变量`DEL_CHARS`
     - 设置初始遍历范围`stop`为输入字符串长度

  2. **字符遍历与过滤**：
     - **循环条件**：`pos`指针未超过当前字符串长度`stop`
     - **字符检查**：  
       通过`MID(DEL_CHARS, 1, pos)`提取当前字符（注：代码存在潜在逻辑错误，此处应为`MID(DEL_CHARS, pos, 1)`），  
       使用`FIND`函数判断该字符是否存在于待删除字符集`CX`
     - **删除操作**：  
       若字符需删除，使用`DELETE`函数移除该字符，同时：  
       - 将字符串长度`stop`减1（因字符串缩短）  
       - **不递增**`pos`（删除后下一字符已移动至当前位置）
     - **保留操作**：  
       若字符无需删除，递增`pos`指针继续检查下一个字符

  3. **终止与输出**：  
     当遍历完成时，返回已删除指定字符的结果字符串`DEL_CHARS`

- 关键特征  
  动态维护`stop`变量确保遍历范围随字符串长度变化，通过`pos`指针的智能推进/保持机制实现原地修改，避免创建临时存储空间。示例`CLEAN('Nr.1 23#', ' #ABCDEFG')`处理过程：  
  - 删除空格` `、`#`和字母`A-G`  
  - 输出`'Nr.123'`保留数字和非字母字符