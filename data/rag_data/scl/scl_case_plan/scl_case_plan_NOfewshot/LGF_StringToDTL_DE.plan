

### 思维链逻辑流程总结

---

#### **1. 输入预处理**
- **空值检测**  
  若输入字符串为空：  
  → 设置`error=False`，`status=STATUS_NO_CURRENT_JOBS`  
  → 返回初始值`DTL#1970-01-01-00:00:00.0`  
  → **直接退出函数**  

---

#### **2. 时间字段解析**  
按固定格式**`DD-MM-YYYY HH:MM:SS.NNNNNNNNN`**分段提取并验证：

| 字段        | 起始位置 | 长度 | 提取方法               | 验证规则                          | 错误码           |
|-------------|----------|------|------------------------|-----------------------------------|------------------|
| **年**      | 7        | 4    | `MID(7,4)` → 字符串转UInt | 范围 `1970 ≤ YEAR ≤ 2262`         | `ERR_FORMAT_YEAR` |
| **月**      | 4        | 2    | `MID(4,2)` → 字符串转USInt | 范围 `1 ≤ MONTH ≤ 12`             | `ERR_FORMAT_MONTH` |
| **日**      | 1        | 2    | `MID(1,2)` → 字符串转USInt | 范围 `1 ≤ DAY ≤ 31`               | `ERR_FORMAT_DAY` |
| **时**      | 12       | 2    | `MID(12,2)` → 字符串转USInt | 范围 `0 ≤ HOUR ≤ 23`              | `ERR_FORMAT_HOUR` |
| **分**      | 15       | 2    | `MID(15,2)` → 字符串转USInt | 范围 `0 ≤ MINUTE ≤ 59`            | `ERR_FORMAT_MINUTE` |
| **秒**      | 18       | 2    | `MID(18,2)` → 字符串转USInt | 范围 `0 ≤ SECOND ≤ 59`            | `ERR_FORMAT_SECOND` |
| **纳秒**    | 21       | 9    | `MID(21,9)` → **替换空格为'0'** → 字符串转UDInt | 范围 `0 ≤ NANOSECOND ≤ 999,999,999` | `ERR_FORMAT_NANOSECOND` |

---

#### **3. 关键处理逻辑**
- **字段级联验证**  
  每个字段提取后立即进行范围检查，若任一字段非法：  
  → 设置`error=True`，对应错误码  
  → 返回初始值并**终止后续处理**  

- **纳秒特殊处理**  
  使用循环将纳秒部分的空格替换为`'0'`（例如`"1" → "100000000"`），确保固定9位长度。

- **DTL格式修正**  
  转换完成后，通过`#tempDateAndTime + t#0ms`强制更新`DTL`的星期字段（避免手动计算）。

---

#### **4. 输出处理**
- **成功输出**  
  所有字段验证通过后：  
  → 设置`error=False`，`status=STATUS_FINISHED_NO_ERROR`  
  → 返回完整的`DTL`结构体  

- **错误覆盖机制**  
  任一字段错误会覆盖后续处理，确保错误状态和初始值被优先返回。

---

### **逻辑流程图简示**
```
输入 → 空值检查 → 分段提取 → 值转换 → 范围验证 → 错误处理 → DTL修正 → 输出
```