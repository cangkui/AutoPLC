

### 算法流程思维链（基于需求与代码综合分析）

#### **1. 执行触发与初始化**
- **触发条件**: `execute`信号上升沿（检测到`execute`从False变True）
- **前置检查**:
  - 计算数组`values`的上下界（`LOWER_BOUND`/`UPPER_BOUND`）
  - **错误检测**:
    - 数组下界为负数 → 设置`ERR_NEG_ARR_BOUND`错误
    - `rangeOutlier`值非法（≠0且≤1.0） → 设置`ERR_RANGE_NOT_OK`
- **初始化操作**:
  - 清空所有统计值（Q25、中位数、Q75等）
  - 重置状态码为`STATUS_FIRST_CALL`

---

#### **2. 核心计算流程**
##### **2.1 数据预处理**
- **排序数组**:
  - 调用`LGF_ShellSort_LReal`对`values`进行希尔排序
  - **错误处理**: 排序失败 → 设置`ERR_SHELL_SORT`错误并传递子状态码

##### **2.2 基础统计量计算**
- **极值**:
  - `min` = 排序后首元素
  - `max` = 排序后末元素
- **中位数**:
  - 数组长度`n`为偶数 → 取中间两元素的平均值
  - 数组长度`n`为奇数 → 取中间元素
- **四分位数**:
  - **Q25计算**:
    - 位置`k = (n + 3)/4`
    - 根据整数部分和分数部分插值相邻元素
  - **Q75计算**:
    - 位置`k = (3n + 1)/4`
    - 类似Q25的插值方法

##### **2.3 离群值检测**
- **条件**: `rangeOutlier ≠ 0`
- **计算IQR**: `IQR = Q75 - Q25`
- **离群边界**:
  - 下界: `Q25 - rangeOutlier * IQR`
  - 上界: `Q75 + rangeOutlier * IQR`
- **检测逻辑**:
  - **下界离群**:
    - 从前向后遍历，找到第一个≥下界的值 → 更新`min`并计算离群点占比
  - **上界离群**:
    - 从后向前遍历，找到第一个≤上界的值 → 更新`max`并计算离群点占比

##### **2.4 偏度计算**
- **公式**: `Skewness = (Q25 + Q75 - 2*Median) / IQR`

---

#### **3. 输出处理**
- **极值选择**:
  - `rangeOutlier ≠ 0` → 输出离群调整后的`min`/`max`
  - `rangeOutlier = 0` → 输出原始极值
- **错误状态映射**:
  - `error` = 状态码最高位（二进制位15）
  - `status`/`subfunctionStatus`传递详细状态

---

#### **4. 状态机控制**
- **状态迁移**:
  - `STATUS_FIRST_CALL` → 开始计算
  - `STATUS_EXECUTION_FINISHED` → 正常结束
  - 错误状态 → 终止计算并锁存错误码
- **无调用处理**:
  - `execute = False` → 状态设为`STATUS_NO_CALL`

---

### **关键差异点（代码流程优化）**
1. **离群值占比计算**:
   - 使用`(离群点数量 / 总数) * 100%`而非遍历计数，通过索引位置直接推导百分比。
2. **偏度公式简化**:
   - 采用基于四分位数的近似公式，避免传统三阶矩计算的高复杂度。
3. **动态极值选择**:
   - 根据`rangeOutlier`是否为0切换原始/调整后极值，避免冗余计算。

---

### **错误处理逻辑**
| 错误码           | 触发条件                          | 处理动作                           |
|------------------|----------------------------------|----------------------------------|
| `ERR_NEG_ARR_BOUND` | 数组下界<0                       | 终止计算，锁定错误状态             |
| `ERR_SHELL_SORT`    | 排序功能块报错                   | 传递子状态码，标记排序失败          |
| `ERR_RANGE_NOT_OK`  | `rangeOutlier`值非法            | 立即终止，不执行后续计算            |