

算法流程描述：

1. 初始化阶段：
   - 清零TRUE/FALSE位计数器
   - 创建输入值的临时副本（保留原始输入值）

2. 位处理循环：
   FOR循环执行次数 = 输入指定的位数长度（numberOfBits）
   {
   a. 位检测阶段：
      - 检查当前最低位状态（%X0）
      - 根据检测结果递增对应计数器
   
   b. 数据移位阶段：
      - 将临时数值整体右移1位（使用SHR指令）
   }

3. 结果输出阶段：
   - 将临时计数器值写入输出变量
   - 始终设置ENO为TRUE（无错误处理机制）

关键设计特征：
- 采用循环右移策略避免修改原始输入值
- 使用最低位检测代替位索引访问（%X0固定检测）
- 显式定义移位操作常量确保指令可维护性
- 强制类型转换处理USInt到DInt的循环参数匹配
- 通过临时变量隔离输入输出操作保证数据完整性

该流程通过位操作替代数组索引访问，优化了存储空间使用，同时保持O(n)的时间复杂度（n=32位最大循环次数）。移位操作的设计使得算法可适配不同位长的数据类型（通过numberOfBits参数控制）。