

### 算法流程描述（调整后）

#### 主逻辑流程
1. **状态初始化**
   - 实时更新当前温度显示和设定温度显示

2. **传感器有效性校验**
   - 当温度值超出[0,100]范围时标记传感器故障
   - 故障状态下强制关闭加热器并跳过后续控制逻辑

3. **过热保护子系统**
   - (a) 加热运行计时器
     - 当加热器处于激活状态时启动5秒倒计时
     - 超时后触发过热保护标志，立即关闭加热器
   - (b) 冷却恢复计时器
     - 过热保护触发后启动3秒冷却计时
     - 冷却完成后自动解除保护状态

4. **温度控制决策**
   - 当未触发过热保护且无传感器故障时：
     - 温度低于设定值 → 激活加热器
     - 温度高于设定值 → 关闭加热器
   - 采用状态保持机制，避免频繁开关（通过HeaterState.IsEnabled标志实现）

5. **异常处理机制**
   - 传感器故障时强制关闭加热器
   - 所有异常状态优先于常规控制逻辑执行

6. **状态同步输出**
   - 实时更新加热器运行状态
   - 同步过热保护触发状态

### 流程调整说明
1. **定时器处理前置**：将过热保护计时器判断放在控制逻辑之前，确保每次扫描周期优先处理保护状态

2. **状态保持优化**：通过HeaterState结构体实现：
   - IsEnabled记录加热器预期状态
   - OverheatProtectionTriggered记录保护状态
   避免直接依赖HeaterOutput的实时状态

3. **保护解除机制**：采用独立的冷却计时器，确保必须完成完整冷却周期后才能恢复控制

4. **故障处理优先级**：传感器故障判断作为独立模块，其处理逻辑优先于温度控制决策

5. **显示同步策略**：所有显示参数在扫描周期开始时立即更新，确保状态显示的实时性

该流程描述保留了核心控制逻辑，隐藏了TON定时器等具体实现细节，同时通过状态机机制保证了控制系统的稳定性，符合工业控制系统的典型设计模式。