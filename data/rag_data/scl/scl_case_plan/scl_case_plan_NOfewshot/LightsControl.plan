

以下是基于需求和代码实现的算法流程描述：

一、模式选择逻辑
1. 核心分支：根据#button1状态划分手动/自动模式
   - FALSE（0）：执行手动控制分支
   - TRUE（1）：执行自动循环分支

二、手动模式控制逻辑
1. 定时器互锁配置：
   - ManModeTimer1在ManModeTimer2完成时启动
   - ManModeTimer2在ManModeTimer1未完成时启动
   - 形成交替的1秒脉冲（产生0.5Hz基准频率）

2. 按钮组合响应：
   │ 组合状态       │ 固定亮灯 │ 闪烁灯及模式      │
   ├────────────────┼──────────┼───────────────────┤
   │ button2 & !button3 │ 绿灯常亮 │ 红灯（0.5Hz）     │
   │ !button2 & button3 │ 红灯常亮 │ 黄灯（1Hz）      │
   │ button2 & button3  │ 黄灯常亮 │ 绿灯（1Hz）      │
   │ 其他情况          │ 全灭     │ -                │

三、自动模式控制逻辑
1. 状态机配置：
   - 使用CycleStep（0-2）标记当前阶段
   - 状态转移表：
   │ 当前阶段 │ 亮灯状态      │ 定时完成动作          │
   ├──────────┼───────────────┼───────────────────────┤
   │ 0        │ 绿灯          │ 跳转阶段1，重置定时器 │
   │ 1        │ 红灯          │ 跳转阶段2，重置定时器 │
   │ 2        │ 黄灯          │ 跳转阶段0，重置定时器 │

2. 定时器管理：
   - AutoModeTimer持续运行（IN常TRUE）
   - 每次状态转移时执行硬复位（IN置FALSE）
   - 固定使用1秒定时周期

四、特殊处理说明
1. 模式切换保护：
   - 自动模式激活时立即重置CycleStep为初始状态
   - 手动模式激活时自动模式相关资源保持休眠

2. 定时器复用策略：
   - 手动模式使用双定时器生成基准频率
   - 自动模式使用独立定时器管理状态时长
   - 不同模式间的定时器实例完全隔离

该流程描述在保持原始需求核心逻辑的基础上，根据实际代码实现补充了定时器管理策略和状态切换细节，可作为后续代码维护或移植的指导框架。