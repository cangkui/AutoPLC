

以下是该矩阵求逆函数的算法思维链流程描述：

1. 矩阵维度计算阶段
   - 获取输入矩阵和结果矩阵的行列上下限索引
   - 计算输入矩阵实际行列数（考虑数组起始索引可能为0或1的情况）

2. 错误检测阶段（任一条件触发立即返回）
   - 校验输入矩阵是否为方阵 → ERR_NOT_SQUARE_MATRIX
   - 校验输入/结果矩阵行起始索引一致性 → ERR_MATR1_LOWBOUND_ROWS...
   - 校验列起始索引一致性 → ERR_MATR1_LOWBOUND_COLUMNS...
   - 校验行结束索引一致性 → ERR_MATR1_UPPBOUND_ROWS...
   - 校验列结束索引一致性 → ERR_MATR1_UPPBOUND_COLUMNS...

3. 矩阵预处理阶段
   - 初始化结果矩阵为全零矩阵
   - 将输入矩阵元素取负复制到结果矩阵（建立初始工作矩阵）

4. 核心求逆算法阶段（高斯-约旦消元法变种）
   a) 遍历每个主对角线元素（pivot元素）：
      - 检查主元绝对值是否低于精度阈值 → 触发ERR_ALGORITHM_NOT_POSSIBLE
      - 计算主元倒数并更新结果矩阵对应位置
   
   b) 处理主元所在列：
      - 除主元外，该列其他元素乘以主元倒数实现列归一化
   
   c) 处理非主元行列：
      - 通过双重循环更新非主元行/列元素，执行矩阵行变换操作
   
   d) 处理主元所在行：
      - 除主元外，该行其他元素乘以主元倒数实现行归一化

5. 终态设置
   - 设置error标志为false
   - 状态码设为STATUS_NO_ERROR
   - 激活ENO机制表示正常结束

注：该实现通过预先取反矩阵元素的特殊处理，结合改进的高斯消元步骤，在保证数值稳定性的同时避免了传统方法中显式的单位矩阵构造。各错误检测步骤在算法关键节点前置执行，确保运算安全性和结果有效性。