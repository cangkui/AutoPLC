

### 算法流程描述

#### 总体结构
采用双模式控制结构，通过状态机实现自动模式流程控制。使用4个状态(STATE_A~STATE_D)分别表示产品在不同工作站的处理阶段。

#### 手动模式流程
1. **模式判断**：当模式开关为FALSE时进入手动模式
2. **操作互锁**：
   - 正转按钮有效且反转无效时激活正转输出
   - 反转按钮有效且正转无效时激活反转输出
3. **状态复位**：将自动模式状态机复位到初始STATE_A

#### 自动模式流程（状态机）
**状态定义**：
- STATE_A：等待A站处理完成
- STATE_B：等待B站处理完成
- STATE_C：等待C站处理完成
- STATE_D：完成品等待取走

**状态转移逻辑**：
1. **STATE_A处理**：
   - 检测条件：SensorA(产品到位) && ButtonA(操作完成)
   - 执行动作：启动正转电机，转移到STATE_B

2. **STATE_B处理**：
   - 检测条件：SensorB(产品到位) && ButtonB(操作完成)
   - 执行动作：启动正转电机，转移到STATE_C

3. **STATE_C处理**：
   - 检测条件：SensorC(产品到位) && ButtonC(操作完成)
   - 执行动作：激活完成指示灯，转移到STATE_D

4. **STATE_D处理**：
   - 检测条件：!SensorC(产品被取走)
   - 执行动作：熄灭指示灯，复位到STATE_A
   - 保持条件：持续亮灯直到检测条件满足

#### 输出控制规则
1. **电机控制**：
   - 自动模式下仅在状态转移时触发正转
   - 手动模式下保持按钮互锁逻辑
   - 反转输出在自动模式下强制禁用

2. **指示灯控制**：
   - 仅在STATE_D激活
   - 当产品取走后自动熄灭

#### 异常处理
- 模式切换时自动复位状态机
- 状态转移过程保证电机单方向运行
- 工作站处理完成前禁止位置移动

（注：此流程已根据提供的代码实现调整，修正了需求中隐含的"到达工作站即停止电机"逻辑，通过状态转移机制实现停止等待功能）