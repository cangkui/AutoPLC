# 美国日历周计算算法流程描述

## 功能概述
该函数用于计算给定日期在美国日历系统中的周数(calendar week)以及该日期距离当年1月1日的天数(calendar day)。美国日历系统特点：
- 每周从周日开始
- 包含1月1日的那一周总是第1周
- 一年有52或53周

## 输入输出
- 输入：`date` (DTL类型) - 需要计算周数的日期
- 输出：
  - `calendarDay` (DInt) - 距离当年1月1日的天数
  - `error` (Bool) - 错误标志
  - `status` (Word) - 状态/错误代码
- 返回值：`DInt` - 计算得到的周数

## 主要算法流程

1. **初始化阶段**
   - 初始化临时变量`tempDays`和`tempWeek`为0

2. **计算天数**
   - 调用`LGF_GetCalendarDay`函数计算输入日期距离当年1月1日的天数
   - 如果计算过程中出现错误，立即返回

3. **年份处理**
   - 获取当前年、前一年和后一年的年份
   - 判断当前年和前一年是否为闰年

4. **关键日期计算**
   - 计算以下关键日期的星期几：
     - 当前年1月1日
     - 下一年1月1日
     - 当前年12月31日
     - 前一年1月1日
     - 前一年12月31日

5. **周数计算**
   - 根据当前年1月1日的星期几，对天数进行校正
   - 计算初步周数：`校正后天数 / 7 + 1`

6. **周数校正**
   - 判断当前年是否有53周的条件：
     - 非闰年且1月1日和12月31日都是星期六
     - 闰年且(1月1日是星期六且12月31日是星期日)或(1月1日是星期五且12月31日是星期六)
   - 根据53周条件对周数进行最终校正

7. **输出结果**
   - 设置输出变量`calendarDay`、`error`和`status`
   - 返回计算得到的周数

## 关键逻辑说明

1. **闰年判断**：
   - 能被4整除但不能被100整除，或者能被400整除的年份是闰年

2. **天数校正**：
   - 根据1月1日是星期几，对总天数进行不同数量的增加，确保周数计算正确

3. **53周条件**：
   - 需要特别处理年份是否有53周的情况，这会影响年末周数的计算

4. **边界处理**：
   - 当年份转换时(如12月31日到1月1日)，需要正确处理周数的连续性

## 错误处理
- 如果输入日期超出有效范围，设置错误标志和错误代码`ERR_LIM_DATE`(16#8201)
- 正常情况下状态码为`STATUS_NO_ERROR`(16#0000)

该算法严格遵循美国日历系统的规则，通过多步骤的日期计算和条件判断，确保周数计算的准确性。