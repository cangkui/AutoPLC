# 三角波信号发生器算法流程描述

## 功能概述
该功能块`LGF_TriangleCI`用于生成一个三角波信号，利用循环中断OB的时间间隔来控制波形生成。

## 变量定义
### 输入变量
- `amplitude`: 三角波幅度(默认1.0)
- `offset`: 信号偏移量
- `periode`: 周期时间(毫秒，默认1000)
- `phaseShift`: 相位偏移
- `callOB`: 调用的循环中断OB
- `reset`: 重置信号

### 输出变量
- `value`: 当前三角波值
- `error`: 错误标志
- `status`: 状态码
- `subFunctionStatus`: 子功能状态

### 内部变量
- `statCounter`: 状态计数器
- 多个临时变量用于计算

## 算法流程

1. **获取采样时间**
   - 调用`QRY_CINT`函数查询循环中断OB的时间参数
   - 错误处理:
     - 如果`QRY_CINT`返回非零值，设置错误状态并返回
     - 如果OB不可用，设置相应错误状态并返回

2. **重置处理**
   - 当`reset`为TRUE时，重置计数器并将输出值设为零

3. **正常运算**
   - 更新计数器:
     - 每次调用时增加计数器值(基于OB周期时间)
     - 使用模运算确保计数器在周期范围内
   - 计算相位偏移:
     - 考虑用户设置的相位偏移
     - 使用模运算确保在周期范围内
   - 三角波计算:
     - 使用公式`ABS((4.0/周期*相位偏移-2.0)*幅度)-幅度`生成三角波
     - 这是一个线性分段函数的数学表达

4. **输出处理**
   - 将计算值加上偏移量后输出
   - 设置正常状态标志

## 关键点说明
- 使用循环中断OB的精确时间控制来保证波形周期准确性
- 通过模运算实现周期循环
- 数学公式将线性分段函数转换为单一表达式
- 完善的错误处理机制

## 代码调整建议
- 可考虑增加对输入参数的合法性检查
- 可添加对输出值的限幅保护
- 可增加对周期值的最小值限制(避免除零错误)
- 可考虑添加频率参数作为periode的替代输入