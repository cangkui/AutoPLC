### 算法流程描述

#### 1. **功能概述**
该功能块 `LGF_Boxplot_UDInt` 用于计算一个无符号整数数组的箱线图（Boxplot）统计量，包括：
- 最小值（min）
- 第一四分位数（Q25）
- 中位数（median）
- 第三四分位数（Q75）
- 最大值（max）
- 异常值（outlier）检测
- 数据偏度（skewness）

#### 2. **输入输出**
- **输入**：
  - `execute`：触发计算的脉冲信号（上升沿触发）。
  - `rangeOutlier`：异常值检测的参数（默认为1.5）。
  - `values`：待计算的无符号整数数组（输入输出参数）。
- **输出**：
  - 统计量：`min`, `q25`, `median`, `q75`, `max`, `outlierMin`, `outlierMax`, `skewness`。
  - 状态信息：`error`, `status`, `subfunctionStatus`。

#### 3. **算法流程**
1. **触发检测**：
   - 检测 `execute` 的上升沿，触发计算。
   - 如果 `execute` 为低电平，重置状态为 `STATUS_NO_CALL`。

2. **输入验证**：
   - 检查 `rangeOutlier` 是否合法（必须 >1.0 或 =0.0）。
   - 检查数组边界是否合法（下限不能为负）。

3. **数据排序**：
   - 使用 `LGF_ShellSort_UDInt` 对输入数组 `values` 进行排序。

4. **统计量计算**：
   - **中位数（median）**：
     - 如果数组长度为偶数：中位数 = (中间两个数的平均值)。
     - 如果数组长度为奇数：中位数 = 中间的数。
   - **四分位数（Q25 和 Q75）**：
     - Q25：计算位置 `k = (n + 3) / 4`，插值得到。
     - Q75：计算位置 `k = (3n + 1) / 4`，插值得到。
   - **异常值检测**：
     - 如果 `rangeOutlier` 不为 0：
       - 计算四分位距（IQR = Q75 - Q25）。
       - 计算异常值边界：
         - 下限：`Q25 - rangeOutlier * IQR`。
         - 上限：`Q75 + rangeOutlier * IQR`。
       - 遍历数组，统计超出边界的异常值比例。
   - **偏度（skewness）**：
     - 公式：`(Q25 + Q75 - 2 * median) / (Q75 - Q25)`。

5. **输出更新**：
   - 根据 `rangeOutlier` 是否为 0，选择输出原始或修正后的 `min` 和 `max`。
   - 更新所有统计量和状态信息。

#### 4. **状态管理**
- `status`：记录当前功能块的状态（如 `STATUS_FIRST_CALL`, `STATUS_EXECUTION_FINISHED`）。
- `error`：如果发生错误（如排序失败、非法输入），设置为 `TRUE`。
- `subfunctionStatus`：记录子功能块（如排序）的状态。

#### 5. **异常处理**
- 如果 `rangeOutlier` 非法，返回 `ERR_RANGE_NOT_OK`。
- 如果数组边界非法，返回 `ERR_NEG_ARR_BOUND`。
- 如果排序失败，返回 `ERR_SHELL_SORT`。

#### 6. **代码调整建议**
- 如果输入数组为空或长度为 1，需要特殊处理（当前代码未覆盖）。
- 可以增加对 `rangeOutlier = 0` 时的优化路径，跳过异常值检测。
- 偏度计算的分母（IQR）可能为 0，需要额外检查。

### 总结
该功能块的核心是通过排序和插值计算箱线图的统计量，并支持异常值检测。算法流程清晰，但需注意输入验证和边界条件处理。