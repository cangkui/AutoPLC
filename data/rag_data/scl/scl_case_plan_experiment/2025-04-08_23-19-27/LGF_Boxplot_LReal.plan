### 算法流程描述（适用于统计计算类功能块）

#### 1. 核心设计思路
- **触发机制**：采用边沿触发执行模式（通过`execute`信号的上升沿）
- **数据预处理**：必须先对输入数组进行排序（使用Shell Sort算法）
- **分步计算**：按照统计学计算顺序依次计算各项指标
- **异常处理**：包含参数校验和计算过程错误检测

#### 2. 关键处理流程
1. **触发检测阶段**
   - 检测`execute`信号的上升沿
   - 获取数组边界信息（LOWER/UPPER_BOUND）
   - 初始化所有统计变量

2. **参数验证阶段**
   - 检查`rangeOutlier`参数有效性（>1.0或=0）
   - 验证数组索引非负

3. **核心计算阶段**
   ```text
   a. 数据排序 → b. 计算四分位数 → c. 异常值检测 → d. 偏度计算
   ```

4. **输出处理阶段**
   - 根据`rangeOutlier`参数选择输出常规极值或剔除异常值后的极值
   - 统一设置状态码和错误标志

#### 3. 典型计算模式（可复用模式）
- **中位数计算**：区分奇偶数组长度的不同算法
- **四分位计算**：采用线性插值法（适用于非整数位置）
- **异常值检测**：基于四分位距(IQR)的动态范围检测
- **批量统计**：通过单次排序支持多指标计算

#### 4. 异常处理规范
- **错误分类**：
  - 参数错误（ERR_RANGE_NOT_OK）
  - 数组错误（ERR_NEG_ARR_BOUND）
  - 排序错误（ERR_SHELL_SORT）
- **状态传递**：通过`status`和`subfunctionStatus`级联传递子功能状态

#### 5. 优化建议
1. 对于大型数组，可考虑分块处理
2. 可扩展支持其他统计指标（如标准差）
3. 可增加计算进度反馈机制

> 该模式适用于需要基于排序数据的各类统计分析功能块开发，如直方图统计、正态性检验等场景。核心在于建立可靠的数据预处理机制和分步骤的指标计算流程。