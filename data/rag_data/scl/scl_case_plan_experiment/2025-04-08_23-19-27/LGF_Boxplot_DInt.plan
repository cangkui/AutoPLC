### 算法流程描述（适用于类似统计计算功能块）

#### 1. 输入检测与初始化阶段
- **边缘检测**：通过比较当前execute信号和上一次状态，检测上升沿触发计算
- **数组边界检查**：获取输入数组的上下界，验证数据有效性
- **参数验证**：检查rangeOutlier参数是否在有效范围内（>1.0或=0）
- **状态初始化**：重置所有统计变量和输出状态

#### 2. 数据处理阶段
- **数据排序**：调用排序算法（如Shell排序）对输入数组进行升序排列
- **元素计数**：计算数组有效长度（考虑可能的负索引）
- **中位数计算**：
  - 偶数个元素：取中间两个数的平均值
  - 奇数个元素：直接取中间值
- **四分位数计算**：
  - Q25：使用(n+3)/4公式进行线性插值计算
  - Q75：使用(3n+1)/4公式进行线性插值计算

#### 3. 异常值处理阶段（当rangeOutlier≠0时）
- **计算四分位距**：IQR = Q75 - Q25
- **确定异常值边界**：
  - 下限：Q25 - k*IQR
  - 上限：Q75 + k*IQR
- **异常值检测**：
  - 正向扫描找最小正常值
  - 反向扫描找最大正常值
- **异常值比例计算**：统计异常值占总数据的百分比

#### 4. 统计量计算阶段
- **偏度计算**：使用公式 (Q75 + Q25 - 2*Median)/IQR
- **结果选择**：根据rangeOutlier参数决定使用原始极值还是过滤后的极值

#### 5. 输出阶段
- **状态码设置**：根据处理结果设置错误标志和状态字
- **结果输出**：将计算好的统计量写入输出变量
- **执行控制**：保持ENO始终为TRUE，通过专用error输出传递错误状态

### 设计原则迁移建议

1. **模块化处理流程**：将计算过程划分为清晰的逻辑区域（初始化、验证、计算、输出）
2. **边缘触发机制**：适用于需要单次执行的统计计算任务
3. **参数化异常检测**：通过可配置参数控制异常值检测严格度
4. **双模式输出**：支持包含/排除异常值两种结果输出方式
5. **状态码体系**：建立完整的错误代码和状态跟踪机制
6. **类型安全转换**：在混合类型运算时显式处理类型转换

这种结构适用于需要处理数组数据、进行统计分析的功能块实现，特别是需要可配置参数和完整状态报告的场景。