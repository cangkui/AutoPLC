### 算法流程描述

#### 1. **模式判断**
- 首先检查 `button1` 的状态：
  - **手动模式 (`button1 = FALSE`)**：根据 `button2` 和 `button3` 的组合控制灯光。
  - **自动模式 (`button1 = TRUE`)**：灯光按固定顺序循环切换。

#### 2. **手动模式逻辑**
- **所有按钮关闭 (`button2 = 0` 且 `button3 = 0`)**：
  - 所有灯关闭 (`greenLight = 0`, `redLight = 0`, `yellowLight = 0`)。
- **`button2 = 1` 且 `button3 = 0`**：
  - `greenLight` 常亮。
  - `redLight` 以 0.5Hz 频率闪烁（1秒亮，1秒灭）。
- **`button2 = 0` 且 `button3 = 1`**：
  - `redLight` 常亮。
  - `yellowLight` 以 1Hz 频率闪烁（1秒亮，1秒灭）。
- **`button2 = 1` 且 `button3 = 1`**：
  - `yellowLight` 常亮。
  - `greenLight` 以 1Hz 频率闪烁（1秒亮，1秒灭）。

#### 3. **自动模式逻辑**
- **状态机控制**：
  - **状态 0**：
    - `greenLight` 亮，其他灯灭。
    - 持续 1 秒后切换到状态 1。
  - **状态 1**：
    - `redLight` 亮，其他灯灭。
    - 持续 1 秒后切换到状态 2。
  - **状态 2**：
    - `yellowLight` 亮，其他灯灭。
    - 持续 1 秒后切换回状态 0。

#### 4. **定时器使用**
- **手动模式**：
  - 使用两个定时器 (`ManModeTimer1` 和 `ManModeTimer2`) 交替触发，实现 0.5Hz 和 1Hz 的闪烁频率。
- **自动模式**：
  - 使用一个定时器 (`AutoModeTimer`) 控制每个状态的持续时间（1秒）。

#### 5. **状态切换**
- 在自动模式下，通过 `CycleStep` 变量记录当前状态，并在定时器到达设定时间后切换到下一个状态。

### 代码调整建议

1. **手动模式闪烁频率**：
   - 当前代码中 `ManModeTimer1` 和 `ManModeTimer2` 交替触发，但未明确区分 0.5Hz 和 1Hz 的闪烁需求。
   - 建议为不同的闪烁频率分别配置定时器，或在逻辑中明确区分频率。

2. **自动模式状态机**：
   - 当前代码中 `CycleStep` 的范围是 0-2，符合需求。
   - 可以增加注释说明每个状态对应的灯光组合，提高代码可读性。

3. **定时器复位**：
   - 在自动模式中，每次切换状态后需要复位定时器 (`AutoModeTimer(IN := FALSE)`)，确保下一次触发准确。

4. **变量初始化**：
   - 确保所有定时器和状态变量在初始化时处于正确的默认状态（如 `CycleStep := 0`）。

### 优化后的逻辑流程图

1. **模式选择**：
   - 根据 `button1` 选择手动或自动模式。
2. **手动模式**：
   - 根据 `button2` 和 `button3` 的组合设置灯光状态。
   - 使用定时器实现闪烁效果。
3. **自动模式**：
   - 使用状态机 (`CycleStep`) 控制灯光循环。
   - 每个状态持续 1 秒，由定时器触发切换。

通过以上流程，可以清晰实现需求中描述的所有功能。