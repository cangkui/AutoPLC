### 算法流程描述：随机UDInt范围数生成器

#### 1. 功能概述
该函数用于生成指定范围内的无符号双整型(UDInt)随机数，具有完善的错误处理机制。主要特点包括：
- 输入参数：最小值(minValue)和最大值(maxValue)
- 输出：随机数(返回值) + 错误状态(error/status/subfunctionStatus)
- 错误检测：最小值>最大值、系统时间读取错误

#### 2. 核心算法流程
1. **输入验证阶段**
   - 检查maxValue是否小于minValue → 返回ERR_MAX_LESS_MIN(16#8200)
   - 尝试读取系统时间(RD_SYS_T) → 检查是否返回ERR_RD_SYS_T(16#8600)

2. **随机数生成阶段**
   - **种子生成**：使用系统时间的纳秒部分作为随机种子
     - 将纳秒值(UDInt)转换为DWord以便字节操作
     - 通过字节交换(B3↔B0, B2↔B1)增强随机性
   - **归一化处理**：将随机种子转换为0.0-1.0范围的Real
     - 公式：tempNormReal = tempRandomValue / MAX_UDINT(4294967295)
   - **范围映射**：将归一化值映射到[minValue, maxValue]范围
     - 公式：result = minValue + (maxValue-minValue)*tempNormReal

3. **输出处理阶段**
   - 成功时设置状态码STATUS_FINISHED_NO_ERROR(16#0000)
   - 错误时返回相应错误码和零值

#### 3. 关键实现细节
- **随机性来源**：依赖系统时间的纳秒级精度
- **字节操作**：通过交换DWord的字节位置增强随机性
- **类型转换链**：UDInt→DWord→Real→UDInt的多次转换确保精度
- **边界处理**：严格验证输入范围，避免算术溢出

#### 4. 状态码说明
| 状态码       | 含义                     |
|--------------|--------------------------|
| 16#0000      | 成功执行                 |
| 16#8200      | 最大值小于最小值错误      |
| 16#8600      | 系统时间读取错误         |

#### 5. 优化建议
1. 可增加随机数重复检测机制
2. 可添加随机数生成算法选择参数
3. 对于高频调用场景，建议缓存系统时间读取结果

该实现通过系统时间获取随机种子，再通过数学变换得到目标范围内的随机数，具有较好的平台兼容性和执行效率。错误处理机制完善，适合工业控制环境使用。