### 算法流程描述

#### 1. **功能概述**
该功能块（`LGF_RectangleCI`）用于生成矩形波信号，其波形特征由输入参数（如幅值、偏移量、周期、相位偏移等）决定。信号生成基于调用该功能块的循环中断OB（`OB_CYCLIC`）的时间间隔。

#### 2. **输入参数**
- **amplitude**：矩形波的幅值（默认1.0）。
- **offset**：信号的直流偏移量。
- **periode**：矩形波的周期（单位：毫秒，默认1000ms）。
- **phaseShift**：相位偏移（单位：毫秒）。
- **callOB**：调用的循环中断OB编号。
- **reset**：复位信号（布尔值），用于重置内部计数器。

#### 3. **输出参数**
- **value**：当前矩形波的值。
- **error**：错误标志（`TRUE`表示错误）。
- **status**：功能块状态码（16#0000表示无错误）。
- **subFunctionStatus**：子功能块或系统块的状态码。

#### 4. **内部变量**
- **statCounter**：内部计数器，用于跟踪当前周期内的位置。
- **临时变量**（如`tempCycleTime`、`tempCyclePhase`等）：用于存储中间计算结果。

#### 5. **算法流程**
1. **获取采样时间**：
   - 使用`QRY_CINT`系统函数查询循环中断OB的周期时间和相位。
   - 错误处理：
     - 如果`QRY_CINT`返回非零值，设置错误标志并返回。
     - 如果OB不可用（`QRY_CINT_OB_UNAVAILABLE`），设置错误标志并返回。

2. **计算相位偏移**：
   - 将输入的`phaseShift`转换为整数，并通过取模运算确保其在周期范围内。

3. **复位逻辑**：
   - 如果`reset`为`TRUE`，重置内部计数器`statCounter`为相位偏移值，并将输出值`value`设为0。

4. **正常信号生成**：
   - 更新内部计数器`statCounter`：
     - 每次调用时，计数器增加`tempCycleTime / SECOND_IN_MS`（将毫秒转换为秒）。
     - 通过取模运算确保计数器在周期范围内。
   - 计算输出值`value`：
     - 基础值为`offset`。
     - 如果计数器在相位偏移后的前半周期内，输出`offset + amplitude`。
     - 否则，输出`offset - amplitude`。

5. **输出赋值**：
   - 将计算结果赋给`value`。
   - 设置错误标志`error`为`FALSE`，状态码为无错误。

#### 6. **关键逻辑**
- **矩形波生成**：通过比较计数器和周期的一半（加相位偏移）来决定输出高电平或低电平。
- **边缘情况处理**：
  - 复位信号优先于正常信号生成。
  - 错误状态会立即终止信号生成并返回默认值。

#### 7. **状态码**
- **16#0000**：无错误。
- **16#8600**：OB不可用。
- **16#8601**：`QRY_CINT`查询错误。

#### 8. **注意事项**
- 该功能块依赖于循环中断OB的调用间隔，因此必须确保OB的周期时间正确配置。
- 相位偏移和周期参数的单位需一致（毫秒）。
- 复位信号会强制重置内部状态，适合用于同步或初始化场景。