### 算法流程描述

#### 1. **功能概述**
该函数用于计算输入数组的元素数量（基于零的索引），并返回元素数量。如果输入不是数组类型或输入是布尔数组，则返回特定的错误代码。

#### 2. **输入参数**
- `array`：输入数组，类型为`Variant`，可以是任何类型的数组。

#### 3. **返回值**
- 返回值为`DInt`类型：
  - 如果输入是数组且不是布尔数组，返回数组的元素数量（基于零的索引）。
  - 如果输入不是数组，返回`-1`。
  - 如果输入是布尔数组，返回`-2`。

#### 4. **错误处理**
- 定义了常量错误代码：
  - `RETURN_NO_ARRAY`（-1）：输入不是数组。
  - `RETURN_NO_BOOL_ARRAYS_NOT_SUPPORTED`（-2）：输入是布尔数组（不支持）。

#### 5. **主逻辑流程**
1. **检查输入是否为数组**：
   - 使用`IS_ARRAY`函数检查输入是否为数组。
   - 如果输入不是数组，直接返回`-1`（`RETURN_NO_ARRAY`）。
2. **检查数组元素类型是否为布尔**：
   - 使用`TypeOfElements`函数检查数组元素类型。
   - 如果是布尔数组，返回`-2`（`RETURN_NO_BOOL_ARRAYS_NOT_SUPPORTED`）。
3. **计算数组元素数量**：
   - 如果输入是数组且不是布尔数组，使用`CountOfElements`函数计算元素数量。
   - 将结果转换为`DInt`类型并返回。
4. **输出结果**：
   - 将计算结果或错误代码赋值给函数返回值。
   - 设置`ENO`为`true`，表示函数执行成功（无运行时错误）。

#### 6. **注意事项**
- 该函数不处理运行时错误（如内存不足等），仅通过返回值区分逻辑错误。
- 输入为`Variant`类型，因此需要动态类型检查。
- 布尔数组被明确排除支持，需在文档中说明。

#### 7. **伪代码逻辑**
```plaintext
IF 输入不是数组 THEN
    返回 -1
ELSE IF 输入是布尔数组 THEN
    返回 -2
ELSE
    返回 数组元素数量
END_IF
```

#### 8. **代码结构建议**
- 使用`IS_ARRAY`和`TypeOfElements`进行类型检查。
- 使用`CountOfElements`计算数组长度。
- 直接返回结果或错误代码，无需额外错误处理。

#### 9. **扩展性考虑**
- 如果需要支持更多类型的数组，可以扩展`TypeOfElements`的判断逻辑。
- 如果需要更详细的错误信息，可以增加返回值或输出参数。