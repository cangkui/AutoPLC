### 算法流程描述：字符串到时间转换函数

#### 1. 功能概述
该函数用于将特定格式的时间字符串转换为PLC系统的时间数据类型(Time)。输入字符串格式示例："1D3H45M6S0MS"，输出为T#1D_3H_45M_6S格式的时间值。

#### 2. 核心处理逻辑
1) **初始化阶段**：
   - 将输入字符串复制到临时处理变量
   - 初始化时间累计值为0

2) **转换处理阶段**：
   - 采用顺序处理方式，依次处理天(D)、小时(H)、分钟(M)、秒(S)、毫秒(MS)单位
   - 对每个时间单位执行以下操作：
     a) 在字符串中查找单位标识符的位置
     b) 如果找到标识符：
        - 提取标识符前的数字部分并转换为数值
        - 根据单位类型乘以相应的毫秒系数(常量)
        - 将结果累加到总时间值
        - 从字符串中删除已处理的部分
     c) 如果未找到标识符，跳过该单位处理

3) **输出阶段**：
   - 将累计的毫秒数值转换为Time类型
   - 设置ENO为TRUE(虽然不使用ENO机制)

#### 3. 关键设计要点
- **单位处理顺序**：必须按照从大到小(天→毫秒)的顺序处理，确保正确解析复合单位
- **字符串操作**：使用FIND定位单位标识符，LEFT提取数值部分，DELETE删除已处理部分
- **数值转换**：所有时间单位都先转换为毫秒再累加，最后统一转换为Time类型
- **容错处理**：代码假设输入格式正确，没有添加错误检查机制

#### 4. 常量定义
定义了各时间单位对应的毫秒数常量：
- 天(MS_PER_DAY)
- 小时(MS_PER_HOUR) 
- 分钟(MS_PER_MINUTE)
- 秒(MS_PER_SECOND)
以及各单位的标识字符常量(D/H/M/S/MS)

#### 5. 扩展性考虑
虽然当前实现没有错误处理，但可以扩展：
- 添加输入格式验证
- 处理不完整的时间字符串(如只有"M"和"S")
- 添加负时间值支持
- 实现更严格的格式检查

这种分阶段、按单位顺序处理的方法可以很好地扩展到其他类似的时间/日期字符串转换场景。