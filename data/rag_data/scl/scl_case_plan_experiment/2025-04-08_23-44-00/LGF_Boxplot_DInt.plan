### 算法流程描述（Boxplot计算功能块）

#### 1. 功能概述
该功能块用于计算整数数组的箱线图统计量，包括：
- 四分位数（Q25、中位数、Q75）
- 最大值/最小值（考虑异常值过滤）
- 异常值比例（上下界）
- 数据偏度（Skewness）

#### 2. 核心处理逻辑

**触发机制**：
- 通过`execute`输入的上升沿触发计算
- 使用`statExecuteOld`变量实现边沿检测

**预处理阶段**：
1. 获取输入数组边界（LOWER_BOUND/UPPER_BOUND）
2. 初始化所有统计变量为默认值
3. 验证输入参数：
   - `rangeOutlier`必须>1.0或=0.0
   - 数组下界不能为负

**核心计算流程**：
1. **数据排序**：
   - 调用`LGF_Shell_DInt`实例对输入数组进行排序（Shell排序算法）

2. **四分位数计算**：
   - **中位数(Q50)**：
     - 偶数个元素：取中间两个数的平均值
     - 奇数个元素：取中间值
   - **Q25计算**：
     - 使用公式`k=(n+3)/4`定位分位点
     - 线性插值计算精确分位值
   - **Q75计算**：
     - 使用公式`k=(3n+1)/4`定位分位点
     - 线性插值计算精确分位值

3. **异常值检测**（当rangeOutlier≠0时）：
   - 计算四分位距(IQR) = Q75 - Q25
   - 确定异常值边界：
     - 下界：Q25 - rangeOutlier×IQR
     - 上界：Q75 + rangeOutlier×IQR
   - 遍历排序后的数组：
     - 从首部开始找第一个≥下界的值作为新最小值
     - 从尾部开始找第一个≤上界的值作为新最大值
   - 计算异常值比例（占总数百分比）

4. **偏度计算**：
   - 使用公式：`(Q25 + Q75 - 2×中位数) / (Q75 - Q25)`

#### 3. 输出处理
- 根据rangeOutlier选择输出原始或过滤后的极值
- 设置状态码和错误标志：
  - 错误状态通过status变量的最高位表示
  - 子功能状态码传递

#### 4. 异常处理
- 错误代码定义：
  - 16#8200：数组下界为负
  - 16#8600：排序错误
  - 16#9101：rangeOutlier参数无效

#### 5. 设计要点
1. **内存管理**：
   - 直接操作输入/输出数组，避免数据拷贝
   - 使用临时变量存储中间计算结果

2. **数值处理**：
   - 精确处理分位点插值（避免整数除法误差）
   - 使用LReal类型保证计算精度

3. **性能优化**：
   - 仅当execute上升沿时执行完整计算
   - 排序后的数组可复用进行多项统计计算

4. **可配置性**：
   - 通过rangeOutlier=0可禁用异常值过滤
   - 输出包含原始统计量和过滤后统计量

#### 6. 扩展性考虑
- 可增加数组长度校验（最小有效数据量）
- 可扩展支持其他数值类型（如Real）
- 可增加计算过程的状态输出（如进度百分比）

该设计实现了完整的箱线图统计计算流程，通过模块化区域划分（验证、计算、输出）保证代码可维护性，同时满足工业控制环境对可靠性和性能的要求。