这个需求是要实现一个名为"LGF_BitTest"的函数，用于检查DWORD类型变量中指定位置的位状态。

### 算法流程描述：

1. **输入参数处理**：
   - 接收两个输入参数：
     - `value`：待检查的DWORD值
     - `bitNo`：要检查的位号(0-31)

2. **位检查逻辑**：
   - 使用位运算来检查指定位置的状态：
     a. 创建一个掩码：将1左移`bitNo`位(使用MOD 32确保位号在有效范围内)
     b. 将输入值与掩码进行按位与(AND)操作
     c. 检查结果是否不等于0，如果为真则表示该位是1，否则是0

3. **返回值**：
   - 返回布尔值，表示指定位的状态(TRUE=1，FALSE=0)

4. **边界处理**：
   - 使用MOD运算确保位号在0-31范围内
   - 不需要特别的错误处理，函数总是能返回有效结果

### 关键点说明：

- 位运算的核心思想是通过创建掩码来隔离特定位置的值
- 使用MOD 32确保即使传入的位号大于31也能正确处理
- 函数设计简洁高效，直接返回位状态而不需要额外的错误处理
- 可以适用于WORD和BYTE类型，只需进行适当类型转换

这个实现很好地利用了PLC的位操作指令，既高效又可靠，是处理位状态检查的典型方法。