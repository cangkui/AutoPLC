### 算法流程描述（适用于类似线性化转换需求）

#### 1. 核心设计思路
- **分段线性映射**：将输入范围划分为多个区间，每个区间独立进行线性转换
- **边界处理**：对超出范围的输入值进行钳位处理，并标记错误状态
- **参数化设计**：使用常量定义各区间边界和映射范围，便于维护和修改

#### 2. 关键处理流程
1. **初始化阶段**：
   - 重置错误状态和状态码
   - 准备各区间边界常量（已在VAR CONSTANT中定义）

2. **输入验证阶段**：
   - 检查输入值是否在有效范围内（1200-7000）
   - 对于越界值：
     - 小于1200 → 输出150（MIN_LINEAR_1）
     - 大于7000 → 输出720（MAX_LINEAR_3）
     - 设置错误标志和状态码

3. **线性转换阶段**（三区间处理）：
   - **区间1（1200-3600）**：
     ```math
     Output = 150 + (Input - 1200)/2400 * 90
     ```
   - **区间2（3600-4800）**：
     ```math
     Output = 240 + (Input - 3600)/1200 * 320
     ```
   - **区间3（4800-7000）**：
     ```math
     Output = 560 + (Input - 4800)/2200 * 160
     ```

4. **输出处理阶段**：
   - 直接输出计算后的线性化值
   - 错误状态和状态码已在前述步骤设置

#### 3. 扩展性建议
- 可通过增加常量定义来扩展更多区间
- 可添加比例系数微调功能
- 可增加输出限幅保护

#### 4. 典型应用场景
- 传感器信号标准化（如温度变送器）
- 非线性特性补偿
- 多量程仪表切换

这种设计模式适用于任何需要将输入值分段映射到不同输出范围的场景，特别是当不同区间需要不同的缩放比例时。通过修改常量参数即可适应不同的量程要求，而无需改动核心算法逻辑。