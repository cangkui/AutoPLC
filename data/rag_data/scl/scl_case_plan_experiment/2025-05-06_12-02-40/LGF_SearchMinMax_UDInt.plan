这是一个数据处理任务，算法流程如下：

1. 输入处理：
   - 获取输入数组的上下界索引值
   - 验证数组维度为一维数组

2. 初始化阶段：
   - 将数组第一个元素同时设为初始最小值和最大值
   - 初始化最小值和最大值的索引为数组第一个元素的索引

3. 搜索阶段：
   - 从数组第二个元素开始遍历整个数组
   - 对每个元素执行以下比较：
     a. 如果当前元素小于当前最小值：
        - 更新最小值变量
        - 更新最小值索引
     b. 如果当前元素大于当前最大值：
        - 更新最大值变量
        - 更新最大值索引

4. 输出处理：
   - 将最终确定的最小值和对应索引写入输出变量
   - 将最终确定的最大值和对应索引写入输出变量
   - 设置函数执行成功标志

5. 边界情况处理：
   - 空数组情况由数组边界检查自动处理（上下界相等时循环不会执行）
   - 单元素数组情况会自动处理（循环不会执行，初始值即为结果）

该算法采用线性搜索策略，时间复杂度为O(n)，适用于任意大小的UDInt数组。算法通过单次遍历同时查找最小值和最大值，优化了性能。