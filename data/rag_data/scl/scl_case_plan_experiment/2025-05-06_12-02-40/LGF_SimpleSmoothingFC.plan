这是一个数据处理任务，算法流程如下：

1. 输入/输出数组边界检查：
   - 获取输入数组values的下标边界（lower_bound和upper_bound）
   - 计算输入数组元素数量
   - 获取输出数组smoothedValues的下标边界
   - 计算输出数组元素数量

2. 错误检查：
   - 检查输入和输出数组大小是否一致：
     * 如果不一致，设置error为TRUE，status为ERR_ARRAY_DIFFERENT，并立即返回
   - 检查输入数组元素数量是否足够（至少3个元素）：
     * 如果不足，设置error为TRUE，status为ERR_NOT_ENOUGH_VALUES，并立即返回

3. 平滑计算：
   - 对输入数组中间元素（从第2个到倒数第2个）进行遍历：
     * 对每个元素，计算其与前一个和后一个元素的平均值
     * 将计算结果存入输出数组对应位置

4. 状态设置：
   - 设置error为FALSE
   - 设置status为STATUS_FINISHED_NO_ERROR
   - 强制ENO为TRUE（不使用ENO机制）

注意点：
- 该算法采用3点移动平均法进行平滑处理
- 边界元素（第一个和最后一个）不会被处理
- 错误处理优先于计算执行
- 数组索引从获取的实际边界开始计算