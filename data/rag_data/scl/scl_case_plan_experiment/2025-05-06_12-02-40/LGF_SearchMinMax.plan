这是一个数据处理任务，算法流程如下：

1. 初始化阶段：
   - 初始化错误标志和状态码为无错误状态
   - 初始化子函数状态为无错误

2. 输入验证阶段：
   - 检查输入变量是否为数组类型
     - 如果不是数组，设置错误标志和相应状态码后返回
   - 检查数组元素类型与输出变量类型是否一致
     - 如果不一致，设置错误标志和相应状态码后返回
   - 计算数组结束索引（数组长度减1）

3. 数组搜索阶段（按数据类型分支处理）：
   - 根据数组元素类型选择相应处理分支（Int/UInt/DInt/UDInt/USInt/SInt/Real/LReal）
   - 每个分支的处理流程：
     a. 将数组第一个元素设为初始最大值和最小值
     b. 从第二个元素开始遍历数组：
        - 读取当前元素值
        - 与当前最小值比较，更新最小值和索引
        - 与当前最大值比较，更新最大值和索引
     c. 检查子函数调用是否出错，若出错则设置错误标志并返回

4. 输出结果阶段：
   - 将找到的最小值和最大值写入输出变量
   - 将找到的最小值和最大值的索引写入输出变量
   - 检查子函数调用是否出错，若出错则设置错误标志并返回

5. 错误处理机制：
   - 在整个过程中，任何子函数调用出错都会立即设置错误标志和状态码
   - 错误类型包括：非数组输入、类型不匹配、数据移动错误等

注意点：
- 该算法支持多种数值类型的数组处理
- 使用Variant类型实现泛型处理
- 通过状态码和错误标志提供详细的错误信息
- 采用分步验证确保数据一致性