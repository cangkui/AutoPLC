

以下是基于需求和代码的算法流程描述：

算法流程：箱线图统计计算功能块
===============================
触发机制：
1. 检测execute信号的上升沿，触发计算周期
2. 若检测到负数组边界（tempArrLowBound < 0），设置ERR_NEG_ARR_BOUND错误

预处理阶段：
3. 计算数组元素总数：n = 上界 - 下界 + 1
4. 调用Shell排序算法对输入数组进行升序排列
   → 若排序失败则设置ERR_SHELL_SORT错误

统计计算核心流程：
5. 确定极值：
   - 原始最小值：values[0]
   - 原始最大值：values[n-1]

6. 中位数计算：
   if 元素数量为偶数：
     取中间两个元素的平均值
   else:
     取中间元素的值

7. 四分位数计算（线性插值法）：
   Q25计算：
   k = (n + 3)/4.0
   Q25 = values[⌊k⌋] + (k的小数部分)*(values[⌊k⌋+1] - values[⌊k⌋])

   Q75计算：
   k = (3n + 1)/4.0
   Q75 = values[⌊k⌋] + (k的小数部分)*(values[⌊k⌋+1] - values[⌊k⌋])

离群值处理：
8. 当rangeOutlier ≠ 0时：
   a. 计算IQR = Q75 - Q25
   b. 确定离群边界：
      - 下边界 = Q25 - rangeOutlier*IQR
      - 上边界 = Q75 + rangeOutlier*IQR
   
   c. 寻找有效极值：
      - 正向遍历找首个≥下边界的值 → 新min
      - 逆向遍历找首个≤上边界的值 → 新max
   
   d. 计算离群比例：
      - 下离群比例 = (离群点数量/n)*100%
      - 上离群比例 = (离群点数量/n)*100%

9. 偏度计算：
   Skewness = (Q25 + Q75 - 2*median) / (Q75 - Q25)

输出处理：
10. 结果选择逻辑：
    if rangeOutlier ≠ 0 → 输出新min/max和离群比例
    else → 输出原始min/max

11. 错误状态映射：
    - error标志 = status的最高位
    - 主状态码透传status
    - 子状态码记录排序等子功能状态

关键调整说明：
- 保持数组索引从0开始的处理（适配PLC数组索引特性）
- 使用TRUNC+FRAC代替浮点索引的精确处理
- 通过常量定义维护数值计算的稳定性
- 结果输出阶段保留原始极值和新极值的切换逻辑
- 错误检测优先于计算流程，确保异常及时终止处理

该流程准确反映了代码实现中的关键步骤，同时保持与箱线图标准算法的一致性，特别针对PLC环境进行了索引处理和错误处理优化。