

### 算法流程描述
1. **输入接收**：接收32位二进制数`variableBinary`作为输入参数
2. **右移运算**：将输入数值右移1位（使用SHR函数实现）
3. **异或运算**：
   - 使用XOR运算符将原始二进制值与右移后的值进行异或
   - 数学表达式：Gray = Binary ^ (Binary >> 1)
4. **结果输出**：
   - 将运算结果直接赋值给函数返回值
   - 不涉及错误处理，始终设置ENO为TRUE

### 代码调整说明
1. **常量定义优化**：
   - 移位位数使用预定义常量`BIT_SHIFT_1`（值固定为1）
   - 增强代码可读性和可维护性
2. **运算整合**：
   - 单行完成移位和异或运算
   - 直接映射数学公式实现
3. **返回值处理**：
   - 计算结果直接赋值给函数名变量`#LGF_BinaryToGray`
   - 保持与SCL函数定义规范一致

### 关键实现点
- **位运算优化**：利用SHR函数实现右移，XOR实现异或运算
- **无符号处理**：默认采用逻辑右移（高位补零），符合Gray码转换要求
- **数值范围**：支持32位DWord范围（0 ~ 4,294,967,295）的转换
- **性能优化**：单周期完成转换操作，无循环和条件判断